/*
Exchange Assets

Description of the Exchange Assets API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package exchange_assets

import (
	"encoding/json"
)

// checks if the File type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &File{}

// File struct for File
type File struct {
	Classifier *string `json:"classifier,omitempty"`
	Packaging *string `json:"packaging,omitempty"`
	ExternalLink *string `json:"externalLink,omitempty"`
	DownloadURL *string `json:"downloadURL,omitempty"`
	Md5 *string `json:"md5,omitempty"`
	Sha1 *string `json:"sha1,omitempty"`
	CreatedDate *string `json:"createdDate,omitempty"`
	MainFile NullableString `json:"mainFile,omitempty"`
	IsGenerated *bool `json:"isGenerated,omitempty"`
}

// NewFile instantiates a new File object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFile() *File {
	this := File{}
	return &this
}

// NewFileWithDefaults instantiates a new File object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFileWithDefaults() *File {
	this := File{}
	return &this
}

// GetClassifier returns the Classifier field value if set, zero value otherwise.
func (o *File) GetClassifier() string {
	if o == nil || IsNil(o.Classifier) {
		var ret string
		return ret
	}
	return *o.Classifier
}

// GetClassifierOk returns a tuple with the Classifier field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *File) GetClassifierOk() (*string, bool) {
	if o == nil || IsNil(o.Classifier) {
		return nil, false
	}
	return o.Classifier, true
}

// HasClassifier returns a boolean if a field has been set.
func (o *File) HasClassifier() bool {
	if o != nil && !IsNil(o.Classifier) {
		return true
	}

	return false
}

// SetClassifier gets a reference to the given string and assigns it to the Classifier field.
func (o *File) SetClassifier(v string) {
	o.Classifier = &v
}

// GetPackaging returns the Packaging field value if set, zero value otherwise.
func (o *File) GetPackaging() string {
	if o == nil || IsNil(o.Packaging) {
		var ret string
		return ret
	}
	return *o.Packaging
}

// GetPackagingOk returns a tuple with the Packaging field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *File) GetPackagingOk() (*string, bool) {
	if o == nil || IsNil(o.Packaging) {
		return nil, false
	}
	return o.Packaging, true
}

// HasPackaging returns a boolean if a field has been set.
func (o *File) HasPackaging() bool {
	if o != nil && !IsNil(o.Packaging) {
		return true
	}

	return false
}

// SetPackaging gets a reference to the given string and assigns it to the Packaging field.
func (o *File) SetPackaging(v string) {
	o.Packaging = &v
}

// GetExternalLink returns the ExternalLink field value if set, zero value otherwise.
func (o *File) GetExternalLink() string {
	if o == nil || IsNil(o.ExternalLink) {
		var ret string
		return ret
	}
	return *o.ExternalLink
}

// GetExternalLinkOk returns a tuple with the ExternalLink field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *File) GetExternalLinkOk() (*string, bool) {
	if o == nil || IsNil(o.ExternalLink) {
		return nil, false
	}
	return o.ExternalLink, true
}

// HasExternalLink returns a boolean if a field has been set.
func (o *File) HasExternalLink() bool {
	if o != nil && !IsNil(o.ExternalLink) {
		return true
	}

	return false
}

// SetExternalLink gets a reference to the given string and assigns it to the ExternalLink field.
func (o *File) SetExternalLink(v string) {
	o.ExternalLink = &v
}

// GetDownloadURL returns the DownloadURL field value if set, zero value otherwise.
func (o *File) GetDownloadURL() string {
	if o == nil || IsNil(o.DownloadURL) {
		var ret string
		return ret
	}
	return *o.DownloadURL
}

// GetDownloadURLOk returns a tuple with the DownloadURL field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *File) GetDownloadURLOk() (*string, bool) {
	if o == nil || IsNil(o.DownloadURL) {
		return nil, false
	}
	return o.DownloadURL, true
}

// HasDownloadURL returns a boolean if a field has been set.
func (o *File) HasDownloadURL() bool {
	if o != nil && !IsNil(o.DownloadURL) {
		return true
	}

	return false
}

// SetDownloadURL gets a reference to the given string and assigns it to the DownloadURL field.
func (o *File) SetDownloadURL(v string) {
	o.DownloadURL = &v
}

// GetMd5 returns the Md5 field value if set, zero value otherwise.
func (o *File) GetMd5() string {
	if o == nil || IsNil(o.Md5) {
		var ret string
		return ret
	}
	return *o.Md5
}

// GetMd5Ok returns a tuple with the Md5 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *File) GetMd5Ok() (*string, bool) {
	if o == nil || IsNil(o.Md5) {
		return nil, false
	}
	return o.Md5, true
}

// HasMd5 returns a boolean if a field has been set.
func (o *File) HasMd5() bool {
	if o != nil && !IsNil(o.Md5) {
		return true
	}

	return false
}

// SetMd5 gets a reference to the given string and assigns it to the Md5 field.
func (o *File) SetMd5(v string) {
	o.Md5 = &v
}

// GetSha1 returns the Sha1 field value if set, zero value otherwise.
func (o *File) GetSha1() string {
	if o == nil || IsNil(o.Sha1) {
		var ret string
		return ret
	}
	return *o.Sha1
}

// GetSha1Ok returns a tuple with the Sha1 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *File) GetSha1Ok() (*string, bool) {
	if o == nil || IsNil(o.Sha1) {
		return nil, false
	}
	return o.Sha1, true
}

// HasSha1 returns a boolean if a field has been set.
func (o *File) HasSha1() bool {
	if o != nil && !IsNil(o.Sha1) {
		return true
	}

	return false
}

// SetSha1 gets a reference to the given string and assigns it to the Sha1 field.
func (o *File) SetSha1(v string) {
	o.Sha1 = &v
}

// GetCreatedDate returns the CreatedDate field value if set, zero value otherwise.
func (o *File) GetCreatedDate() string {
	if o == nil || IsNil(o.CreatedDate) {
		var ret string
		return ret
	}
	return *o.CreatedDate
}

// GetCreatedDateOk returns a tuple with the CreatedDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *File) GetCreatedDateOk() (*string, bool) {
	if o == nil || IsNil(o.CreatedDate) {
		return nil, false
	}
	return o.CreatedDate, true
}

// HasCreatedDate returns a boolean if a field has been set.
func (o *File) HasCreatedDate() bool {
	if o != nil && !IsNil(o.CreatedDate) {
		return true
	}

	return false
}

// SetCreatedDate gets a reference to the given string and assigns it to the CreatedDate field.
func (o *File) SetCreatedDate(v string) {
	o.CreatedDate = &v
}

// GetMainFile returns the MainFile field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *File) GetMainFile() string {
	if o == nil || IsNil(o.MainFile.Get()) {
		var ret string
		return ret
	}
	return *o.MainFile.Get()
}

// GetMainFileOk returns a tuple with the MainFile field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *File) GetMainFileOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.MainFile.Get(), o.MainFile.IsSet()
}

// HasMainFile returns a boolean if a field has been set.
func (o *File) HasMainFile() bool {
	if o != nil && o.MainFile.IsSet() {
		return true
	}

	return false
}

// SetMainFile gets a reference to the given NullableString and assigns it to the MainFile field.
func (o *File) SetMainFile(v string) {
	o.MainFile.Set(&v)
}
// SetMainFileNil sets the value for MainFile to be an explicit nil
func (o *File) SetMainFileNil() {
	o.MainFile.Set(nil)
}

// UnsetMainFile ensures that no value is present for MainFile, not even an explicit nil
func (o *File) UnsetMainFile() {
	o.MainFile.Unset()
}

// GetIsGenerated returns the IsGenerated field value if set, zero value otherwise.
func (o *File) GetIsGenerated() bool {
	if o == nil || IsNil(o.IsGenerated) {
		var ret bool
		return ret
	}
	return *o.IsGenerated
}

// GetIsGeneratedOk returns a tuple with the IsGenerated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *File) GetIsGeneratedOk() (*bool, bool) {
	if o == nil || IsNil(o.IsGenerated) {
		return nil, false
	}
	return o.IsGenerated, true
}

// HasIsGenerated returns a boolean if a field has been set.
func (o *File) HasIsGenerated() bool {
	if o != nil && !IsNil(o.IsGenerated) {
		return true
	}

	return false
}

// SetIsGenerated gets a reference to the given bool and assigns it to the IsGenerated field.
func (o *File) SetIsGenerated(v bool) {
	o.IsGenerated = &v
}

func (o File) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o File) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Classifier) {
		toSerialize["classifier"] = o.Classifier
	}
	if !IsNil(o.Packaging) {
		toSerialize["packaging"] = o.Packaging
	}
	if !IsNil(o.ExternalLink) {
		toSerialize["externalLink"] = o.ExternalLink
	}
	if !IsNil(o.DownloadURL) {
		toSerialize["downloadURL"] = o.DownloadURL
	}
	if !IsNil(o.Md5) {
		toSerialize["md5"] = o.Md5
	}
	if !IsNil(o.Sha1) {
		toSerialize["sha1"] = o.Sha1
	}
	if !IsNil(o.CreatedDate) {
		toSerialize["createdDate"] = o.CreatedDate
	}
	if o.MainFile.IsSet() {
		toSerialize["mainFile"] = o.MainFile.Get()
	}
	if !IsNil(o.IsGenerated) {
		toSerialize["isGenerated"] = o.IsGenerated
	}
	return toSerialize, nil
}

type NullableFile struct {
	value *File
	isSet bool
}

func (v NullableFile) Get() *File {
	return v.value
}

func (v *NullableFile) Set(val *File) {
	v.value = val
	v.isSet = true
}

func (v NullableFile) IsSet() bool {
	return v.isSet
}

func (v *NullableFile) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFile(val *File) *NullableFile {
	return &NullableFile{value: val, isSet: true}
}

func (v NullableFile) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFile) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


