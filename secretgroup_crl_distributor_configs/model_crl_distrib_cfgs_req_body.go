/*
Secret Group CRL Distributor Configs API

Secret Group CRL Distributor Configs API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package secretgroup_crl_distributor_configs

import (
	"encoding/json"
)

// checks if the CrlDistribCfgsReqBody type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CrlDistribCfgsReqBody{}

// CrlDistribCfgsReqBody struct for CrlDistribCfgsReqBody
type CrlDistribCfgsReqBody struct {
	// Date on which this secret should expire. If not set, by default, it will be set to one year from the date on which this secret is created/updated. Once the secret expires, a grant can not be requested for it. 
	ExpirationDate *string `json:"expirationDate,omitempty"`
	// URL where complete CRL file should be retrieved
	CompleteCrlIssuerUrl *string `json:"completeCrlIssuerUrl,omitempty"`
	// How frequently should the distributor site be checked for new crl files(in minutes)
	Frequency *int32 `json:"frequency,omitempty"`
	Name *string `json:"name,omitempty"`
	DistributorCertificate *SecretPath `json:"distributorCertificate,omitempty"`
	DeltaCrlIssuerUrl *string `json:"deltaCrlIssuerUrl,omitempty"`
	CaCertificate *SecretPath `json:"caCertificate,omitempty"`
}

// NewCrlDistribCfgsReqBody instantiates a new CrlDistribCfgsReqBody object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCrlDistribCfgsReqBody() *CrlDistribCfgsReqBody {
	this := CrlDistribCfgsReqBody{}
	return &this
}

// NewCrlDistribCfgsReqBodyWithDefaults instantiates a new CrlDistribCfgsReqBody object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCrlDistribCfgsReqBodyWithDefaults() *CrlDistribCfgsReqBody {
	this := CrlDistribCfgsReqBody{}
	return &this
}

// GetExpirationDate returns the ExpirationDate field value if set, zero value otherwise.
func (o *CrlDistribCfgsReqBody) GetExpirationDate() string {
	if o == nil || IsNil(o.ExpirationDate) {
		var ret string
		return ret
	}
	return *o.ExpirationDate
}

// GetExpirationDateOk returns a tuple with the ExpirationDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CrlDistribCfgsReqBody) GetExpirationDateOk() (*string, bool) {
	if o == nil || IsNil(o.ExpirationDate) {
		return nil, false
	}
	return o.ExpirationDate, true
}

// HasExpirationDate returns a boolean if a field has been set.
func (o *CrlDistribCfgsReqBody) HasExpirationDate() bool {
	if o != nil && !IsNil(o.ExpirationDate) {
		return true
	}

	return false
}

// SetExpirationDate gets a reference to the given string and assigns it to the ExpirationDate field.
func (o *CrlDistribCfgsReqBody) SetExpirationDate(v string) {
	o.ExpirationDate = &v
}

// GetCompleteCrlIssuerUrl returns the CompleteCrlIssuerUrl field value if set, zero value otherwise.
func (o *CrlDistribCfgsReqBody) GetCompleteCrlIssuerUrl() string {
	if o == nil || IsNil(o.CompleteCrlIssuerUrl) {
		var ret string
		return ret
	}
	return *o.CompleteCrlIssuerUrl
}

// GetCompleteCrlIssuerUrlOk returns a tuple with the CompleteCrlIssuerUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CrlDistribCfgsReqBody) GetCompleteCrlIssuerUrlOk() (*string, bool) {
	if o == nil || IsNil(o.CompleteCrlIssuerUrl) {
		return nil, false
	}
	return o.CompleteCrlIssuerUrl, true
}

// HasCompleteCrlIssuerUrl returns a boolean if a field has been set.
func (o *CrlDistribCfgsReqBody) HasCompleteCrlIssuerUrl() bool {
	if o != nil && !IsNil(o.CompleteCrlIssuerUrl) {
		return true
	}

	return false
}

// SetCompleteCrlIssuerUrl gets a reference to the given string and assigns it to the CompleteCrlIssuerUrl field.
func (o *CrlDistribCfgsReqBody) SetCompleteCrlIssuerUrl(v string) {
	o.CompleteCrlIssuerUrl = &v
}

// GetFrequency returns the Frequency field value if set, zero value otherwise.
func (o *CrlDistribCfgsReqBody) GetFrequency() int32 {
	if o == nil || IsNil(o.Frequency) {
		var ret int32
		return ret
	}
	return *o.Frequency
}

// GetFrequencyOk returns a tuple with the Frequency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CrlDistribCfgsReqBody) GetFrequencyOk() (*int32, bool) {
	if o == nil || IsNil(o.Frequency) {
		return nil, false
	}
	return o.Frequency, true
}

// HasFrequency returns a boolean if a field has been set.
func (o *CrlDistribCfgsReqBody) HasFrequency() bool {
	if o != nil && !IsNil(o.Frequency) {
		return true
	}

	return false
}

// SetFrequency gets a reference to the given int32 and assigns it to the Frequency field.
func (o *CrlDistribCfgsReqBody) SetFrequency(v int32) {
	o.Frequency = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *CrlDistribCfgsReqBody) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CrlDistribCfgsReqBody) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *CrlDistribCfgsReqBody) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *CrlDistribCfgsReqBody) SetName(v string) {
	o.Name = &v
}

// GetDistributorCertificate returns the DistributorCertificate field value if set, zero value otherwise.
func (o *CrlDistribCfgsReqBody) GetDistributorCertificate() SecretPath {
	if o == nil || IsNil(o.DistributorCertificate) {
		var ret SecretPath
		return ret
	}
	return *o.DistributorCertificate
}

// GetDistributorCertificateOk returns a tuple with the DistributorCertificate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CrlDistribCfgsReqBody) GetDistributorCertificateOk() (*SecretPath, bool) {
	if o == nil || IsNil(o.DistributorCertificate) {
		return nil, false
	}
	return o.DistributorCertificate, true
}

// HasDistributorCertificate returns a boolean if a field has been set.
func (o *CrlDistribCfgsReqBody) HasDistributorCertificate() bool {
	if o != nil && !IsNil(o.DistributorCertificate) {
		return true
	}

	return false
}

// SetDistributorCertificate gets a reference to the given SecretPath and assigns it to the DistributorCertificate field.
func (o *CrlDistribCfgsReqBody) SetDistributorCertificate(v SecretPath) {
	o.DistributorCertificate = &v
}

// GetDeltaCrlIssuerUrl returns the DeltaCrlIssuerUrl field value if set, zero value otherwise.
func (o *CrlDistribCfgsReqBody) GetDeltaCrlIssuerUrl() string {
	if o == nil || IsNil(o.DeltaCrlIssuerUrl) {
		var ret string
		return ret
	}
	return *o.DeltaCrlIssuerUrl
}

// GetDeltaCrlIssuerUrlOk returns a tuple with the DeltaCrlIssuerUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CrlDistribCfgsReqBody) GetDeltaCrlIssuerUrlOk() (*string, bool) {
	if o == nil || IsNil(o.DeltaCrlIssuerUrl) {
		return nil, false
	}
	return o.DeltaCrlIssuerUrl, true
}

// HasDeltaCrlIssuerUrl returns a boolean if a field has been set.
func (o *CrlDistribCfgsReqBody) HasDeltaCrlIssuerUrl() bool {
	if o != nil && !IsNil(o.DeltaCrlIssuerUrl) {
		return true
	}

	return false
}

// SetDeltaCrlIssuerUrl gets a reference to the given string and assigns it to the DeltaCrlIssuerUrl field.
func (o *CrlDistribCfgsReqBody) SetDeltaCrlIssuerUrl(v string) {
	o.DeltaCrlIssuerUrl = &v
}

// GetCaCertificate returns the CaCertificate field value if set, zero value otherwise.
func (o *CrlDistribCfgsReqBody) GetCaCertificate() SecretPath {
	if o == nil || IsNil(o.CaCertificate) {
		var ret SecretPath
		return ret
	}
	return *o.CaCertificate
}

// GetCaCertificateOk returns a tuple with the CaCertificate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CrlDistribCfgsReqBody) GetCaCertificateOk() (*SecretPath, bool) {
	if o == nil || IsNil(o.CaCertificate) {
		return nil, false
	}
	return o.CaCertificate, true
}

// HasCaCertificate returns a boolean if a field has been set.
func (o *CrlDistribCfgsReqBody) HasCaCertificate() bool {
	if o != nil && !IsNil(o.CaCertificate) {
		return true
	}

	return false
}

// SetCaCertificate gets a reference to the given SecretPath and assigns it to the CaCertificate field.
func (o *CrlDistribCfgsReqBody) SetCaCertificate(v SecretPath) {
	o.CaCertificate = &v
}

func (o CrlDistribCfgsReqBody) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CrlDistribCfgsReqBody) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ExpirationDate) {
		toSerialize["expirationDate"] = o.ExpirationDate
	}
	if !IsNil(o.CompleteCrlIssuerUrl) {
		toSerialize["completeCrlIssuerUrl"] = o.CompleteCrlIssuerUrl
	}
	if !IsNil(o.Frequency) {
		toSerialize["frequency"] = o.Frequency
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.DistributorCertificate) {
		toSerialize["distributorCertificate"] = o.DistributorCertificate
	}
	if !IsNil(o.DeltaCrlIssuerUrl) {
		toSerialize["deltaCrlIssuerUrl"] = o.DeltaCrlIssuerUrl
	}
	if !IsNil(o.CaCertificate) {
		toSerialize["caCertificate"] = o.CaCertificate
	}
	return toSerialize, nil
}

type NullableCrlDistribCfgsReqBody struct {
	value *CrlDistribCfgsReqBody
	isSet bool
}

func (v NullableCrlDistribCfgsReqBody) Get() *CrlDistribCfgsReqBody {
	return v.value
}

func (v *NullableCrlDistribCfgsReqBody) Set(val *CrlDistribCfgsReqBody) {
	v.value = val
	v.isSet = true
}

func (v NullableCrlDistribCfgsReqBody) IsSet() bool {
	return v.isSet
}

func (v *NullableCrlDistribCfgsReqBody) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCrlDistribCfgsReqBody(val *CrlDistribCfgsReqBody) *NullableCrlDistribCfgsReqBody {
	return &NullableCrlDistribCfgsReqBody{value: val, isSet: true}
}

func (v NullableCrlDistribCfgsReqBody) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCrlDistribCfgsReqBody) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


