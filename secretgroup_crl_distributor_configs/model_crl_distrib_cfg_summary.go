/*
Secret Group CRL Distributor Configs API

Secret Group CRL Distributor Configs API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package secretgroup_crl_distributor_configs

import (
	"encoding/json"
)

// checks if the CrlDistribCfgSummary type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CrlDistribCfgSummary{}

// CrlDistribCfgSummary struct for CrlDistribCfgSummary
type CrlDistribCfgSummary struct {
	Name *string `json:"name,omitempty"`
	Meta *Meta `json:"meta,omitempty"`
	ExpirationDate *string `json:"expirationDate,omitempty"`
}

// NewCrlDistribCfgSummary instantiates a new CrlDistribCfgSummary object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCrlDistribCfgSummary() *CrlDistribCfgSummary {
	this := CrlDistribCfgSummary{}
	return &this
}

// NewCrlDistribCfgSummaryWithDefaults instantiates a new CrlDistribCfgSummary object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCrlDistribCfgSummaryWithDefaults() *CrlDistribCfgSummary {
	this := CrlDistribCfgSummary{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *CrlDistribCfgSummary) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CrlDistribCfgSummary) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *CrlDistribCfgSummary) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *CrlDistribCfgSummary) SetName(v string) {
	o.Name = &v
}

// GetMeta returns the Meta field value if set, zero value otherwise.
func (o *CrlDistribCfgSummary) GetMeta() Meta {
	if o == nil || IsNil(o.Meta) {
		var ret Meta
		return ret
	}
	return *o.Meta
}

// GetMetaOk returns a tuple with the Meta field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CrlDistribCfgSummary) GetMetaOk() (*Meta, bool) {
	if o == nil || IsNil(o.Meta) {
		return nil, false
	}
	return o.Meta, true
}

// HasMeta returns a boolean if a field has been set.
func (o *CrlDistribCfgSummary) HasMeta() bool {
	if o != nil && !IsNil(o.Meta) {
		return true
	}

	return false
}

// SetMeta gets a reference to the given Meta and assigns it to the Meta field.
func (o *CrlDistribCfgSummary) SetMeta(v Meta) {
	o.Meta = &v
}

// GetExpirationDate returns the ExpirationDate field value if set, zero value otherwise.
func (o *CrlDistribCfgSummary) GetExpirationDate() string {
	if o == nil || IsNil(o.ExpirationDate) {
		var ret string
		return ret
	}
	return *o.ExpirationDate
}

// GetExpirationDateOk returns a tuple with the ExpirationDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CrlDistribCfgSummary) GetExpirationDateOk() (*string, bool) {
	if o == nil || IsNil(o.ExpirationDate) {
		return nil, false
	}
	return o.ExpirationDate, true
}

// HasExpirationDate returns a boolean if a field has been set.
func (o *CrlDistribCfgSummary) HasExpirationDate() bool {
	if o != nil && !IsNil(o.ExpirationDate) {
		return true
	}

	return false
}

// SetExpirationDate gets a reference to the given string and assigns it to the ExpirationDate field.
func (o *CrlDistribCfgSummary) SetExpirationDate(v string) {
	o.ExpirationDate = &v
}

func (o CrlDistribCfgSummary) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CrlDistribCfgSummary) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Meta) {
		toSerialize["meta"] = o.Meta
	}
	if !IsNil(o.ExpirationDate) {
		toSerialize["expirationDate"] = o.ExpirationDate
	}
	return toSerialize, nil
}

type NullableCrlDistribCfgSummary struct {
	value *CrlDistribCfgSummary
	isSet bool
}

func (v NullableCrlDistribCfgSummary) Get() *CrlDistribCfgSummary {
	return v.value
}

func (v *NullableCrlDistribCfgSummary) Set(val *CrlDistribCfgSummary) {
	v.value = val
	v.isSet = true
}

func (v NullableCrlDistribCfgSummary) IsSet() bool {
	return v.isSet
}

func (v *NullableCrlDistribCfgSummary) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCrlDistribCfgSummary(val *CrlDistribCfgSummary) *NullableCrlDistribCfgSummary {
	return &NullableCrlDistribCfgSummary{value: val, isSet: true}
}

func (v NullableCrlDistribCfgSummary) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCrlDistribCfgSummary) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


