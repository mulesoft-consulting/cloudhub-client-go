/*
Secret Group CRL Distributor Configs API

Secret Group CRL Distributor Configs API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package secretgroup_crl_distributor_configs

import (
	"encoding/json"
)

// checks if the CrlDistribCfgsDetails type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CrlDistribCfgsDetails{}

// CrlDistribCfgsDetails struct for CrlDistribCfgsDetails
type CrlDistribCfgsDetails struct {
	// URL from where complete CRL file is retrieved
	CompleteCrlIssuerUrl *string `json:"completeCrlIssuerUrl,omitempty"`
	// How frequently should the distributor site be checked for new crl files(in minutes)
	Frequency *int32 `json:"frequency,omitempty"`
	ExpirationDate *string `json:"expirationDate,omitempty"`
	Meta *Meta `json:"meta,omitempty"`
	Name *string `json:"name,omitempty"`
	DistributorCertificate *SecretPath `json:"distributorCertificate,omitempty"`
	// URL from where the changes in CRL file can be retrieved
	DeltaCrlIssuerUrl *string `json:"deltaCrlIssuerUrl,omitempty"`
	CaCertificate *SecretPath `json:"caCertificate,omitempty"`
}

// NewCrlDistribCfgsDetails instantiates a new CrlDistribCfgsDetails object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCrlDistribCfgsDetails() *CrlDistribCfgsDetails {
	this := CrlDistribCfgsDetails{}
	return &this
}

// NewCrlDistribCfgsDetailsWithDefaults instantiates a new CrlDistribCfgsDetails object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCrlDistribCfgsDetailsWithDefaults() *CrlDistribCfgsDetails {
	this := CrlDistribCfgsDetails{}
	return &this
}

// GetCompleteCrlIssuerUrl returns the CompleteCrlIssuerUrl field value if set, zero value otherwise.
func (o *CrlDistribCfgsDetails) GetCompleteCrlIssuerUrl() string {
	if o == nil || IsNil(o.CompleteCrlIssuerUrl) {
		var ret string
		return ret
	}
	return *o.CompleteCrlIssuerUrl
}

// GetCompleteCrlIssuerUrlOk returns a tuple with the CompleteCrlIssuerUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CrlDistribCfgsDetails) GetCompleteCrlIssuerUrlOk() (*string, bool) {
	if o == nil || IsNil(o.CompleteCrlIssuerUrl) {
		return nil, false
	}
	return o.CompleteCrlIssuerUrl, true
}

// HasCompleteCrlIssuerUrl returns a boolean if a field has been set.
func (o *CrlDistribCfgsDetails) HasCompleteCrlIssuerUrl() bool {
	if o != nil && !IsNil(o.CompleteCrlIssuerUrl) {
		return true
	}

	return false
}

// SetCompleteCrlIssuerUrl gets a reference to the given string and assigns it to the CompleteCrlIssuerUrl field.
func (o *CrlDistribCfgsDetails) SetCompleteCrlIssuerUrl(v string) {
	o.CompleteCrlIssuerUrl = &v
}

// GetFrequency returns the Frequency field value if set, zero value otherwise.
func (o *CrlDistribCfgsDetails) GetFrequency() int32 {
	if o == nil || IsNil(o.Frequency) {
		var ret int32
		return ret
	}
	return *o.Frequency
}

// GetFrequencyOk returns a tuple with the Frequency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CrlDistribCfgsDetails) GetFrequencyOk() (*int32, bool) {
	if o == nil || IsNil(o.Frequency) {
		return nil, false
	}
	return o.Frequency, true
}

// HasFrequency returns a boolean if a field has been set.
func (o *CrlDistribCfgsDetails) HasFrequency() bool {
	if o != nil && !IsNil(o.Frequency) {
		return true
	}

	return false
}

// SetFrequency gets a reference to the given int32 and assigns it to the Frequency field.
func (o *CrlDistribCfgsDetails) SetFrequency(v int32) {
	o.Frequency = &v
}

// GetExpirationDate returns the ExpirationDate field value if set, zero value otherwise.
func (o *CrlDistribCfgsDetails) GetExpirationDate() string {
	if o == nil || IsNil(o.ExpirationDate) {
		var ret string
		return ret
	}
	return *o.ExpirationDate
}

// GetExpirationDateOk returns a tuple with the ExpirationDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CrlDistribCfgsDetails) GetExpirationDateOk() (*string, bool) {
	if o == nil || IsNil(o.ExpirationDate) {
		return nil, false
	}
	return o.ExpirationDate, true
}

// HasExpirationDate returns a boolean if a field has been set.
func (o *CrlDistribCfgsDetails) HasExpirationDate() bool {
	if o != nil && !IsNil(o.ExpirationDate) {
		return true
	}

	return false
}

// SetExpirationDate gets a reference to the given string and assigns it to the ExpirationDate field.
func (o *CrlDistribCfgsDetails) SetExpirationDate(v string) {
	o.ExpirationDate = &v
}

// GetMeta returns the Meta field value if set, zero value otherwise.
func (o *CrlDistribCfgsDetails) GetMeta() Meta {
	if o == nil || IsNil(o.Meta) {
		var ret Meta
		return ret
	}
	return *o.Meta
}

// GetMetaOk returns a tuple with the Meta field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CrlDistribCfgsDetails) GetMetaOk() (*Meta, bool) {
	if o == nil || IsNil(o.Meta) {
		return nil, false
	}
	return o.Meta, true
}

// HasMeta returns a boolean if a field has been set.
func (o *CrlDistribCfgsDetails) HasMeta() bool {
	if o != nil && !IsNil(o.Meta) {
		return true
	}

	return false
}

// SetMeta gets a reference to the given Meta and assigns it to the Meta field.
func (o *CrlDistribCfgsDetails) SetMeta(v Meta) {
	o.Meta = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *CrlDistribCfgsDetails) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CrlDistribCfgsDetails) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *CrlDistribCfgsDetails) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *CrlDistribCfgsDetails) SetName(v string) {
	o.Name = &v
}

// GetDistributorCertificate returns the DistributorCertificate field value if set, zero value otherwise.
func (o *CrlDistribCfgsDetails) GetDistributorCertificate() SecretPath {
	if o == nil || IsNil(o.DistributorCertificate) {
		var ret SecretPath
		return ret
	}
	return *o.DistributorCertificate
}

// GetDistributorCertificateOk returns a tuple with the DistributorCertificate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CrlDistribCfgsDetails) GetDistributorCertificateOk() (*SecretPath, bool) {
	if o == nil || IsNil(o.DistributorCertificate) {
		return nil, false
	}
	return o.DistributorCertificate, true
}

// HasDistributorCertificate returns a boolean if a field has been set.
func (o *CrlDistribCfgsDetails) HasDistributorCertificate() bool {
	if o != nil && !IsNil(o.DistributorCertificate) {
		return true
	}

	return false
}

// SetDistributorCertificate gets a reference to the given SecretPath and assigns it to the DistributorCertificate field.
func (o *CrlDistribCfgsDetails) SetDistributorCertificate(v SecretPath) {
	o.DistributorCertificate = &v
}

// GetDeltaCrlIssuerUrl returns the DeltaCrlIssuerUrl field value if set, zero value otherwise.
func (o *CrlDistribCfgsDetails) GetDeltaCrlIssuerUrl() string {
	if o == nil || IsNil(o.DeltaCrlIssuerUrl) {
		var ret string
		return ret
	}
	return *o.DeltaCrlIssuerUrl
}

// GetDeltaCrlIssuerUrlOk returns a tuple with the DeltaCrlIssuerUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CrlDistribCfgsDetails) GetDeltaCrlIssuerUrlOk() (*string, bool) {
	if o == nil || IsNil(o.DeltaCrlIssuerUrl) {
		return nil, false
	}
	return o.DeltaCrlIssuerUrl, true
}

// HasDeltaCrlIssuerUrl returns a boolean if a field has been set.
func (o *CrlDistribCfgsDetails) HasDeltaCrlIssuerUrl() bool {
	if o != nil && !IsNil(o.DeltaCrlIssuerUrl) {
		return true
	}

	return false
}

// SetDeltaCrlIssuerUrl gets a reference to the given string and assigns it to the DeltaCrlIssuerUrl field.
func (o *CrlDistribCfgsDetails) SetDeltaCrlIssuerUrl(v string) {
	o.DeltaCrlIssuerUrl = &v
}

// GetCaCertificate returns the CaCertificate field value if set, zero value otherwise.
func (o *CrlDistribCfgsDetails) GetCaCertificate() SecretPath {
	if o == nil || IsNil(o.CaCertificate) {
		var ret SecretPath
		return ret
	}
	return *o.CaCertificate
}

// GetCaCertificateOk returns a tuple with the CaCertificate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CrlDistribCfgsDetails) GetCaCertificateOk() (*SecretPath, bool) {
	if o == nil || IsNil(o.CaCertificate) {
		return nil, false
	}
	return o.CaCertificate, true
}

// HasCaCertificate returns a boolean if a field has been set.
func (o *CrlDistribCfgsDetails) HasCaCertificate() bool {
	if o != nil && !IsNil(o.CaCertificate) {
		return true
	}

	return false
}

// SetCaCertificate gets a reference to the given SecretPath and assigns it to the CaCertificate field.
func (o *CrlDistribCfgsDetails) SetCaCertificate(v SecretPath) {
	o.CaCertificate = &v
}

func (o CrlDistribCfgsDetails) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CrlDistribCfgsDetails) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CompleteCrlIssuerUrl) {
		toSerialize["completeCrlIssuerUrl"] = o.CompleteCrlIssuerUrl
	}
	if !IsNil(o.Frequency) {
		toSerialize["frequency"] = o.Frequency
	}
	if !IsNil(o.ExpirationDate) {
		toSerialize["expirationDate"] = o.ExpirationDate
	}
	if !IsNil(o.Meta) {
		toSerialize["meta"] = o.Meta
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.DistributorCertificate) {
		toSerialize["distributorCertificate"] = o.DistributorCertificate
	}
	if !IsNil(o.DeltaCrlIssuerUrl) {
		toSerialize["deltaCrlIssuerUrl"] = o.DeltaCrlIssuerUrl
	}
	if !IsNil(o.CaCertificate) {
		toSerialize["caCertificate"] = o.CaCertificate
	}
	return toSerialize, nil
}

type NullableCrlDistribCfgsDetails struct {
	value *CrlDistribCfgsDetails
	isSet bool
}

func (v NullableCrlDistribCfgsDetails) Get() *CrlDistribCfgsDetails {
	return v.value
}

func (v *NullableCrlDistribCfgsDetails) Set(val *CrlDistribCfgsDetails) {
	v.value = val
	v.isSet = true
}

func (v NullableCrlDistribCfgsDetails) IsSet() bool {
	return v.isSet
}

func (v *NullableCrlDistribCfgsDetails) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCrlDistribCfgsDetails(val *CrlDistribCfgsDetails) *NullableCrlDistribCfgsDetails {
	return &NullableCrlDistribCfgsDetails{value: val, isSet: true}
}

func (v NullableCrlDistribCfgsDetails) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCrlDistribCfgsDetails) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


