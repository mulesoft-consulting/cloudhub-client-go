/*
VPN API

Description of the VPN API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vpn

import (
	"encoding/json"
)

// checks if the VpnPostReqBody type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &VpnPostReqBody{}

// VpnPostReqBody struct for VpnPostReqBody
type VpnPostReqBody struct {
	Name *string `json:"name,omitempty"`
	RemoteAsn *int32 `json:"remoteAsn,omitempty"`
	RemoteIpAddress *string `json:"remoteIpAddress,omitempty"`
	RemoteNetworks []string `json:"remoteNetworks,omitempty"`
	TunnelConfigs []TunnelConfig `json:"tunnelConfigs,omitempty"`
}

// NewVpnPostReqBody instantiates a new VpnPostReqBody object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVpnPostReqBody() *VpnPostReqBody {
	this := VpnPostReqBody{}
	return &this
}

// NewVpnPostReqBodyWithDefaults instantiates a new VpnPostReqBody object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVpnPostReqBodyWithDefaults() *VpnPostReqBody {
	this := VpnPostReqBody{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *VpnPostReqBody) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VpnPostReqBody) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *VpnPostReqBody) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *VpnPostReqBody) SetName(v string) {
	o.Name = &v
}

// GetRemoteAsn returns the RemoteAsn field value if set, zero value otherwise.
func (o *VpnPostReqBody) GetRemoteAsn() int32 {
	if o == nil || IsNil(o.RemoteAsn) {
		var ret int32
		return ret
	}
	return *o.RemoteAsn
}

// GetRemoteAsnOk returns a tuple with the RemoteAsn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VpnPostReqBody) GetRemoteAsnOk() (*int32, bool) {
	if o == nil || IsNil(o.RemoteAsn) {
		return nil, false
	}
	return o.RemoteAsn, true
}

// HasRemoteAsn returns a boolean if a field has been set.
func (o *VpnPostReqBody) HasRemoteAsn() bool {
	if o != nil && !IsNil(o.RemoteAsn) {
		return true
	}

	return false
}

// SetRemoteAsn gets a reference to the given int32 and assigns it to the RemoteAsn field.
func (o *VpnPostReqBody) SetRemoteAsn(v int32) {
	o.RemoteAsn = &v
}

// GetRemoteIpAddress returns the RemoteIpAddress field value if set, zero value otherwise.
func (o *VpnPostReqBody) GetRemoteIpAddress() string {
	if o == nil || IsNil(o.RemoteIpAddress) {
		var ret string
		return ret
	}
	return *o.RemoteIpAddress
}

// GetRemoteIpAddressOk returns a tuple with the RemoteIpAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VpnPostReqBody) GetRemoteIpAddressOk() (*string, bool) {
	if o == nil || IsNil(o.RemoteIpAddress) {
		return nil, false
	}
	return o.RemoteIpAddress, true
}

// HasRemoteIpAddress returns a boolean if a field has been set.
func (o *VpnPostReqBody) HasRemoteIpAddress() bool {
	if o != nil && !IsNil(o.RemoteIpAddress) {
		return true
	}

	return false
}

// SetRemoteIpAddress gets a reference to the given string and assigns it to the RemoteIpAddress field.
func (o *VpnPostReqBody) SetRemoteIpAddress(v string) {
	o.RemoteIpAddress = &v
}

// GetRemoteNetworks returns the RemoteNetworks field value if set, zero value otherwise.
func (o *VpnPostReqBody) GetRemoteNetworks() []string {
	if o == nil || IsNil(o.RemoteNetworks) {
		var ret []string
		return ret
	}
	return o.RemoteNetworks
}

// GetRemoteNetworksOk returns a tuple with the RemoteNetworks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VpnPostReqBody) GetRemoteNetworksOk() ([]string, bool) {
	if o == nil || IsNil(o.RemoteNetworks) {
		return nil, false
	}
	return o.RemoteNetworks, true
}

// HasRemoteNetworks returns a boolean if a field has been set.
func (o *VpnPostReqBody) HasRemoteNetworks() bool {
	if o != nil && !IsNil(o.RemoteNetworks) {
		return true
	}

	return false
}

// SetRemoteNetworks gets a reference to the given []string and assigns it to the RemoteNetworks field.
func (o *VpnPostReqBody) SetRemoteNetworks(v []string) {
	o.RemoteNetworks = v
}

// GetTunnelConfigs returns the TunnelConfigs field value if set, zero value otherwise.
func (o *VpnPostReqBody) GetTunnelConfigs() []TunnelConfig {
	if o == nil || IsNil(o.TunnelConfigs) {
		var ret []TunnelConfig
		return ret
	}
	return o.TunnelConfigs
}

// GetTunnelConfigsOk returns a tuple with the TunnelConfigs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VpnPostReqBody) GetTunnelConfigsOk() ([]TunnelConfig, bool) {
	if o == nil || IsNil(o.TunnelConfigs) {
		return nil, false
	}
	return o.TunnelConfigs, true
}

// HasTunnelConfigs returns a boolean if a field has been set.
func (o *VpnPostReqBody) HasTunnelConfigs() bool {
	if o != nil && !IsNil(o.TunnelConfigs) {
		return true
	}

	return false
}

// SetTunnelConfigs gets a reference to the given []TunnelConfig and assigns it to the TunnelConfigs field.
func (o *VpnPostReqBody) SetTunnelConfigs(v []TunnelConfig) {
	o.TunnelConfigs = v
}

func (o VpnPostReqBody) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o VpnPostReqBody) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.RemoteAsn) {
		toSerialize["remoteAsn"] = o.RemoteAsn
	}
	if !IsNil(o.RemoteIpAddress) {
		toSerialize["remoteIpAddress"] = o.RemoteIpAddress
	}
	if !IsNil(o.RemoteNetworks) {
		toSerialize["remoteNetworks"] = o.RemoteNetworks
	}
	if !IsNil(o.TunnelConfigs) {
		toSerialize["tunnelConfigs"] = o.TunnelConfigs
	}
	return toSerialize, nil
}

type NullableVpnPostReqBody struct {
	value *VpnPostReqBody
	isSet bool
}

func (v NullableVpnPostReqBody) Get() *VpnPostReqBody {
	return v.value
}

func (v *NullableVpnPostReqBody) Set(val *VpnPostReqBody) {
	v.value = val
	v.isSet = true
}

func (v NullableVpnPostReqBody) IsSet() bool {
	return v.isSet
}

func (v *NullableVpnPostReqBody) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVpnPostReqBody(val *VpnPostReqBody) *NullableVpnPostReqBody {
	return &NullableVpnPostReqBody{value: val, isSet: true}
}

func (v NullableVpnPostReqBody) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVpnPostReqBody) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


