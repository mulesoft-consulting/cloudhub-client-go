/*
VPN API

Description of the VPN API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vpn

import (
	"encoding/json"
)

// checks if the TunnelConfig1 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TunnelConfig1{}

// TunnelConfig1 struct for TunnelConfig1
type TunnelConfig1 struct {
	// Pre-shared secret key, this is used for authentication the VPN-tunnel.
	Psk string `json:"psk"`
	// Point-to-point Classless Inter-Domain Routing (CIDR)
	PtpCidr string `json:"ptpCidr"`
	// The margin time in seconds before connection expiration or keying-channel expiration, during which the local side of the VPN connection attempts to negotiate a replacement. The exact time of the rekey is randomly selected based on the value of Rekey fuzz. Relevant only locally, the remote side does not need to agree on it.
	RekeyMarginInSeconds int32 `json:"rekeyMarginInSeconds"`
	// The maximum percentage by which marginbytes, marginpackets and margintime are randomly increased to randomize rekeying intervals (important for hosts with many connections).
	RekeyFuzz int32 `json:"rekeyFuzz"`
}

// NewTunnelConfig1 instantiates a new TunnelConfig1 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTunnelConfig1(psk string, ptpCidr string, rekeyMarginInSeconds int32, rekeyFuzz int32) *TunnelConfig1 {
	this := TunnelConfig1{}
	this.Psk = psk
	this.PtpCidr = ptpCidr
	this.RekeyMarginInSeconds = rekeyMarginInSeconds
	this.RekeyFuzz = rekeyFuzz
	return &this
}

// NewTunnelConfig1WithDefaults instantiates a new TunnelConfig1 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTunnelConfig1WithDefaults() *TunnelConfig1 {
	this := TunnelConfig1{}
	var psk string = ""
	this.Psk = psk
	var ptpCidr string = ""
	this.PtpCidr = ptpCidr
	var rekeyMarginInSeconds int32 = 0
	this.RekeyMarginInSeconds = rekeyMarginInSeconds
	var rekeyFuzz int32 = 0
	this.RekeyFuzz = rekeyFuzz
	return &this
}

// GetPsk returns the Psk field value
func (o *TunnelConfig1) GetPsk() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Psk
}

// GetPskOk returns a tuple with the Psk field value
// and a boolean to check if the value has been set.
func (o *TunnelConfig1) GetPskOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Psk, true
}

// SetPsk sets field value
func (o *TunnelConfig1) SetPsk(v string) {
	o.Psk = v
}

// GetPtpCidr returns the PtpCidr field value
func (o *TunnelConfig1) GetPtpCidr() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PtpCidr
}

// GetPtpCidrOk returns a tuple with the PtpCidr field value
// and a boolean to check if the value has been set.
func (o *TunnelConfig1) GetPtpCidrOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PtpCidr, true
}

// SetPtpCidr sets field value
func (o *TunnelConfig1) SetPtpCidr(v string) {
	o.PtpCidr = v
}

// GetRekeyMarginInSeconds returns the RekeyMarginInSeconds field value
func (o *TunnelConfig1) GetRekeyMarginInSeconds() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.RekeyMarginInSeconds
}

// GetRekeyMarginInSecondsOk returns a tuple with the RekeyMarginInSeconds field value
// and a boolean to check if the value has been set.
func (o *TunnelConfig1) GetRekeyMarginInSecondsOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RekeyMarginInSeconds, true
}

// SetRekeyMarginInSeconds sets field value
func (o *TunnelConfig1) SetRekeyMarginInSeconds(v int32) {
	o.RekeyMarginInSeconds = v
}

// GetRekeyFuzz returns the RekeyFuzz field value
func (o *TunnelConfig1) GetRekeyFuzz() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.RekeyFuzz
}

// GetRekeyFuzzOk returns a tuple with the RekeyFuzz field value
// and a boolean to check if the value has been set.
func (o *TunnelConfig1) GetRekeyFuzzOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RekeyFuzz, true
}

// SetRekeyFuzz sets field value
func (o *TunnelConfig1) SetRekeyFuzz(v int32) {
	o.RekeyFuzz = v
}

func (o TunnelConfig1) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TunnelConfig1) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["psk"] = o.Psk
	toSerialize["ptpCidr"] = o.PtpCidr
	toSerialize["rekeyMarginInSeconds"] = o.RekeyMarginInSeconds
	toSerialize["rekeyFuzz"] = o.RekeyFuzz
	return toSerialize, nil
}

type NullableTunnelConfig1 struct {
	value *TunnelConfig1
	isSet bool
}

func (v NullableTunnelConfig1) Get() *TunnelConfig1 {
	return v.value
}

func (v *NullableTunnelConfig1) Set(val *TunnelConfig1) {
	v.value = val
	v.isSet = true
}

func (v NullableTunnelConfig1) IsSet() bool {
	return v.isSet
}

func (v *NullableTunnelConfig1) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTunnelConfig1(val *TunnelConfig1) *NullableTunnelConfig1 {
	return &NullableTunnelConfig1{value: val, isSet: true}
}

func (v NullableTunnelConfig1) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTunnelConfig1) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


