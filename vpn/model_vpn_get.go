/*
VPN API

Description of the VPN API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vpn

import (
	"encoding/json"
)

// checks if the VpnGet type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &VpnGet{}

// VpnGet struct for VpnGet
type VpnGet struct {
	// The vpn Id
	Id string `json:"id"`
	Spec *Spec `json:"spec,omitempty"`
	State *State `json:"state,omitempty"`
	UpdateAvailable *bool `json:"updateAvailable,omitempty"`
	Name *string `json:"name,omitempty"`
}

// NewVpnGet instantiates a new VpnGet object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVpnGet(id string) *VpnGet {
	this := VpnGet{}
	this.Id = id
	var updateAvailable bool = false
	this.UpdateAvailable = &updateAvailable
	return &this
}

// NewVpnGetWithDefaults instantiates a new VpnGet object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVpnGetWithDefaults() *VpnGet {
	this := VpnGet{}
	var updateAvailable bool = false
	this.UpdateAvailable = &updateAvailable
	return &this
}

// GetId returns the Id field value
func (o *VpnGet) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *VpnGet) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *VpnGet) SetId(v string) {
	o.Id = v
}

// GetSpec returns the Spec field value if set, zero value otherwise.
func (o *VpnGet) GetSpec() Spec {
	if o == nil || IsNil(o.Spec) {
		var ret Spec
		return ret
	}
	return *o.Spec
}

// GetSpecOk returns a tuple with the Spec field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VpnGet) GetSpecOk() (*Spec, bool) {
	if o == nil || IsNil(o.Spec) {
		return nil, false
	}
	return o.Spec, true
}

// HasSpec returns a boolean if a field has been set.
func (o *VpnGet) HasSpec() bool {
	if o != nil && !IsNil(o.Spec) {
		return true
	}

	return false
}

// SetSpec gets a reference to the given Spec and assigns it to the Spec field.
func (o *VpnGet) SetSpec(v Spec) {
	o.Spec = &v
}

// GetState returns the State field value if set, zero value otherwise.
func (o *VpnGet) GetState() State {
	if o == nil || IsNil(o.State) {
		var ret State
		return ret
	}
	return *o.State
}

// GetStateOk returns a tuple with the State field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VpnGet) GetStateOk() (*State, bool) {
	if o == nil || IsNil(o.State) {
		return nil, false
	}
	return o.State, true
}

// HasState returns a boolean if a field has been set.
func (o *VpnGet) HasState() bool {
	if o != nil && !IsNil(o.State) {
		return true
	}

	return false
}

// SetState gets a reference to the given State and assigns it to the State field.
func (o *VpnGet) SetState(v State) {
	o.State = &v
}

// GetUpdateAvailable returns the UpdateAvailable field value if set, zero value otherwise.
func (o *VpnGet) GetUpdateAvailable() bool {
	if o == nil || IsNil(o.UpdateAvailable) {
		var ret bool
		return ret
	}
	return *o.UpdateAvailable
}

// GetUpdateAvailableOk returns a tuple with the UpdateAvailable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VpnGet) GetUpdateAvailableOk() (*bool, bool) {
	if o == nil || IsNil(o.UpdateAvailable) {
		return nil, false
	}
	return o.UpdateAvailable, true
}

// HasUpdateAvailable returns a boolean if a field has been set.
func (o *VpnGet) HasUpdateAvailable() bool {
	if o != nil && !IsNil(o.UpdateAvailable) {
		return true
	}

	return false
}

// SetUpdateAvailable gets a reference to the given bool and assigns it to the UpdateAvailable field.
func (o *VpnGet) SetUpdateAvailable(v bool) {
	o.UpdateAvailable = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *VpnGet) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VpnGet) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *VpnGet) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *VpnGet) SetName(v string) {
	o.Name = &v
}

func (o VpnGet) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o VpnGet) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	if !IsNil(o.Spec) {
		toSerialize["spec"] = o.Spec
	}
	if !IsNil(o.State) {
		toSerialize["state"] = o.State
	}
	if !IsNil(o.UpdateAvailable) {
		toSerialize["updateAvailable"] = o.UpdateAvailable
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	return toSerialize, nil
}

type NullableVpnGet struct {
	value *VpnGet
	isSet bool
}

func (v NullableVpnGet) Get() *VpnGet {
	return v.value
}

func (v *NullableVpnGet) Set(val *VpnGet) {
	v.value = val
	v.isSet = true
}

func (v NullableVpnGet) IsSet() bool {
	return v.isSet
}

func (v *NullableVpnGet) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVpnGet(val *VpnGet) *NullableVpnGet {
	return &NullableVpnGet{value: val, isSet: true}
}

func (v NullableVpnGet) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVpnGet) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


