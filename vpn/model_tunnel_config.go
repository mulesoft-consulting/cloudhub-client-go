/*
VPN API

Description of the VPN API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vpn

import (
	"encoding/json"
)

// checks if the TunnelConfig type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TunnelConfig{}

// TunnelConfig struct for TunnelConfig
type TunnelConfig struct {
	// Pre-shared secret key, this is used for authentication the VPN-tunnel.
	Psk string `json:"psk"`
	// Point-to-point Classless Inter-Domain Routing (CIDR)
	PtpCidr string `json:"ptpCidr"`
}

// NewTunnelConfig instantiates a new TunnelConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTunnelConfig(psk string, ptpCidr string) *TunnelConfig {
	this := TunnelConfig{}
	this.Psk = psk
	this.PtpCidr = ptpCidr
	return &this
}

// NewTunnelConfigWithDefaults instantiates a new TunnelConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTunnelConfigWithDefaults() *TunnelConfig {
	this := TunnelConfig{}
	var psk string = ""
	this.Psk = psk
	var ptpCidr string = ""
	this.PtpCidr = ptpCidr
	return &this
}

// GetPsk returns the Psk field value
func (o *TunnelConfig) GetPsk() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Psk
}

// GetPskOk returns a tuple with the Psk field value
// and a boolean to check if the value has been set.
func (o *TunnelConfig) GetPskOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Psk, true
}

// SetPsk sets field value
func (o *TunnelConfig) SetPsk(v string) {
	o.Psk = v
}

// GetPtpCidr returns the PtpCidr field value
func (o *TunnelConfig) GetPtpCidr() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PtpCidr
}

// GetPtpCidrOk returns a tuple with the PtpCidr field value
// and a boolean to check if the value has been set.
func (o *TunnelConfig) GetPtpCidrOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PtpCidr, true
}

// SetPtpCidr sets field value
func (o *TunnelConfig) SetPtpCidr(v string) {
	o.PtpCidr = v
}

func (o TunnelConfig) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TunnelConfig) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["psk"] = o.Psk
	toSerialize["ptpCidr"] = o.PtpCidr
	return toSerialize, nil
}

type NullableTunnelConfig struct {
	value *TunnelConfig
	isSet bool
}

func (v NullableTunnelConfig) Get() *TunnelConfig {
	return v.value
}

func (v *NullableTunnelConfig) Set(val *TunnelConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableTunnelConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableTunnelConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTunnelConfig(val *TunnelConfig) *NullableTunnelConfig {
	return &NullableTunnelConfig{value: val, isSet: true}
}

func (v NullableTunnelConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTunnelConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


