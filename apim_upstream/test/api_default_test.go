/*
API Manager Upstream API

Testing DefaultApiService

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech);

package apim_upstream

import (
	"context"
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
	"testing"
	openapiclient "github.com/mulesoft-anypoint/anypoint-client-go/apim_upstream"
)

func Test_apim_upstream_DefaultApiService(t *testing.T) {

	configuration := openapiclient.NewConfiguration()
	apiClient := openapiclient.NewAPIClient(configuration)

	t.Run("Test DefaultApiService DeleteApimInstanceUpstream", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var orgId string
		var envId string
		var envApiId string
		var upstreamId string

		httpRes, err := apiClient.DefaultApi.DeleteApimInstanceUpstream(context.Background(), orgId, envId, envApiId, upstreamId).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test DefaultApiService GetApimInstanceUpstream", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var orgId string
		var envId string
		var envApiId string
		var upstreamId string

		resp, httpRes, err := apiClient.DefaultApi.GetApimInstanceUpstream(context.Background(), orgId, envId, envApiId, upstreamId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test DefaultApiService GetApimInstanceUpstreams", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var orgId string
		var envId string
		var envApiId string

		resp, httpRes, err := apiClient.DefaultApi.GetApimInstanceUpstreams(context.Background(), orgId, envId, envApiId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test DefaultApiService PatchApimInstanceUpstream", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var orgId string
		var envId string
		var envApiId string
		var upstreamId string

		resp, httpRes, err := apiClient.DefaultApi.PatchApimInstanceUpstream(context.Background(), orgId, envId, envApiId, upstreamId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test DefaultApiService PostApimInstanceUpstream", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var orgId string
		var envId string
		var envApiId string

		resp, httpRes, err := apiClient.DefaultApi.PostApimInstanceUpstream(context.Background(), orgId, envId, envApiId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

}
