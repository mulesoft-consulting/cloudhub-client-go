/*
API Manager Upstream API

API Manager Upstream API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package apim_upstream

import (
	"encoding/json"
)

// checks if the UpstreamPostBodyTlsContext type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpstreamPostBodyTlsContext{}

// UpstreamPostBodyTlsContext struct for UpstreamPostBodyTlsContext
type UpstreamPostBodyTlsContext struct {
	SecretGroupId *string `json:"secretGroupId,omitempty"`
	TlsContextId *string `json:"tlsContextId,omitempty"`
}

// NewUpstreamPostBodyTlsContext instantiates a new UpstreamPostBodyTlsContext object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpstreamPostBodyTlsContext() *UpstreamPostBodyTlsContext {
	this := UpstreamPostBodyTlsContext{}
	return &this
}

// NewUpstreamPostBodyTlsContextWithDefaults instantiates a new UpstreamPostBodyTlsContext object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpstreamPostBodyTlsContextWithDefaults() *UpstreamPostBodyTlsContext {
	this := UpstreamPostBodyTlsContext{}
	return &this
}

// GetSecretGroupId returns the SecretGroupId field value if set, zero value otherwise.
func (o *UpstreamPostBodyTlsContext) GetSecretGroupId() string {
	if o == nil || IsNil(o.SecretGroupId) {
		var ret string
		return ret
	}
	return *o.SecretGroupId
}

// GetSecretGroupIdOk returns a tuple with the SecretGroupId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpstreamPostBodyTlsContext) GetSecretGroupIdOk() (*string, bool) {
	if o == nil || IsNil(o.SecretGroupId) {
		return nil, false
	}
	return o.SecretGroupId, true
}

// HasSecretGroupId returns a boolean if a field has been set.
func (o *UpstreamPostBodyTlsContext) HasSecretGroupId() bool {
	if o != nil && !IsNil(o.SecretGroupId) {
		return true
	}

	return false
}

// SetSecretGroupId gets a reference to the given string and assigns it to the SecretGroupId field.
func (o *UpstreamPostBodyTlsContext) SetSecretGroupId(v string) {
	o.SecretGroupId = &v
}

// GetTlsContextId returns the TlsContextId field value if set, zero value otherwise.
func (o *UpstreamPostBodyTlsContext) GetTlsContextId() string {
	if o == nil || IsNil(o.TlsContextId) {
		var ret string
		return ret
	}
	return *o.TlsContextId
}

// GetTlsContextIdOk returns a tuple with the TlsContextId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpstreamPostBodyTlsContext) GetTlsContextIdOk() (*string, bool) {
	if o == nil || IsNil(o.TlsContextId) {
		return nil, false
	}
	return o.TlsContextId, true
}

// HasTlsContextId returns a boolean if a field has been set.
func (o *UpstreamPostBodyTlsContext) HasTlsContextId() bool {
	if o != nil && !IsNil(o.TlsContextId) {
		return true
	}

	return false
}

// SetTlsContextId gets a reference to the given string and assigns it to the TlsContextId field.
func (o *UpstreamPostBodyTlsContext) SetTlsContextId(v string) {
	o.TlsContextId = &v
}

func (o UpstreamPostBodyTlsContext) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpstreamPostBodyTlsContext) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.SecretGroupId) {
		toSerialize["secretGroupId"] = o.SecretGroupId
	}
	if !IsNil(o.TlsContextId) {
		toSerialize["tlsContextId"] = o.TlsContextId
	}
	return toSerialize, nil
}

type NullableUpstreamPostBodyTlsContext struct {
	value *UpstreamPostBodyTlsContext
	isSet bool
}

func (v NullableUpstreamPostBodyTlsContext) Get() *UpstreamPostBodyTlsContext {
	return v.value
}

func (v *NullableUpstreamPostBodyTlsContext) Set(val *UpstreamPostBodyTlsContext) {
	v.value = val
	v.isSet = true
}

func (v NullableUpstreamPostBodyTlsContext) IsSet() bool {
	return v.isSet
}

func (v *NullableUpstreamPostBodyTlsContext) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpstreamPostBodyTlsContext(val *UpstreamPostBodyTlsContext) *NullableUpstreamPostBodyTlsContext {
	return &NullableUpstreamPostBodyTlsContext{value: val, isSet: true}
}

func (v NullableUpstreamPostBodyTlsContext) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpstreamPostBodyTlsContext) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


