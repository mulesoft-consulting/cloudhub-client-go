openapi: 3.0.0
info:
  description: Description of the RoleGroup API
  title: RoleGroup API
  version: 1.0.0
servers:
- description: Anypoint Cloudhub
  url: https://anypoint.mulesoft.com/accounts/api/
- description: Anypoint Cloudhub EU
  url: https://eu1.anypoint.mulesoft.com/accounts/api/
- description: Anypoint Cloudhub GOV
  url: https://gov.anypoint.mulesoft.com/accounts/api/
security:
- bearerAuth: []
paths:
  /organizations/{orgId}/rolegroups:
    get:
      description: Returns all rolegroups within the organization
      parameters:
      - description: The ID of the organization in GUID format
        explode: false
        in: path
        name: orgId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "401":
          description: Access token is missing or invalid
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_organizations__orgId__rolegroups_get_200_response'
          description: Success response
    post:
      description: Creates an rolegroup. Name must be unique.
      parameters:
      - description: The ID of the organization in GUID format
        explode: false
        in: path
        name: orgId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/rolegroupPostBody'
      responses:
        "401":
          description: Access token is missing or invalid
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_organizations__orgId__rolegroups_post_400_response'
          description: Bad request response
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rolegroup'
          description: Success response
  /organizations/{orgId}/rolegroups/{rolegroupId}:
    delete:
      description: Delete a rolegroup
      parameters:
      - description: The ID of the organization in GUID format
        explode: false
        in: path
        name: orgId
        required: true
        schema:
          type: string
        style: simple
      - description: The id of a rolegroup
        explode: false
        in: path
        name: rolegroupId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "401":
          description: Access token is missing or invalid
        "204":
          content:
            application/json:
              schema:
                items:
                  description: organization id
                  type: string
                type: array
          description: Success response
    get:
      description: Retrieves a rolegroup by id
      parameters:
      - description: The ID of the organization in GUID format
        explode: false
        in: path
        name: orgId
        required: true
        schema:
          type: string
        style: simple
      - description: The id of rolegroup
        explode: false
        in: path
        name: rolegroupId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "401":
          description: Access token is missing or invalid
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rolegroup'
          description: Success response
    put:
      description: "Update a role gorup, implemented as a patch. Note that only the\
        \ name (must be unique) and description is allowed to be updated."
      parameters:
      - description: The ID of the organization in GUID format
        explode: false
        in: path
        name: orgId
        required: true
        schema:
          type: string
        style: simple
      - description: The id of an rolegroup
        explode: false
        in: path
        name: rolegroupId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/rolegroupPutBody'
      responses:
        "401":
          description: Access token is missing or invalid
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_organizations__orgId__rolegroups_post_400_response'
          description: Bad request response
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rolegroup'
          description: Success response
components:
  responses:
    UnauthorizedError:
      description: Access token is missing or invalid
    BadRequestError:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/_organizations__orgId__rolegroups_post_400_response'
      description: Bad request response
    SuccessGetRoleGroup:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/rolegroup'
      description: Success response
    SuccessPostRoleGroup:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/rolegroup'
      description: Success response
    SuccessPutRoleGroup:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/rolegroup'
      description: Success response
    SuccessDeleteRoleGroup:
      content:
        application/json:
          schema:
            items:
              description: organization id
              type: string
            type: array
      description: Success response
    SuccessListRoleGroups:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/_organizations__orgId__rolegroups_get_200_response'
      description: Success response
  schemas:
    rolegroupPostBody:
      properties:
        name:
          title: name
          type: string
        description:
          title: description
          type: string
        external_names:
          items:
            title: externalName
            type: string
          title: externalNames
          type: array
      title: rolegroupPostBody
      type: object
    rolegroupPutBody:
      properties:
        name:
          title: name
          type: string
        description:
          title: description
          type: string
        external_names:
          items:
            title: externalName
            type: string
          title: externalNames
          type: array
      title: rolegroupPutBody
      type: object
    rolegroup:
      example:
        updated_at: 2021-03-05T14:06:52.976Z
        user_count: 0
        org_id: aa1f55d6-213d-4f60-845c-207286484cd1
        editable: true
        name: API Creators
        external_names:
        - external_names
        - external_names
        description: API Creators
        created_at: 2021-03-05T14:06:52.976Z
        role_group_id: a1a8b488-1e48-44ac-ba40-d53f518808af
      properties:
        role_group_id:
          example: a1a8b488-1e48-44ac-ba40-d53f518808af
          title: id
          type: string
        name:
          example: API Creators
          title: name
          type: string
        external_names:
          items:
            title: externalName
            type: string
          title: externalNames
          type: array
        description:
          example: API Creators
          title: description
          type: string
        org_id:
          example: aa1f55d6-213d-4f60-845c-207286484cd1
          title: orgId
          type: string
        editable:
          title: editable
          type: boolean
        created_at:
          example: 2021-03-05T14:06:52.976Z
          title: createdAt
          type: string
        updated_at:
          example: 2021-03-05T14:06:52.976Z
          title: updatedAt
          type: string
        user_count:
          example: 0
          title: userCount
          type: integer
      title: rolegroup
      type: object
    _organizations__orgId__rolegroups_get_200_response:
      example:
        total: 0
        data:
        - updated_at: 2021-03-05T14:06:52.976Z
          user_count: 0
          org_id: aa1f55d6-213d-4f60-845c-207286484cd1
          editable: true
          name: API Creators
          external_names:
          - external_names
          - external_names
          description: API Creators
          created_at: 2021-03-05T14:06:52.976Z
          role_group_id: a1a8b488-1e48-44ac-ba40-d53f518808af
        - updated_at: 2021-03-05T14:06:52.976Z
          user_count: 0
          org_id: aa1f55d6-213d-4f60-845c-207286484cd1
          editable: true
          name: API Creators
          external_names:
          - external_names
          - external_names
          description: API Creators
          created_at: 2021-03-05T14:06:52.976Z
          role_group_id: a1a8b488-1e48-44ac-ba40-d53f518808af
      properties:
        data:
          items:
            $ref: '#/components/schemas/rolegroup'
          title: List of rolegroups
          type: array
        total:
          title: Total number of results
          type: integer
      type: object
    _organizations__orgId__rolegroups_post_400_response:
      properties:
        status:
          default: 400
          title: the response status code
          type: integer
        message:
          example: A sample message here
          title: the error message
          type: string
      type: object
  securitySchemes:
    bearerAuth:
      bearerFormat: JWT
      scheme: bearer
      type: http
