/*
Team Members API

Description of the Team Members API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package team_members

import (
	"encoding/json"
)

// checks if the TeamMember type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TeamMember{}

// TeamMember struct for TeamMember
type TeamMember struct {
	IdentityType *string `json:"identity_type,omitempty"`
	Id *string `json:"id,omitempty"`
	Name *string `json:"name,omitempty"`
	MembershipType *string `json:"membership_type,omitempty"`
	IsAssignedViaExternalGroups *bool `json:"is_assigned_via_external_groups,omitempty"`
	CreatedAt *string `json:"created_at,omitempty"`
	UpdatedAt *string `json:"updated_at,omitempty"`
}

// NewTeamMember instantiates a new TeamMember object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTeamMember() *TeamMember {
	this := TeamMember{}
	return &this
}

// NewTeamMemberWithDefaults instantiates a new TeamMember object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTeamMemberWithDefaults() *TeamMember {
	this := TeamMember{}
	return &this
}

// GetIdentityType returns the IdentityType field value if set, zero value otherwise.
func (o *TeamMember) GetIdentityType() string {
	if o == nil || IsNil(o.IdentityType) {
		var ret string
		return ret
	}
	return *o.IdentityType
}

// GetIdentityTypeOk returns a tuple with the IdentityType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TeamMember) GetIdentityTypeOk() (*string, bool) {
	if o == nil || IsNil(o.IdentityType) {
		return nil, false
	}
	return o.IdentityType, true
}

// HasIdentityType returns a boolean if a field has been set.
func (o *TeamMember) HasIdentityType() bool {
	if o != nil && !IsNil(o.IdentityType) {
		return true
	}

	return false
}

// SetIdentityType gets a reference to the given string and assigns it to the IdentityType field.
func (o *TeamMember) SetIdentityType(v string) {
	o.IdentityType = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *TeamMember) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TeamMember) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *TeamMember) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *TeamMember) SetId(v string) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *TeamMember) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TeamMember) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *TeamMember) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *TeamMember) SetName(v string) {
	o.Name = &v
}

// GetMembershipType returns the MembershipType field value if set, zero value otherwise.
func (o *TeamMember) GetMembershipType() string {
	if o == nil || IsNil(o.MembershipType) {
		var ret string
		return ret
	}
	return *o.MembershipType
}

// GetMembershipTypeOk returns a tuple with the MembershipType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TeamMember) GetMembershipTypeOk() (*string, bool) {
	if o == nil || IsNil(o.MembershipType) {
		return nil, false
	}
	return o.MembershipType, true
}

// HasMembershipType returns a boolean if a field has been set.
func (o *TeamMember) HasMembershipType() bool {
	if o != nil && !IsNil(o.MembershipType) {
		return true
	}

	return false
}

// SetMembershipType gets a reference to the given string and assigns it to the MembershipType field.
func (o *TeamMember) SetMembershipType(v string) {
	o.MembershipType = &v
}

// GetIsAssignedViaExternalGroups returns the IsAssignedViaExternalGroups field value if set, zero value otherwise.
func (o *TeamMember) GetIsAssignedViaExternalGroups() bool {
	if o == nil || IsNil(o.IsAssignedViaExternalGroups) {
		var ret bool
		return ret
	}
	return *o.IsAssignedViaExternalGroups
}

// GetIsAssignedViaExternalGroupsOk returns a tuple with the IsAssignedViaExternalGroups field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TeamMember) GetIsAssignedViaExternalGroupsOk() (*bool, bool) {
	if o == nil || IsNil(o.IsAssignedViaExternalGroups) {
		return nil, false
	}
	return o.IsAssignedViaExternalGroups, true
}

// HasIsAssignedViaExternalGroups returns a boolean if a field has been set.
func (o *TeamMember) HasIsAssignedViaExternalGroups() bool {
	if o != nil && !IsNil(o.IsAssignedViaExternalGroups) {
		return true
	}

	return false
}

// SetIsAssignedViaExternalGroups gets a reference to the given bool and assigns it to the IsAssignedViaExternalGroups field.
func (o *TeamMember) SetIsAssignedViaExternalGroups(v bool) {
	o.IsAssignedViaExternalGroups = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *TeamMember) GetCreatedAt() string {
	if o == nil || IsNil(o.CreatedAt) {
		var ret string
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TeamMember) GetCreatedAtOk() (*string, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *TeamMember) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given string and assigns it to the CreatedAt field.
func (o *TeamMember) SetCreatedAt(v string) {
	o.CreatedAt = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *TeamMember) GetUpdatedAt() string {
	if o == nil || IsNil(o.UpdatedAt) {
		var ret string
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TeamMember) GetUpdatedAtOk() (*string, bool) {
	if o == nil || IsNil(o.UpdatedAt) {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *TeamMember) HasUpdatedAt() bool {
	if o != nil && !IsNil(o.UpdatedAt) {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given string and assigns it to the UpdatedAt field.
func (o *TeamMember) SetUpdatedAt(v string) {
	o.UpdatedAt = &v
}

func (o TeamMember) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TeamMember) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.IdentityType) {
		toSerialize["identity_type"] = o.IdentityType
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.MembershipType) {
		toSerialize["membership_type"] = o.MembershipType
	}
	if !IsNil(o.IsAssignedViaExternalGroups) {
		toSerialize["is_assigned_via_external_groups"] = o.IsAssignedViaExternalGroups
	}
	if !IsNil(o.CreatedAt) {
		toSerialize["created_at"] = o.CreatedAt
	}
	if !IsNil(o.UpdatedAt) {
		toSerialize["updated_at"] = o.UpdatedAt
	}
	return toSerialize, nil
}

type NullableTeamMember struct {
	value *TeamMember
	isSet bool
}

func (v NullableTeamMember) Get() *TeamMember {
	return v.value
}

func (v *NullableTeamMember) Set(val *TeamMember) {
	v.value = val
	v.isSet = true
}

func (v NullableTeamMember) IsSet() bool {
	return v.isSet
}

func (v *NullableTeamMember) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTeamMember(val *TeamMember) *NullableTeamMember {
	return &NullableTeamMember{value: val, isSet: true}
}

func (v NullableTeamMember) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTeamMember) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


