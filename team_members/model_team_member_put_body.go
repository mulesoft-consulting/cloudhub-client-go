/*
Team Members API

Description of the Team Members API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package team_members

import (
	"encoding/json"
)

// checks if the TeamMemberPutBody type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TeamMemberPutBody{}

// TeamMemberPutBody struct for TeamMemberPutBody
type TeamMemberPutBody struct {
	MembershipType *string `json:"membership_type,omitempty"`
}

// NewTeamMemberPutBody instantiates a new TeamMemberPutBody object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTeamMemberPutBody() *TeamMemberPutBody {
	this := TeamMemberPutBody{}
	return &this
}

// NewTeamMemberPutBodyWithDefaults instantiates a new TeamMemberPutBody object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTeamMemberPutBodyWithDefaults() *TeamMemberPutBody {
	this := TeamMemberPutBody{}
	return &this
}

// GetMembershipType returns the MembershipType field value if set, zero value otherwise.
func (o *TeamMemberPutBody) GetMembershipType() string {
	if o == nil || IsNil(o.MembershipType) {
		var ret string
		return ret
	}
	return *o.MembershipType
}

// GetMembershipTypeOk returns a tuple with the MembershipType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TeamMemberPutBody) GetMembershipTypeOk() (*string, bool) {
	if o == nil || IsNil(o.MembershipType) {
		return nil, false
	}
	return o.MembershipType, true
}

// HasMembershipType returns a boolean if a field has been set.
func (o *TeamMemberPutBody) HasMembershipType() bool {
	if o != nil && !IsNil(o.MembershipType) {
		return true
	}

	return false
}

// SetMembershipType gets a reference to the given string and assigns it to the MembershipType field.
func (o *TeamMemberPutBody) SetMembershipType(v string) {
	o.MembershipType = &v
}

func (o TeamMemberPutBody) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TeamMemberPutBody) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.MembershipType) {
		toSerialize["membership_type"] = o.MembershipType
	}
	return toSerialize, nil
}

type NullableTeamMemberPutBody struct {
	value *TeamMemberPutBody
	isSet bool
}

func (v NullableTeamMemberPutBody) Get() *TeamMemberPutBody {
	return v.value
}

func (v *NullableTeamMemberPutBody) Set(val *TeamMemberPutBody) {
	v.value = val
	v.isSet = true
}

func (v NullableTeamMemberPutBody) IsSet() bool {
	return v.isSet
}

func (v *NullableTeamMemberPutBody) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTeamMemberPutBody(val *TeamMemberPutBody) *NullableTeamMemberPutBody {
	return &NullableTeamMemberPutBody{value: val, isSet: true}
}

func (v NullableTeamMemberPutBody) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTeamMemberPutBody) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


