/*
Alert API Manager

Alert for API Manager

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package apim_alerts

import (
	"encoding/json"
)

// checks if the AlertCore type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AlertCore{}

// AlertCore struct for AlertCore
type AlertCore struct {
	ApiAlertsVersion string `json:"apiAlertsVersion"`
	Name string `json:"name"`
	Type string `json:"type"`
	Enabled bool `json:"enabled"`
	Severity string `json:"severity"`
	Recipients []Recipient `json:"recipients"`
	Condition Condition `json:"condition"`
	Period Period `json:"period"`
}

// NewAlertCore instantiates a new AlertCore object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAlertCore(apiAlertsVersion string, name string, type_ string, enabled bool, severity string, recipients []Recipient, condition Condition, period Period) *AlertCore {
	this := AlertCore{}
	this.ApiAlertsVersion = apiAlertsVersion
	this.Name = name
	this.Type = type_
	this.Enabled = enabled
	this.Severity = severity
	this.Recipients = recipients
	this.Condition = condition
	this.Period = period
	return &this
}

// NewAlertCoreWithDefaults instantiates a new AlertCore object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAlertCoreWithDefaults() *AlertCore {
	this := AlertCore{}
	return &this
}

// GetApiAlertsVersion returns the ApiAlertsVersion field value
func (o *AlertCore) GetApiAlertsVersion() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ApiAlertsVersion
}

// GetApiAlertsVersionOk returns a tuple with the ApiAlertsVersion field value
// and a boolean to check if the value has been set.
func (o *AlertCore) GetApiAlertsVersionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ApiAlertsVersion, true
}

// SetApiAlertsVersion sets field value
func (o *AlertCore) SetApiAlertsVersion(v string) {
	o.ApiAlertsVersion = v
}

// GetName returns the Name field value
func (o *AlertCore) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *AlertCore) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *AlertCore) SetName(v string) {
	o.Name = v
}

// GetType returns the Type field value
func (o *AlertCore) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *AlertCore) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *AlertCore) SetType(v string) {
	o.Type = v
}

// GetEnabled returns the Enabled field value
func (o *AlertCore) GetEnabled() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value
// and a boolean to check if the value has been set.
func (o *AlertCore) GetEnabledOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Enabled, true
}

// SetEnabled sets field value
func (o *AlertCore) SetEnabled(v bool) {
	o.Enabled = v
}

// GetSeverity returns the Severity field value
func (o *AlertCore) GetSeverity() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Severity
}

// GetSeverityOk returns a tuple with the Severity field value
// and a boolean to check if the value has been set.
func (o *AlertCore) GetSeverityOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Severity, true
}

// SetSeverity sets field value
func (o *AlertCore) SetSeverity(v string) {
	o.Severity = v
}

// GetRecipients returns the Recipients field value
func (o *AlertCore) GetRecipients() []Recipient {
	if o == nil {
		var ret []Recipient
		return ret
	}

	return o.Recipients
}

// GetRecipientsOk returns a tuple with the Recipients field value
// and a boolean to check if the value has been set.
func (o *AlertCore) GetRecipientsOk() ([]Recipient, bool) {
	if o == nil {
		return nil, false
	}
	return o.Recipients, true
}

// SetRecipients sets field value
func (o *AlertCore) SetRecipients(v []Recipient) {
	o.Recipients = v
}

// GetCondition returns the Condition field value
func (o *AlertCore) GetCondition() Condition {
	if o == nil {
		var ret Condition
		return ret
	}

	return o.Condition
}

// GetConditionOk returns a tuple with the Condition field value
// and a boolean to check if the value has been set.
func (o *AlertCore) GetConditionOk() (*Condition, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Condition, true
}

// SetCondition sets field value
func (o *AlertCore) SetCondition(v Condition) {
	o.Condition = v
}

// GetPeriod returns the Period field value
func (o *AlertCore) GetPeriod() Period {
	if o == nil {
		var ret Period
		return ret
	}

	return o.Period
}

// GetPeriodOk returns a tuple with the Period field value
// and a boolean to check if the value has been set.
func (o *AlertCore) GetPeriodOk() (*Period, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Period, true
}

// SetPeriod sets field value
func (o *AlertCore) SetPeriod(v Period) {
	o.Period = v
}

func (o AlertCore) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AlertCore) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["apiAlertsVersion"] = o.ApiAlertsVersion
	toSerialize["name"] = o.Name
	toSerialize["type"] = o.Type
	toSerialize["enabled"] = o.Enabled
	toSerialize["severity"] = o.Severity
	toSerialize["recipients"] = o.Recipients
	toSerialize["condition"] = o.Condition
	toSerialize["period"] = o.Period
	return toSerialize, nil
}

type NullableAlertCore struct {
	value *AlertCore
	isSet bool
}

func (v NullableAlertCore) Get() *AlertCore {
	return v.value
}

func (v *NullableAlertCore) Set(val *AlertCore) {
	v.value = val
	v.isSet = true
}

func (v NullableAlertCore) IsSet() bool {
	return v.isSet
}

func (v *NullableAlertCore) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAlertCore(val *AlertCore) *NullableAlertCore {
	return &NullableAlertCore{value: val, isSet: true}
}

func (v NullableAlertCore) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAlertCore) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


