/*
Identity Provider Management API

Description of Identity Provider API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package idp

import (
	"encoding/json"
)

// checks if the LdapProviderPatchConnection type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &LdapProviderPatchConnection{}

// LdapProviderPatchConnection struct for LdapProviderPatchConnection
type LdapProviderPatchConnection struct {
	Binddn *string `json:"binddn,omitempty"`
	ConnectTimeoutSeconds *float32 `json:"connectTimeoutSeconds,omitempty"`
	Host *string `json:"host,omitempty"`
	OperationTimeoutMs *float32 `json:"operationTimeoutMs,omitempty"`
	Password *string `json:"password,omitempty"`
	Port *float32 `json:"port,omitempty"`
	Validatecert *bool `json:"validatecert,omitempty"`
}

// NewLdapProviderPatchConnection instantiates a new LdapProviderPatchConnection object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLdapProviderPatchConnection() *LdapProviderPatchConnection {
	this := LdapProviderPatchConnection{}
	return &this
}

// NewLdapProviderPatchConnectionWithDefaults instantiates a new LdapProviderPatchConnection object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLdapProviderPatchConnectionWithDefaults() *LdapProviderPatchConnection {
	this := LdapProviderPatchConnection{}
	return &this
}

// GetBinddn returns the Binddn field value if set, zero value otherwise.
func (o *LdapProviderPatchConnection) GetBinddn() string {
	if o == nil || IsNil(o.Binddn) {
		var ret string
		return ret
	}
	return *o.Binddn
}

// GetBinddnOk returns a tuple with the Binddn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LdapProviderPatchConnection) GetBinddnOk() (*string, bool) {
	if o == nil || IsNil(o.Binddn) {
		return nil, false
	}
	return o.Binddn, true
}

// HasBinddn returns a boolean if a field has been set.
func (o *LdapProviderPatchConnection) HasBinddn() bool {
	if o != nil && !IsNil(o.Binddn) {
		return true
	}

	return false
}

// SetBinddn gets a reference to the given string and assigns it to the Binddn field.
func (o *LdapProviderPatchConnection) SetBinddn(v string) {
	o.Binddn = &v
}

// GetConnectTimeoutSeconds returns the ConnectTimeoutSeconds field value if set, zero value otherwise.
func (o *LdapProviderPatchConnection) GetConnectTimeoutSeconds() float32 {
	if o == nil || IsNil(o.ConnectTimeoutSeconds) {
		var ret float32
		return ret
	}
	return *o.ConnectTimeoutSeconds
}

// GetConnectTimeoutSecondsOk returns a tuple with the ConnectTimeoutSeconds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LdapProviderPatchConnection) GetConnectTimeoutSecondsOk() (*float32, bool) {
	if o == nil || IsNil(o.ConnectTimeoutSeconds) {
		return nil, false
	}
	return o.ConnectTimeoutSeconds, true
}

// HasConnectTimeoutSeconds returns a boolean if a field has been set.
func (o *LdapProviderPatchConnection) HasConnectTimeoutSeconds() bool {
	if o != nil && !IsNil(o.ConnectTimeoutSeconds) {
		return true
	}

	return false
}

// SetConnectTimeoutSeconds gets a reference to the given float32 and assigns it to the ConnectTimeoutSeconds field.
func (o *LdapProviderPatchConnection) SetConnectTimeoutSeconds(v float32) {
	o.ConnectTimeoutSeconds = &v
}

// GetHost returns the Host field value if set, zero value otherwise.
func (o *LdapProviderPatchConnection) GetHost() string {
	if o == nil || IsNil(o.Host) {
		var ret string
		return ret
	}
	return *o.Host
}

// GetHostOk returns a tuple with the Host field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LdapProviderPatchConnection) GetHostOk() (*string, bool) {
	if o == nil || IsNil(o.Host) {
		return nil, false
	}
	return o.Host, true
}

// HasHost returns a boolean if a field has been set.
func (o *LdapProviderPatchConnection) HasHost() bool {
	if o != nil && !IsNil(o.Host) {
		return true
	}

	return false
}

// SetHost gets a reference to the given string and assigns it to the Host field.
func (o *LdapProviderPatchConnection) SetHost(v string) {
	o.Host = &v
}

// GetOperationTimeoutMs returns the OperationTimeoutMs field value if set, zero value otherwise.
func (o *LdapProviderPatchConnection) GetOperationTimeoutMs() float32 {
	if o == nil || IsNil(o.OperationTimeoutMs) {
		var ret float32
		return ret
	}
	return *o.OperationTimeoutMs
}

// GetOperationTimeoutMsOk returns a tuple with the OperationTimeoutMs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LdapProviderPatchConnection) GetOperationTimeoutMsOk() (*float32, bool) {
	if o == nil || IsNil(o.OperationTimeoutMs) {
		return nil, false
	}
	return o.OperationTimeoutMs, true
}

// HasOperationTimeoutMs returns a boolean if a field has been set.
func (o *LdapProviderPatchConnection) HasOperationTimeoutMs() bool {
	if o != nil && !IsNil(o.OperationTimeoutMs) {
		return true
	}

	return false
}

// SetOperationTimeoutMs gets a reference to the given float32 and assigns it to the OperationTimeoutMs field.
func (o *LdapProviderPatchConnection) SetOperationTimeoutMs(v float32) {
	o.OperationTimeoutMs = &v
}

// GetPassword returns the Password field value if set, zero value otherwise.
func (o *LdapProviderPatchConnection) GetPassword() string {
	if o == nil || IsNil(o.Password) {
		var ret string
		return ret
	}
	return *o.Password
}

// GetPasswordOk returns a tuple with the Password field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LdapProviderPatchConnection) GetPasswordOk() (*string, bool) {
	if o == nil || IsNil(o.Password) {
		return nil, false
	}
	return o.Password, true
}

// HasPassword returns a boolean if a field has been set.
func (o *LdapProviderPatchConnection) HasPassword() bool {
	if o != nil && !IsNil(o.Password) {
		return true
	}

	return false
}

// SetPassword gets a reference to the given string and assigns it to the Password field.
func (o *LdapProviderPatchConnection) SetPassword(v string) {
	o.Password = &v
}

// GetPort returns the Port field value if set, zero value otherwise.
func (o *LdapProviderPatchConnection) GetPort() float32 {
	if o == nil || IsNil(o.Port) {
		var ret float32
		return ret
	}
	return *o.Port
}

// GetPortOk returns a tuple with the Port field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LdapProviderPatchConnection) GetPortOk() (*float32, bool) {
	if o == nil || IsNil(o.Port) {
		return nil, false
	}
	return o.Port, true
}

// HasPort returns a boolean if a field has been set.
func (o *LdapProviderPatchConnection) HasPort() bool {
	if o != nil && !IsNil(o.Port) {
		return true
	}

	return false
}

// SetPort gets a reference to the given float32 and assigns it to the Port field.
func (o *LdapProviderPatchConnection) SetPort(v float32) {
	o.Port = &v
}

// GetValidatecert returns the Validatecert field value if set, zero value otherwise.
func (o *LdapProviderPatchConnection) GetValidatecert() bool {
	if o == nil || IsNil(o.Validatecert) {
		var ret bool
		return ret
	}
	return *o.Validatecert
}

// GetValidatecertOk returns a tuple with the Validatecert field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LdapProviderPatchConnection) GetValidatecertOk() (*bool, bool) {
	if o == nil || IsNil(o.Validatecert) {
		return nil, false
	}
	return o.Validatecert, true
}

// HasValidatecert returns a boolean if a field has been set.
func (o *LdapProviderPatchConnection) HasValidatecert() bool {
	if o != nil && !IsNil(o.Validatecert) {
		return true
	}

	return false
}

// SetValidatecert gets a reference to the given bool and assigns it to the Validatecert field.
func (o *LdapProviderPatchConnection) SetValidatecert(v bool) {
	o.Validatecert = &v
}

func (o LdapProviderPatchConnection) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o LdapProviderPatchConnection) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Binddn) {
		toSerialize["binddn"] = o.Binddn
	}
	if !IsNil(o.ConnectTimeoutSeconds) {
		toSerialize["connectTimeoutSeconds"] = o.ConnectTimeoutSeconds
	}
	if !IsNil(o.Host) {
		toSerialize["host"] = o.Host
	}
	if !IsNil(o.OperationTimeoutMs) {
		toSerialize["operationTimeoutMs"] = o.OperationTimeoutMs
	}
	if !IsNil(o.Password) {
		toSerialize["password"] = o.Password
	}
	if !IsNil(o.Port) {
		toSerialize["port"] = o.Port
	}
	if !IsNil(o.Validatecert) {
		toSerialize["validatecert"] = o.Validatecert
	}
	return toSerialize, nil
}

type NullableLdapProviderPatchConnection struct {
	value *LdapProviderPatchConnection
	isSet bool
}

func (v NullableLdapProviderPatchConnection) Get() *LdapProviderPatchConnection {
	return v.value
}

func (v *NullableLdapProviderPatchConnection) Set(val *LdapProviderPatchConnection) {
	v.value = val
	v.isSet = true
}

func (v NullableLdapProviderPatchConnection) IsSet() bool {
	return v.isSet
}

func (v *NullableLdapProviderPatchConnection) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLdapProviderPatchConnection(val *LdapProviderPatchConnection) *NullableLdapProviderPatchConnection {
	return &NullableLdapProviderPatchConnection{value: val, isSet: true}
}

func (v NullableLdapProviderPatchConnection) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLdapProviderPatchConnection) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


