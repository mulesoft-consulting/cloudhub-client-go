/*
Identity Provider Management API

Description of Identity Provider API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package idp

import (
	"encoding/json"
)

// checks if the LdapProviderPatchSearchBases type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &LdapProviderPatchSearchBases{}

// LdapProviderPatchSearchBases struct for LdapProviderPatchSearchBases
type LdapProviderPatchSearchBases struct {
	Group *string `json:"group,omitempty"`
	User *string `json:"user,omitempty"`
}

// NewLdapProviderPatchSearchBases instantiates a new LdapProviderPatchSearchBases object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLdapProviderPatchSearchBases() *LdapProviderPatchSearchBases {
	this := LdapProviderPatchSearchBases{}
	return &this
}

// NewLdapProviderPatchSearchBasesWithDefaults instantiates a new LdapProviderPatchSearchBases object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLdapProviderPatchSearchBasesWithDefaults() *LdapProviderPatchSearchBases {
	this := LdapProviderPatchSearchBases{}
	return &this
}

// GetGroup returns the Group field value if set, zero value otherwise.
func (o *LdapProviderPatchSearchBases) GetGroup() string {
	if o == nil || IsNil(o.Group) {
		var ret string
		return ret
	}
	return *o.Group
}

// GetGroupOk returns a tuple with the Group field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LdapProviderPatchSearchBases) GetGroupOk() (*string, bool) {
	if o == nil || IsNil(o.Group) {
		return nil, false
	}
	return o.Group, true
}

// HasGroup returns a boolean if a field has been set.
func (o *LdapProviderPatchSearchBases) HasGroup() bool {
	if o != nil && !IsNil(o.Group) {
		return true
	}

	return false
}

// SetGroup gets a reference to the given string and assigns it to the Group field.
func (o *LdapProviderPatchSearchBases) SetGroup(v string) {
	o.Group = &v
}

// GetUser returns the User field value if set, zero value otherwise.
func (o *LdapProviderPatchSearchBases) GetUser() string {
	if o == nil || IsNil(o.User) {
		var ret string
		return ret
	}
	return *o.User
}

// GetUserOk returns a tuple with the User field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LdapProviderPatchSearchBases) GetUserOk() (*string, bool) {
	if o == nil || IsNil(o.User) {
		return nil, false
	}
	return o.User, true
}

// HasUser returns a boolean if a field has been set.
func (o *LdapProviderPatchSearchBases) HasUser() bool {
	if o != nil && !IsNil(o.User) {
		return true
	}

	return false
}

// SetUser gets a reference to the given string and assigns it to the User field.
func (o *LdapProviderPatchSearchBases) SetUser(v string) {
	o.User = &v
}

func (o LdapProviderPatchSearchBases) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o LdapProviderPatchSearchBases) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Group) {
		toSerialize["group"] = o.Group
	}
	if !IsNil(o.User) {
		toSerialize["user"] = o.User
	}
	return toSerialize, nil
}

type NullableLdapProviderPatchSearchBases struct {
	value *LdapProviderPatchSearchBases
	isSet bool
}

func (v NullableLdapProviderPatchSearchBases) Get() *LdapProviderPatchSearchBases {
	return v.value
}

func (v *NullableLdapProviderPatchSearchBases) Set(val *LdapProviderPatchSearchBases) {
	v.value = val
	v.isSet = true
}

func (v NullableLdapProviderPatchSearchBases) IsSet() bool {
	return v.isSet
}

func (v *NullableLdapProviderPatchSearchBases) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLdapProviderPatchSearchBases(val *LdapProviderPatchSearchBases) *NullableLdapProviderPatchSearchBases {
	return &NullableLdapProviderPatchSearchBases{value: val, isSet: true}
}

func (v NullableLdapProviderPatchSearchBases) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLdapProviderPatchSearchBases) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


