/*
Identity Provider Management API

Description of Identity Provider API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package idp

import (
	"encoding/json"
)

// checks if the OidcProvider1 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OidcProvider1{}

// OidcProvider1 struct for OidcProvider1
type OidcProvider1 struct {
	Client *Client1 `json:"client,omitempty"`
	Issuer *string `json:"issuer,omitempty"`
	Urls *Urls3 `json:"urls,omitempty"`
	GroupScope *string `json:"group_scope,omitempty"`
	ClaimsMapping *ClaimsMapping1 `json:"claims_mapping,omitempty"`
}

// NewOidcProvider1 instantiates a new OidcProvider1 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOidcProvider1() *OidcProvider1 {
	this := OidcProvider1{}
	return &this
}

// NewOidcProvider1WithDefaults instantiates a new OidcProvider1 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOidcProvider1WithDefaults() *OidcProvider1 {
	this := OidcProvider1{}
	return &this
}

// GetClient returns the Client field value if set, zero value otherwise.
func (o *OidcProvider1) GetClient() Client1 {
	if o == nil || IsNil(o.Client) {
		var ret Client1
		return ret
	}
	return *o.Client
}

// GetClientOk returns a tuple with the Client field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OidcProvider1) GetClientOk() (*Client1, bool) {
	if o == nil || IsNil(o.Client) {
		return nil, false
	}
	return o.Client, true
}

// HasClient returns a boolean if a field has been set.
func (o *OidcProvider1) HasClient() bool {
	if o != nil && !IsNil(o.Client) {
		return true
	}

	return false
}

// SetClient gets a reference to the given Client1 and assigns it to the Client field.
func (o *OidcProvider1) SetClient(v Client1) {
	o.Client = &v
}

// GetIssuer returns the Issuer field value if set, zero value otherwise.
func (o *OidcProvider1) GetIssuer() string {
	if o == nil || IsNil(o.Issuer) {
		var ret string
		return ret
	}
	return *o.Issuer
}

// GetIssuerOk returns a tuple with the Issuer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OidcProvider1) GetIssuerOk() (*string, bool) {
	if o == nil || IsNil(o.Issuer) {
		return nil, false
	}
	return o.Issuer, true
}

// HasIssuer returns a boolean if a field has been set.
func (o *OidcProvider1) HasIssuer() bool {
	if o != nil && !IsNil(o.Issuer) {
		return true
	}

	return false
}

// SetIssuer gets a reference to the given string and assigns it to the Issuer field.
func (o *OidcProvider1) SetIssuer(v string) {
	o.Issuer = &v
}

// GetUrls returns the Urls field value if set, zero value otherwise.
func (o *OidcProvider1) GetUrls() Urls3 {
	if o == nil || IsNil(o.Urls) {
		var ret Urls3
		return ret
	}
	return *o.Urls
}

// GetUrlsOk returns a tuple with the Urls field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OidcProvider1) GetUrlsOk() (*Urls3, bool) {
	if o == nil || IsNil(o.Urls) {
		return nil, false
	}
	return o.Urls, true
}

// HasUrls returns a boolean if a field has been set.
func (o *OidcProvider1) HasUrls() bool {
	if o != nil && !IsNil(o.Urls) {
		return true
	}

	return false
}

// SetUrls gets a reference to the given Urls3 and assigns it to the Urls field.
func (o *OidcProvider1) SetUrls(v Urls3) {
	o.Urls = &v
}

// GetGroupScope returns the GroupScope field value if set, zero value otherwise.
func (o *OidcProvider1) GetGroupScope() string {
	if o == nil || IsNil(o.GroupScope) {
		var ret string
		return ret
	}
	return *o.GroupScope
}

// GetGroupScopeOk returns a tuple with the GroupScope field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OidcProvider1) GetGroupScopeOk() (*string, bool) {
	if o == nil || IsNil(o.GroupScope) {
		return nil, false
	}
	return o.GroupScope, true
}

// HasGroupScope returns a boolean if a field has been set.
func (o *OidcProvider1) HasGroupScope() bool {
	if o != nil && !IsNil(o.GroupScope) {
		return true
	}

	return false
}

// SetGroupScope gets a reference to the given string and assigns it to the GroupScope field.
func (o *OidcProvider1) SetGroupScope(v string) {
	o.GroupScope = &v
}

// GetClaimsMapping returns the ClaimsMapping field value if set, zero value otherwise.
func (o *OidcProvider1) GetClaimsMapping() ClaimsMapping1 {
	if o == nil || IsNil(o.ClaimsMapping) {
		var ret ClaimsMapping1
		return ret
	}
	return *o.ClaimsMapping
}

// GetClaimsMappingOk returns a tuple with the ClaimsMapping field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OidcProvider1) GetClaimsMappingOk() (*ClaimsMapping1, bool) {
	if o == nil || IsNil(o.ClaimsMapping) {
		return nil, false
	}
	return o.ClaimsMapping, true
}

// HasClaimsMapping returns a boolean if a field has been set.
func (o *OidcProvider1) HasClaimsMapping() bool {
	if o != nil && !IsNil(o.ClaimsMapping) {
		return true
	}

	return false
}

// SetClaimsMapping gets a reference to the given ClaimsMapping1 and assigns it to the ClaimsMapping field.
func (o *OidcProvider1) SetClaimsMapping(v ClaimsMapping1) {
	o.ClaimsMapping = &v
}

func (o OidcProvider1) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OidcProvider1) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Client) {
		toSerialize["client"] = o.Client
	}
	if !IsNil(o.Issuer) {
		toSerialize["issuer"] = o.Issuer
	}
	if !IsNil(o.Urls) {
		toSerialize["urls"] = o.Urls
	}
	if !IsNil(o.GroupScope) {
		toSerialize["group_scope"] = o.GroupScope
	}
	if !IsNil(o.ClaimsMapping) {
		toSerialize["claims_mapping"] = o.ClaimsMapping
	}
	return toSerialize, nil
}

type NullableOidcProvider1 struct {
	value *OidcProvider1
	isSet bool
}

func (v NullableOidcProvider1) Get() *OidcProvider1 {
	return v.value
}

func (v *NullableOidcProvider1) Set(val *OidcProvider1) {
	v.value = val
	v.isSet = true
}

func (v NullableOidcProvider1) IsSet() bool {
	return v.isSet
}

func (v *NullableOidcProvider1) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOidcProvider1(val *OidcProvider1) *NullableOidcProvider1 {
	return &NullableOidcProvider1{value: val, isSet: true}
}

func (v NullableOidcProvider1) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOidcProvider1) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


