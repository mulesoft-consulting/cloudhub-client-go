/*
Identity Provider Management API

Description of Identity Provider API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package idp

import (
	"encoding/json"
)

// checks if the OpenIDProviderGet type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OpenIDProviderGet{}

// OpenIDProviderGet struct for OpenIDProviderGet
type OpenIDProviderGet struct {
	OidcProvider OpenIDProviderGetOidcProvider `json:"oidc_provider"`
	Name string `json:"name"`
	OrgId string `json:"org_id"`
	ServiceProvider OpenIDProviderGetServiceProvider `json:"service_provider"`
	LoginDisabled *bool `json:"login_disabled,omitempty"`
	AllowUntrustedCertificates bool `json:"allow_untrusted_certificates"`
	Type OpenIDProviderManualPostBodyType `json:"type"`
	ProviderId string `json:"provider_id"`
}

// NewOpenIDProviderGet instantiates a new OpenIDProviderGet object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOpenIDProviderGet(oidcProvider OpenIDProviderGetOidcProvider, name string, orgId string, serviceProvider OpenIDProviderGetServiceProvider, allowUntrustedCertificates bool, type_ OpenIDProviderManualPostBodyType, providerId string) *OpenIDProviderGet {
	this := OpenIDProviderGet{}
	this.OidcProvider = oidcProvider
	this.Name = name
	this.OrgId = orgId
	this.ServiceProvider = serviceProvider
	this.AllowUntrustedCertificates = allowUntrustedCertificates
	this.Type = type_
	this.ProviderId = providerId
	return &this
}

// NewOpenIDProviderGetWithDefaults instantiates a new OpenIDProviderGet object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOpenIDProviderGetWithDefaults() *OpenIDProviderGet {
	this := OpenIDProviderGet{}
	return &this
}

// GetOidcProvider returns the OidcProvider field value
func (o *OpenIDProviderGet) GetOidcProvider() OpenIDProviderGetOidcProvider {
	if o == nil {
		var ret OpenIDProviderGetOidcProvider
		return ret
	}

	return o.OidcProvider
}

// GetOidcProviderOk returns a tuple with the OidcProvider field value
// and a boolean to check if the value has been set.
func (o *OpenIDProviderGet) GetOidcProviderOk() (*OpenIDProviderGetOidcProvider, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OidcProvider, true
}

// SetOidcProvider sets field value
func (o *OpenIDProviderGet) SetOidcProvider(v OpenIDProviderGetOidcProvider) {
	o.OidcProvider = v
}

// GetName returns the Name field value
func (o *OpenIDProviderGet) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *OpenIDProviderGet) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *OpenIDProviderGet) SetName(v string) {
	o.Name = v
}

// GetOrgId returns the OrgId field value
func (o *OpenIDProviderGet) GetOrgId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.OrgId
}

// GetOrgIdOk returns a tuple with the OrgId field value
// and a boolean to check if the value has been set.
func (o *OpenIDProviderGet) GetOrgIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OrgId, true
}

// SetOrgId sets field value
func (o *OpenIDProviderGet) SetOrgId(v string) {
	o.OrgId = v
}

// GetServiceProvider returns the ServiceProvider field value
func (o *OpenIDProviderGet) GetServiceProvider() OpenIDProviderGetServiceProvider {
	if o == nil {
		var ret OpenIDProviderGetServiceProvider
		return ret
	}

	return o.ServiceProvider
}

// GetServiceProviderOk returns a tuple with the ServiceProvider field value
// and a boolean to check if the value has been set.
func (o *OpenIDProviderGet) GetServiceProviderOk() (*OpenIDProviderGetServiceProvider, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ServiceProvider, true
}

// SetServiceProvider sets field value
func (o *OpenIDProviderGet) SetServiceProvider(v OpenIDProviderGetServiceProvider) {
	o.ServiceProvider = v
}

// GetLoginDisabled returns the LoginDisabled field value if set, zero value otherwise.
func (o *OpenIDProviderGet) GetLoginDisabled() bool {
	if o == nil || IsNil(o.LoginDisabled) {
		var ret bool
		return ret
	}
	return *o.LoginDisabled
}

// GetLoginDisabledOk returns a tuple with the LoginDisabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenIDProviderGet) GetLoginDisabledOk() (*bool, bool) {
	if o == nil || IsNil(o.LoginDisabled) {
		return nil, false
	}
	return o.LoginDisabled, true
}

// HasLoginDisabled returns a boolean if a field has been set.
func (o *OpenIDProviderGet) HasLoginDisabled() bool {
	if o != nil && !IsNil(o.LoginDisabled) {
		return true
	}

	return false
}

// SetLoginDisabled gets a reference to the given bool and assigns it to the LoginDisabled field.
func (o *OpenIDProviderGet) SetLoginDisabled(v bool) {
	o.LoginDisabled = &v
}

// GetAllowUntrustedCertificates returns the AllowUntrustedCertificates field value
func (o *OpenIDProviderGet) GetAllowUntrustedCertificates() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.AllowUntrustedCertificates
}

// GetAllowUntrustedCertificatesOk returns a tuple with the AllowUntrustedCertificates field value
// and a boolean to check if the value has been set.
func (o *OpenIDProviderGet) GetAllowUntrustedCertificatesOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AllowUntrustedCertificates, true
}

// SetAllowUntrustedCertificates sets field value
func (o *OpenIDProviderGet) SetAllowUntrustedCertificates(v bool) {
	o.AllowUntrustedCertificates = v
}

// GetType returns the Type field value
func (o *OpenIDProviderGet) GetType() OpenIDProviderManualPostBodyType {
	if o == nil {
		var ret OpenIDProviderManualPostBodyType
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *OpenIDProviderGet) GetTypeOk() (*OpenIDProviderManualPostBodyType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *OpenIDProviderGet) SetType(v OpenIDProviderManualPostBodyType) {
	o.Type = v
}

// GetProviderId returns the ProviderId field value
func (o *OpenIDProviderGet) GetProviderId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ProviderId
}

// GetProviderIdOk returns a tuple with the ProviderId field value
// and a boolean to check if the value has been set.
func (o *OpenIDProviderGet) GetProviderIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ProviderId, true
}

// SetProviderId sets field value
func (o *OpenIDProviderGet) SetProviderId(v string) {
	o.ProviderId = v
}

func (o OpenIDProviderGet) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OpenIDProviderGet) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["oidc_provider"] = o.OidcProvider
	toSerialize["name"] = o.Name
	toSerialize["org_id"] = o.OrgId
	toSerialize["service_provider"] = o.ServiceProvider
	if !IsNil(o.LoginDisabled) {
		toSerialize["login_disabled"] = o.LoginDisabled
	}
	toSerialize["allow_untrusted_certificates"] = o.AllowUntrustedCertificates
	toSerialize["type"] = o.Type
	toSerialize["provider_id"] = o.ProviderId
	return toSerialize, nil
}

type NullableOpenIDProviderGet struct {
	value *OpenIDProviderGet
	isSet bool
}

func (v NullableOpenIDProviderGet) Get() *OpenIDProviderGet {
	return v.value
}

func (v *NullableOpenIDProviderGet) Set(val *OpenIDProviderGet) {
	v.value = val
	v.isSet = true
}

func (v NullableOpenIDProviderGet) IsSet() bool {
	return v.isSet
}

func (v *NullableOpenIDProviderGet) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOpenIDProviderGet(val *OpenIDProviderGet) *NullableOpenIDProviderGet {
	return &NullableOpenIDProviderGet{value: val, isSet: true}
}

func (v NullableOpenIDProviderGet) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOpenIDProviderGet) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


