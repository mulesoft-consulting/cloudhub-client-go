/*
Identity Provider Management API

Description of Identity Provider API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package idp

import (
	"encoding/json"
)

// checks if the OidcProvider type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OidcProvider{}

// OidcProvider struct for OidcProvider
type OidcProvider struct {
	Urls *Urls `json:"urls,omitempty"`
	Client *Client `json:"client,omitempty"`
	Issuer *string `json:"issuer,omitempty"`
	GroupScope *string `json:"group_scope,omitempty"`
}

// NewOidcProvider instantiates a new OidcProvider object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOidcProvider() *OidcProvider {
	this := OidcProvider{}
	return &this
}

// NewOidcProviderWithDefaults instantiates a new OidcProvider object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOidcProviderWithDefaults() *OidcProvider {
	this := OidcProvider{}
	return &this
}

// GetUrls returns the Urls field value if set, zero value otherwise.
func (o *OidcProvider) GetUrls() Urls {
	if o == nil || IsNil(o.Urls) {
		var ret Urls
		return ret
	}
	return *o.Urls
}

// GetUrlsOk returns a tuple with the Urls field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OidcProvider) GetUrlsOk() (*Urls, bool) {
	if o == nil || IsNil(o.Urls) {
		return nil, false
	}
	return o.Urls, true
}

// HasUrls returns a boolean if a field has been set.
func (o *OidcProvider) HasUrls() bool {
	if o != nil && !IsNil(o.Urls) {
		return true
	}

	return false
}

// SetUrls gets a reference to the given Urls and assigns it to the Urls field.
func (o *OidcProvider) SetUrls(v Urls) {
	o.Urls = &v
}

// GetClient returns the Client field value if set, zero value otherwise.
func (o *OidcProvider) GetClient() Client {
	if o == nil || IsNil(o.Client) {
		var ret Client
		return ret
	}
	return *o.Client
}

// GetClientOk returns a tuple with the Client field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OidcProvider) GetClientOk() (*Client, bool) {
	if o == nil || IsNil(o.Client) {
		return nil, false
	}
	return o.Client, true
}

// HasClient returns a boolean if a field has been set.
func (o *OidcProvider) HasClient() bool {
	if o != nil && !IsNil(o.Client) {
		return true
	}

	return false
}

// SetClient gets a reference to the given Client and assigns it to the Client field.
func (o *OidcProvider) SetClient(v Client) {
	o.Client = &v
}

// GetIssuer returns the Issuer field value if set, zero value otherwise.
func (o *OidcProvider) GetIssuer() string {
	if o == nil || IsNil(o.Issuer) {
		var ret string
		return ret
	}
	return *o.Issuer
}

// GetIssuerOk returns a tuple with the Issuer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OidcProvider) GetIssuerOk() (*string, bool) {
	if o == nil || IsNil(o.Issuer) {
		return nil, false
	}
	return o.Issuer, true
}

// HasIssuer returns a boolean if a field has been set.
func (o *OidcProvider) HasIssuer() bool {
	if o != nil && !IsNil(o.Issuer) {
		return true
	}

	return false
}

// SetIssuer gets a reference to the given string and assigns it to the Issuer field.
func (o *OidcProvider) SetIssuer(v string) {
	o.Issuer = &v
}

// GetGroupScope returns the GroupScope field value if set, zero value otherwise.
func (o *OidcProvider) GetGroupScope() string {
	if o == nil || IsNil(o.GroupScope) {
		var ret string
		return ret
	}
	return *o.GroupScope
}

// GetGroupScopeOk returns a tuple with the GroupScope field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OidcProvider) GetGroupScopeOk() (*string, bool) {
	if o == nil || IsNil(o.GroupScope) {
		return nil, false
	}
	return o.GroupScope, true
}

// HasGroupScope returns a boolean if a field has been set.
func (o *OidcProvider) HasGroupScope() bool {
	if o != nil && !IsNil(o.GroupScope) {
		return true
	}

	return false
}

// SetGroupScope gets a reference to the given string and assigns it to the GroupScope field.
func (o *OidcProvider) SetGroupScope(v string) {
	o.GroupScope = &v
}

func (o OidcProvider) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OidcProvider) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Urls) {
		toSerialize["urls"] = o.Urls
	}
	if !IsNil(o.Client) {
		toSerialize["client"] = o.Client
	}
	if !IsNil(o.Issuer) {
		toSerialize["issuer"] = o.Issuer
	}
	if !IsNil(o.GroupScope) {
		toSerialize["group_scope"] = o.GroupScope
	}
	return toSerialize, nil
}

type NullableOidcProvider struct {
	value *OidcProvider
	isSet bool
}

func (v NullableOidcProvider) Get() *OidcProvider {
	return v.value
}

func (v *NullableOidcProvider) Set(val *OidcProvider) {
	v.value = val
	v.isSet = true
}

func (v NullableOidcProvider) IsSet() bool {
	return v.isSet
}

func (v *NullableOidcProvider) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOidcProvider(val *OidcProvider) *NullableOidcProvider {
	return &NullableOidcProvider{value: val, isSet: true}
}

func (v NullableOidcProvider) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOidcProvider) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


