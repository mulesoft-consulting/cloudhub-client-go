/*
Identity Provider Management API

Description of Identity Provider API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package idp

import (
	"encoding/json"
)

// checks if the OpenIDProviderGetServiceProvider type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OpenIDProviderGetServiceProvider{}

// OpenIDProviderGetServiceProvider struct for OpenIDProviderGetServiceProvider
type OpenIDProviderGetServiceProvider struct {
	Urls OpenIDProviderGetServiceProviderUrls `json:"urls"`
}

// NewOpenIDProviderGetServiceProvider instantiates a new OpenIDProviderGetServiceProvider object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOpenIDProviderGetServiceProvider(urls OpenIDProviderGetServiceProviderUrls) *OpenIDProviderGetServiceProvider {
	this := OpenIDProviderGetServiceProvider{}
	this.Urls = urls
	return &this
}

// NewOpenIDProviderGetServiceProviderWithDefaults instantiates a new OpenIDProviderGetServiceProvider object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOpenIDProviderGetServiceProviderWithDefaults() *OpenIDProviderGetServiceProvider {
	this := OpenIDProviderGetServiceProvider{}
	return &this
}

// GetUrls returns the Urls field value
func (o *OpenIDProviderGetServiceProvider) GetUrls() OpenIDProviderGetServiceProviderUrls {
	if o == nil {
		var ret OpenIDProviderGetServiceProviderUrls
		return ret
	}

	return o.Urls
}

// GetUrlsOk returns a tuple with the Urls field value
// and a boolean to check if the value has been set.
func (o *OpenIDProviderGetServiceProvider) GetUrlsOk() (*OpenIDProviderGetServiceProviderUrls, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Urls, true
}

// SetUrls sets field value
func (o *OpenIDProviderGetServiceProvider) SetUrls(v OpenIDProviderGetServiceProviderUrls) {
	o.Urls = v
}

func (o OpenIDProviderGetServiceProvider) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OpenIDProviderGetServiceProvider) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["urls"] = o.Urls
	return toSerialize, nil
}

type NullableOpenIDProviderGetServiceProvider struct {
	value *OpenIDProviderGetServiceProvider
	isSet bool
}

func (v NullableOpenIDProviderGetServiceProvider) Get() *OpenIDProviderGetServiceProvider {
	return v.value
}

func (v *NullableOpenIDProviderGetServiceProvider) Set(val *OpenIDProviderGetServiceProvider) {
	v.value = val
	v.isSet = true
}

func (v NullableOpenIDProviderGetServiceProvider) IsSet() bool {
	return v.isSet
}

func (v *NullableOpenIDProviderGetServiceProvider) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOpenIDProviderGetServiceProvider(val *OpenIDProviderGetServiceProvider) *NullableOpenIDProviderGetServiceProvider {
	return &NullableOpenIDProviderGetServiceProvider{value: val, isSet: true}
}

func (v NullableOpenIDProviderGetServiceProvider) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOpenIDProviderGetServiceProvider) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


