/*
Identity Provider Management API

Description of Identity Provider API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package idp

import (
	"encoding/json"
)

// checks if the LdapProviderPostBodyFilters type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &LdapProviderPostBodyFilters{}

// LdapProviderPostBodyFilters struct for LdapProviderPostBodyFilters
type LdapProviderPostBodyFilters struct {
	GroupsByUsername string `json:"groupsByUsername"`
	UserByUsername string `json:"userByUsername"`
}

// NewLdapProviderPostBodyFilters instantiates a new LdapProviderPostBodyFilters object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLdapProviderPostBodyFilters(groupsByUsername string, userByUsername string) *LdapProviderPostBodyFilters {
	this := LdapProviderPostBodyFilters{}
	this.GroupsByUsername = groupsByUsername
	this.UserByUsername = userByUsername
	return &this
}

// NewLdapProviderPostBodyFiltersWithDefaults instantiates a new LdapProviderPostBodyFilters object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLdapProviderPostBodyFiltersWithDefaults() *LdapProviderPostBodyFilters {
	this := LdapProviderPostBodyFilters{}
	return &this
}

// GetGroupsByUsername returns the GroupsByUsername field value
func (o *LdapProviderPostBodyFilters) GetGroupsByUsername() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.GroupsByUsername
}

// GetGroupsByUsernameOk returns a tuple with the GroupsByUsername field value
// and a boolean to check if the value has been set.
func (o *LdapProviderPostBodyFilters) GetGroupsByUsernameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.GroupsByUsername, true
}

// SetGroupsByUsername sets field value
func (o *LdapProviderPostBodyFilters) SetGroupsByUsername(v string) {
	o.GroupsByUsername = v
}

// GetUserByUsername returns the UserByUsername field value
func (o *LdapProviderPostBodyFilters) GetUserByUsername() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.UserByUsername
}

// GetUserByUsernameOk returns a tuple with the UserByUsername field value
// and a boolean to check if the value has been set.
func (o *LdapProviderPostBodyFilters) GetUserByUsernameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UserByUsername, true
}

// SetUserByUsername sets field value
func (o *LdapProviderPostBodyFilters) SetUserByUsername(v string) {
	o.UserByUsername = v
}

func (o LdapProviderPostBodyFilters) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o LdapProviderPostBodyFilters) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["groupsByUsername"] = o.GroupsByUsername
	toSerialize["userByUsername"] = o.UserByUsername
	return toSerialize, nil
}

type NullableLdapProviderPostBodyFilters struct {
	value *LdapProviderPostBodyFilters
	isSet bool
}

func (v NullableLdapProviderPostBodyFilters) Get() *LdapProviderPostBodyFilters {
	return v.value
}

func (v *NullableLdapProviderPostBodyFilters) Set(val *LdapProviderPostBodyFilters) {
	v.value = val
	v.isSet = true
}

func (v NullableLdapProviderPostBodyFilters) IsSet() bool {
	return v.isSet
}

func (v *NullableLdapProviderPostBodyFilters) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLdapProviderPostBodyFilters(val *LdapProviderPostBodyFilters) *NullableLdapProviderPostBodyFilters {
	return &NullableLdapProviderPostBodyFilters{value: val, isSet: true}
}

func (v NullableLdapProviderPostBodyFilters) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLdapProviderPostBodyFilters) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


