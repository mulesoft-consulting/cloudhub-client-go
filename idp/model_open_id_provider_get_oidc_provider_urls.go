/*
Identity Provider Management API

Description of Identity Provider API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package idp

import (
	"encoding/json"
)

// checks if the OpenIDProviderGetOidcProviderUrls type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OpenIDProviderGetOidcProviderUrls{}

// OpenIDProviderGetOidcProviderUrls struct for OpenIDProviderGetOidcProviderUrls
type OpenIDProviderGetOidcProviderUrls struct {
	Authorize string `json:"authorize"`
	Redirect string `json:"redirect"`
	Token string `json:"token"`
	Userinfo string `json:"userinfo"`
}

// NewOpenIDProviderGetOidcProviderUrls instantiates a new OpenIDProviderGetOidcProviderUrls object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOpenIDProviderGetOidcProviderUrls(authorize string, redirect string, token string, userinfo string) *OpenIDProviderGetOidcProviderUrls {
	this := OpenIDProviderGetOidcProviderUrls{}
	this.Authorize = authorize
	this.Redirect = redirect
	this.Token = token
	this.Userinfo = userinfo
	return &this
}

// NewOpenIDProviderGetOidcProviderUrlsWithDefaults instantiates a new OpenIDProviderGetOidcProviderUrls object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOpenIDProviderGetOidcProviderUrlsWithDefaults() *OpenIDProviderGetOidcProviderUrls {
	this := OpenIDProviderGetOidcProviderUrls{}
	return &this
}

// GetAuthorize returns the Authorize field value
func (o *OpenIDProviderGetOidcProviderUrls) GetAuthorize() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Authorize
}

// GetAuthorizeOk returns a tuple with the Authorize field value
// and a boolean to check if the value has been set.
func (o *OpenIDProviderGetOidcProviderUrls) GetAuthorizeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Authorize, true
}

// SetAuthorize sets field value
func (o *OpenIDProviderGetOidcProviderUrls) SetAuthorize(v string) {
	o.Authorize = v
}

// GetRedirect returns the Redirect field value
func (o *OpenIDProviderGetOidcProviderUrls) GetRedirect() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Redirect
}

// GetRedirectOk returns a tuple with the Redirect field value
// and a boolean to check if the value has been set.
func (o *OpenIDProviderGetOidcProviderUrls) GetRedirectOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Redirect, true
}

// SetRedirect sets field value
func (o *OpenIDProviderGetOidcProviderUrls) SetRedirect(v string) {
	o.Redirect = v
}

// GetToken returns the Token field value
func (o *OpenIDProviderGetOidcProviderUrls) GetToken() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Token
}

// GetTokenOk returns a tuple with the Token field value
// and a boolean to check if the value has been set.
func (o *OpenIDProviderGetOidcProviderUrls) GetTokenOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Token, true
}

// SetToken sets field value
func (o *OpenIDProviderGetOidcProviderUrls) SetToken(v string) {
	o.Token = v
}

// GetUserinfo returns the Userinfo field value
func (o *OpenIDProviderGetOidcProviderUrls) GetUserinfo() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Userinfo
}

// GetUserinfoOk returns a tuple with the Userinfo field value
// and a boolean to check if the value has been set.
func (o *OpenIDProviderGetOidcProviderUrls) GetUserinfoOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Userinfo, true
}

// SetUserinfo sets field value
func (o *OpenIDProviderGetOidcProviderUrls) SetUserinfo(v string) {
	o.Userinfo = v
}

func (o OpenIDProviderGetOidcProviderUrls) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OpenIDProviderGetOidcProviderUrls) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["authorize"] = o.Authorize
	toSerialize["redirect"] = o.Redirect
	toSerialize["token"] = o.Token
	toSerialize["userinfo"] = o.Userinfo
	return toSerialize, nil
}

type NullableOpenIDProviderGetOidcProviderUrls struct {
	value *OpenIDProviderGetOidcProviderUrls
	isSet bool
}

func (v NullableOpenIDProviderGetOidcProviderUrls) Get() *OpenIDProviderGetOidcProviderUrls {
	return v.value
}

func (v *NullableOpenIDProviderGetOidcProviderUrls) Set(val *OpenIDProviderGetOidcProviderUrls) {
	v.value = val
	v.isSet = true
}

func (v NullableOpenIDProviderGetOidcProviderUrls) IsSet() bool {
	return v.isSet
}

func (v *NullableOpenIDProviderGetOidcProviderUrls) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOpenIDProviderGetOidcProviderUrls(val *OpenIDProviderGetOidcProviderUrls) *NullableOpenIDProviderGetOidcProviderUrls {
	return &NullableOpenIDProviderGetOidcProviderUrls{value: val, isSet: true}
}

func (v NullableOpenIDProviderGetOidcProviderUrls) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOpenIDProviderGetOidcProviderUrls) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


