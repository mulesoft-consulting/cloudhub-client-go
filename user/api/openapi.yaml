openapi: 3.0.0
info:
  description: Description of the User API
  title: User API
  version: 1.0.0
servers:
- description: Anypoint Cloudhub
  url: https://anypoint.mulesoft.com/accounts/api/
- description: Anypoint Cloudhub EU
  url: https://eu1.anypoint.mulesoft.com/accounts/api/
- description: Anypoint Cloudhub GOV
  url: https://gov.anypoint.mulesoft.com/accounts/api/
security:
- bearerAuth: []
paths:
  /organizations/{orgId}/users:
    get:
      description: Returns the group of users that belong to the specified organization.
      parameters:
      - description: The ID of the organization in GUID format
        explode: false
        in: path
        name: orgId
        required: true
        schema:
          type: string
        style: simple
      - description: A search string to specify the type of user you want to retrieve.
        explode: true
        in: query
        name: type
        required: false
        schema:
          enum:
          - host
          - proxy
          - all
          type: string
        style: form
      - description: Maximum number of users to retrieve per request.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - description: The number of records to omit from the response.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      responses:
        "401":
          description: Access token is missing or invalid
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_organizations__orgId__users_get_200_response'
          description: Success response
    post:
      description: Creates a User
      parameters:
      - description: The ID of the organization in GUID format
        explode: false
        in: path
        name: orgId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/userPostBody'
      responses:
        "401":
          description: Access token is missing or invalid
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_organizations__orgId__users_post_400_response'
          description: Bad request response
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/user'
          description: Success response
  /organizations/{orgId}/users/{userId}:
    delete:
      description: Delete the user
      parameters:
      - description: The ID of the organization in GUID format
        explode: false
        in: path
        name: orgId
        required: true
        schema:
          type: string
        style: simple
      - description: The ID of the user
        explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "401":
          description: Access token is missing or invalid
        "204":
          description: Success response
    get:
      description: Returns a specific user that belong to the specified organization.
      parameters:
      - description: The ID of the organization in GUID format
        explode: false
        in: path
        name: orgId
        required: true
        schema:
          type: string
        style: simple
      - description: the ID of the user
        explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "401":
          description: Access token is missing or invalid
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/user'
          description: Success response
    put:
      description: Update a user
      parameters:
      - description: The ID of the organization in GUID format
        explode: false
        in: path
        name: orgId
        required: true
        schema:
          type: string
        style: simple
      - description: The ID of the user
        explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/userPutBody'
      responses:
        "401":
          description: Access token is missing or invalid
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_organizations__orgId__users_post_400_response'
          description: Bad request response
        "204":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/user'
          description: Success response
components:
  responses:
    UnauthorizedError:
      description: Access token is missing or invalid
    BadRequestError:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/_organizations__orgId__users_post_400_response'
      description: Bad request response
    SuccessPostUser:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/user'
      description: Success response
    SuccessPutUser:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/user'
      description: Success response
    SuccessDeleteUser:
      description: Success response
    SuccessListUsers:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/_organizations__orgId__users_get_200_response'
      description: Success response
    SuccessGetUser:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/user'
      description: Success response
  schemas:
    userPostBody:
      properties:
        username:
          title: username
          type: string
        firstName:
          title: firstName
          type: string
        lastName:
          title: lastName
          type: string
        email:
          title: email
          type: string
        phoneNumber:
          title: phoneNumber
          type: string
        password:
          title: password
          type: string
      title: userPostBody
      type: object
    userPutBody:
      properties:
        username:
          title: username
          type: string
        firstName:
          title: firstName
          type: string
        lastName:
          title: lastName
          type: string
        email:
          title: email
          type: string
        phoneNumber:
          title: phoneNumber
          type: string
        password:
          title: password
          type: string
        properties:
          title: properties
          type: object
      title: userPutBody
      type: object
    user:
      allOf:
      - $ref: '#/components/schemas/userId'
      - $ref: '#/components/schemas/userCore'
      title: user
    userCore:
      properties:
        username:
          example: UzerMule.test
          title: username
          type: string
        firstName:
          example: Uzer
          title: firstName
          type: string
        lastName:
          default: Mule
          title: lastName
          type: string
        phoneNumber:
          example: 111-111-1111
          title: phoneNumber
          type: string
        email:
          example: api.platform.qa+uzer@gmail.com
          title: email
          type: string
        organizationId:
          example: xxxxxx-213d-4f60-845c-207286484cd1
          title: organizationId
          type: string
        enabled:
          example: true
          title: enabled
          type: boolean
        deleted:
          example: false
          title: deleted
          type: boolean
        lastLogin:
          example: 2021-07-12T09:28:43.569Z
          title: lastLogin
          type: string
        mfaVerificationExcluded:
          example: false
          title: mfaVerificationExcluded
          type: boolean
        mfaVerifiersConfigured:
          example: "false"
          title: mfaVerifiersConfigured
          type: string
        idprovider_id:
          example: mulesoft
          title: idproviderId
          type: string
        createdAt:
          example: Mon Feb 09 2015 17:47:26 GMT-0300 (ART)
          title: createdAt
          type: string
        updatedAt:
          example: Mon Feb 09 2015 17:47:26 GMT-0300 (ART)
          title: updatedAt
          type: string
        isFederated:
          example: false
          title: isFederated
          type: boolean
        type:
          title: type
          type: string
        organization:
          $ref: '#/components/schemas/organization'
        memberOfOrganizations:
          items:
            $ref: '#/components/schemas/org'
          title: memberOfOrganizations
          type: array
        contributorOfOrganizations:
          items:
            $ref: '#/components/schemas/org'
          title: contributorOfOrganizations
          type: array
        properties:
          $ref: '#/components/schemas/properties'
        organizationPreferences:
          title: organizationPreferences
          type: object
        primaryOrganization:
          $ref: '#/components/schemas/primaryOrganization'
      title: userCore
      type: object
    organization:
      properties:
        name:
          title: name
          type: string
        id:
          title: id
          type: string
        createdAt:
          title: createdAt
          type: string
        updatedAt:
          title: updatedAt
          type: string
        ownerId:
          title: ownerId
          type: string
        clientId:
          title: clientId
          type: string
        idprovider_id:
          title: idprovider_id
          type: string
        isFederated:
          title: isFederated
          type: boolean
        parentOrganizationIds:
          items:
            type: string
          title: parentOrganizationIds
          type: array
        subOrganizationIds:
          items:
            type: string
          title: subOrganizationIds
          type: array
        tenantOrganizationIds:
          items:
            type: string
          title: tenantOrganizationIds
          type: array
        mfaRequired:
          title: mfaRequired
          type: string
        isAutomaticAdminPromotionExempt:
          title: isAutomaticAdminPromotionExempt
          type: boolean
        domain:
          title: domain
          type: string
        isMaster:
          title: isMaster
          type: boolean
        subscription:
          $ref: '#/components/schemas/subscription'
        properties:
          title: properties
          type: object
        entitlements:
          title: entitlements
          type: object
      title: organization
      type: object
    memberOfOrganizations:
      items:
        $ref: '#/components/schemas/org'
      title: memberOfOrganizations
      type: array
    contributorOfOrganizations:
      items:
        $ref: '#/components/schemas/org'
      title: contributorOfOrganizations
      type: array
    org:
      properties:
        parentName:
          nullable: true
          title: parentName
          type: string
        parentId:
          nullable: true
          title: parentId
          type: string
        domain:
          title: domain
          type: string
        name:
          title: name
          type: string
        id:
          title: id
          type: string
        createdAt:
          title: createdAt
          type: string
        updatedAt:
          title: updatedAt
          type: string
        ownerId:
          title: ownerId
          type: string
        clientId:
          title: clientId
          type: string
        idprovider_id:
          title: idprovider_id
          type: string
        isFederated:
          title: isFederated
          type: boolean
        parentOrganizationIds:
          items:
            type: string
          title: parentOrganizationIds
          type: array
        subOrganizationIds:
          items:
            type: string
          title: subOrganizationIds
          type: array
        tenantOrganizationIds:
          items:
            type: string
          title: tenantOrganizationIds
          type: array
        mfaRequired:
          title: mfaRequired
          type: string
        isAutomaticAdminPromotionExempt:
          title: isAutomaticAdminPromotionExempt
          type: boolean
        isMaster:
          title: isMaster
          type: boolean
        subscription:
          $ref: '#/components/schemas/subscription'
      title: org
      type: object
    _organizations__orgId__users_get_200_response:
      example:
        total: 0
        data:
        - null
        - null
      properties:
        data:
          items:
            $ref: '#/components/schemas/user'
          title: List of users
          type: array
        total:
          title: Total number of results
          type: integer
      type: object
    _organizations__orgId__users_post_400_response:
      properties:
        status:
          default: 400
          title: the response status code
          type: integer
        message:
          example: A sample message here
          title: the error message
          type: string
      type: object
    userId:
      properties:
        id:
          description: The user Id
          example: 4b353f44-6486-42ae-ae77-18b4032f9643
          title: id
          type: string
      required:
      - id
      title: userId
      type: object
      example: null
    properties:
      properties:
        cs_auth:
          title: cs_auth
          type: object
      title: properties
      type: object
    primaryOrganization:
      properties:
        id:
          title: id
          type: string
        name:
          title: name
          type: string
      title: primaryOrganization
      type: object
    subscription:
      properties:
        category:
          title: category
          type: string
        type:
          title: type
          type: string
        expiration:
          title: expiration
          type: string
      title: subscription
      type: object
  securitySchemes:
    bearerAuth:
      bearerFormat: JWT
      scheme: bearer
      type: http
