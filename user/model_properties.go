/*
User API

Description of the User API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package user

import (
	"encoding/json"
)

// checks if the Properties type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Properties{}

// Properties struct for Properties
type Properties struct {
	CsAuth map[string]interface{} `json:"cs_auth,omitempty"`
}

// NewProperties instantiates a new Properties object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProperties() *Properties {
	this := Properties{}
	return &this
}

// NewPropertiesWithDefaults instantiates a new Properties object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPropertiesWithDefaults() *Properties {
	this := Properties{}
	return &this
}

// GetCsAuth returns the CsAuth field value if set, zero value otherwise.
func (o *Properties) GetCsAuth() map[string]interface{} {
	if o == nil || IsNil(o.CsAuth) {
		var ret map[string]interface{}
		return ret
	}
	return o.CsAuth
}

// GetCsAuthOk returns a tuple with the CsAuth field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Properties) GetCsAuthOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.CsAuth) {
		return map[string]interface{}{}, false
	}
	return o.CsAuth, true
}

// HasCsAuth returns a boolean if a field has been set.
func (o *Properties) HasCsAuth() bool {
	if o != nil && !IsNil(o.CsAuth) {
		return true
	}

	return false
}

// SetCsAuth gets a reference to the given map[string]interface{} and assigns it to the CsAuth field.
func (o *Properties) SetCsAuth(v map[string]interface{}) {
	o.CsAuth = v
}

func (o Properties) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Properties) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CsAuth) {
		toSerialize["cs_auth"] = o.CsAuth
	}
	return toSerialize, nil
}

type NullableProperties struct {
	value *Properties
	isSet bool
}

func (v NullableProperties) Get() *Properties {
	return v.value
}

func (v *NullableProperties) Set(val *Properties) {
	v.value = val
	v.isSet = true
}

func (v NullableProperties) IsSet() bool {
	return v.isSet
}

func (v *NullableProperties) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProperties(val *Properties) *NullableProperties {
	return &NullableProperties{value: val, isSet: true}
}

func (v NullableProperties) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProperties) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


