/*
Organization API

Description of the Organization API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package org

import (
	"encoding/json"
)

// checks if the ApiQueryC360 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApiQueryC360{}

// ApiQueryC360 An explanation about the purpose of this instance.
type ApiQueryC360 struct {
	// An explanation about the purpose of this instance.
	Enabled bool `json:"enabled"`
}

// NewApiQueryC360 instantiates a new ApiQueryC360 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiQueryC360(enabled bool) *ApiQueryC360 {
	this := ApiQueryC360{}
	this.Enabled = enabled
	return &this
}

// NewApiQueryC360WithDefaults instantiates a new ApiQueryC360 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiQueryC360WithDefaults() *ApiQueryC360 {
	this := ApiQueryC360{}
	var enabled bool = false
	this.Enabled = enabled
	return &this
}

// GetEnabled returns the Enabled field value
func (o *ApiQueryC360) GetEnabled() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value
// and a boolean to check if the value has been set.
func (o *ApiQueryC360) GetEnabledOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Enabled, true
}

// SetEnabled sets field value
func (o *ApiQueryC360) SetEnabled(v bool) {
	o.Enabled = v
}

func (o ApiQueryC360) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApiQueryC360) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["enabled"] = o.Enabled
	return toSerialize, nil
}

type NullableApiQueryC360 struct {
	value *ApiQueryC360
	isSet bool
}

func (v NullableApiQueryC360) Get() *ApiQueryC360 {
	return v.value
}

func (v *NullableApiQueryC360) Set(val *ApiQueryC360) {
	v.value = val
	v.isSet = true
}

func (v NullableApiQueryC360) IsSet() bool {
	return v.isSet
}

func (v *NullableApiQueryC360) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiQueryC360(val *ApiQueryC360) *NullableApiQueryC360 {
	return &NullableApiQueryC360{value: val, isSet: true}
}

func (v NullableApiQueryC360) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiQueryC360) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


