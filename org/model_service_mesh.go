/*
Organization API

Description of the Organization API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package org

import (
	"encoding/json"
)

// checks if the ServiceMesh type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ServiceMesh{}

// ServiceMesh An explanation about the purpose of this instance.
type ServiceMesh struct {
	// An explanation about the purpose of this instance.
	Enabled bool `json:"enabled"`
}

// NewServiceMesh instantiates a new ServiceMesh object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewServiceMesh(enabled bool) *ServiceMesh {
	this := ServiceMesh{}
	this.Enabled = enabled
	return &this
}

// NewServiceMeshWithDefaults instantiates a new ServiceMesh object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewServiceMeshWithDefaults() *ServiceMesh {
	this := ServiceMesh{}
	var enabled bool = false
	this.Enabled = enabled
	return &this
}

// GetEnabled returns the Enabled field value
func (o *ServiceMesh) GetEnabled() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value
// and a boolean to check if the value has been set.
func (o *ServiceMesh) GetEnabledOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Enabled, true
}

// SetEnabled sets field value
func (o *ServiceMesh) SetEnabled(v bool) {
	o.Enabled = v
}

func (o ServiceMesh) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ServiceMesh) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["enabled"] = o.Enabled
	return toSerialize, nil
}

type NullableServiceMesh struct {
	value *ServiceMesh
	isSet bool
}

func (v NullableServiceMesh) Get() *ServiceMesh {
	return v.value
}

func (v *NullableServiceMesh) Set(val *ServiceMesh) {
	v.value = val
	v.isSet = true
}

func (v NullableServiceMesh) IsSet() bool {
	return v.isSet
}

func (v *NullableServiceMesh) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableServiceMesh(val *ServiceMesh) *NullableServiceMesh {
	return &NullableServiceMesh{value: val, isSet: true}
}

func (v NullableServiceMesh) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableServiceMesh) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


