/*
Organization API

Description of the Organization API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package org

import (
	"encoding/json"
)

// checks if the Owner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Owner{}

// Owner struct for Owner
type Owner struct {
	// An explanation about the purpose of this instance.
	CreatedAt *string `json:"createdAt,omitempty"`
	// An explanation about the purpose of this instance.
	Deleted *bool `json:"deleted,omitempty"`
	// An explanation about the purpose of this instance.
	Email *string `json:"email,omitempty"`
	// An explanation about the purpose of this instance.
	Enabled *bool `json:"enabled,omitempty"`
	// An explanation about the purpose of this instance.
	FirstName *string `json:"firstName,omitempty"`
	// An explanation about the purpose of this instance.
	Id *string `json:"id,omitempty"`
	// An explanation about the purpose of this instance.
	IdproviderId *string `json:"idprovider_id,omitempty"`
	// An explanation about the purpose of this instance.
	LastLogin *string `json:"lastLogin,omitempty"`
	// An explanation about the purpose of this instance.
	LastName *string `json:"lastName,omitempty"`
	// An explanation about the purpose of this instance.
	MfaVerificationExcluded *bool `json:"mfaVerificationExcluded,omitempty"`
	// An explanation about the purpose of this instance.
	MfaVerifiersConfigured *string `json:"mfaVerifiersConfigured,omitempty"`
	// An explanation about the purpose of this instance.
	OrganizationId *string `json:"organizationId,omitempty"`
	// An explanation about the purpose of this instance.
	PhoneNumber *string `json:"phoneNumber,omitempty"`
	// An explanation about the purpose of this instance.
	Type *string `json:"type,omitempty"`
	// An explanation about the purpose of this instance.
	UpdatedAt *string `json:"updatedAt,omitempty"`
	// An explanation about the purpose of this instance.
	Username *string `json:"username,omitempty"`
}

// NewOwner instantiates a new Owner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOwner() *Owner {
	this := Owner{}
	var createdAt string = ""
	this.CreatedAt = &createdAt
	var deleted bool = false
	this.Deleted = &deleted
	var email string = ""
	this.Email = &email
	var enabled bool = false
	this.Enabled = &enabled
	var firstName string = ""
	this.FirstName = &firstName
	var id string = ""
	this.Id = &id
	var idproviderId string = ""
	this.IdproviderId = &idproviderId
	var lastLogin string = ""
	this.LastLogin = &lastLogin
	var lastName string = ""
	this.LastName = &lastName
	var mfaVerificationExcluded bool = false
	this.MfaVerificationExcluded = &mfaVerificationExcluded
	var mfaVerifiersConfigured string = ""
	this.MfaVerifiersConfigured = &mfaVerifiersConfigured
	var organizationId string = ""
	this.OrganizationId = &organizationId
	var phoneNumber string = ""
	this.PhoneNumber = &phoneNumber
	var type_ string = ""
	this.Type = &type_
	var updatedAt string = ""
	this.UpdatedAt = &updatedAt
	var username string = ""
	this.Username = &username
	return &this
}

// NewOwnerWithDefaults instantiates a new Owner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOwnerWithDefaults() *Owner {
	this := Owner{}
	var createdAt string = ""
	this.CreatedAt = &createdAt
	var deleted bool = false
	this.Deleted = &deleted
	var email string = ""
	this.Email = &email
	var enabled bool = false
	this.Enabled = &enabled
	var firstName string = ""
	this.FirstName = &firstName
	var id string = ""
	this.Id = &id
	var idproviderId string = ""
	this.IdproviderId = &idproviderId
	var lastLogin string = ""
	this.LastLogin = &lastLogin
	var lastName string = ""
	this.LastName = &lastName
	var mfaVerificationExcluded bool = false
	this.MfaVerificationExcluded = &mfaVerificationExcluded
	var mfaVerifiersConfigured string = ""
	this.MfaVerifiersConfigured = &mfaVerifiersConfigured
	var organizationId string = ""
	this.OrganizationId = &organizationId
	var phoneNumber string = ""
	this.PhoneNumber = &phoneNumber
	var type_ string = ""
	this.Type = &type_
	var updatedAt string = ""
	this.UpdatedAt = &updatedAt
	var username string = ""
	this.Username = &username
	return &this
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *Owner) GetCreatedAt() string {
	if o == nil || IsNil(o.CreatedAt) {
		var ret string
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Owner) GetCreatedAtOk() (*string, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *Owner) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given string and assigns it to the CreatedAt field.
func (o *Owner) SetCreatedAt(v string) {
	o.CreatedAt = &v
}

// GetDeleted returns the Deleted field value if set, zero value otherwise.
func (o *Owner) GetDeleted() bool {
	if o == nil || IsNil(o.Deleted) {
		var ret bool
		return ret
	}
	return *o.Deleted
}

// GetDeletedOk returns a tuple with the Deleted field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Owner) GetDeletedOk() (*bool, bool) {
	if o == nil || IsNil(o.Deleted) {
		return nil, false
	}
	return o.Deleted, true
}

// HasDeleted returns a boolean if a field has been set.
func (o *Owner) HasDeleted() bool {
	if o != nil && !IsNil(o.Deleted) {
		return true
	}

	return false
}

// SetDeleted gets a reference to the given bool and assigns it to the Deleted field.
func (o *Owner) SetDeleted(v bool) {
	o.Deleted = &v
}

// GetEmail returns the Email field value if set, zero value otherwise.
func (o *Owner) GetEmail() string {
	if o == nil || IsNil(o.Email) {
		var ret string
		return ret
	}
	return *o.Email
}

// GetEmailOk returns a tuple with the Email field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Owner) GetEmailOk() (*string, bool) {
	if o == nil || IsNil(o.Email) {
		return nil, false
	}
	return o.Email, true
}

// HasEmail returns a boolean if a field has been set.
func (o *Owner) HasEmail() bool {
	if o != nil && !IsNil(o.Email) {
		return true
	}

	return false
}

// SetEmail gets a reference to the given string and assigns it to the Email field.
func (o *Owner) SetEmail(v string) {
	o.Email = &v
}

// GetEnabled returns the Enabled field value if set, zero value otherwise.
func (o *Owner) GetEnabled() bool {
	if o == nil || IsNil(o.Enabled) {
		var ret bool
		return ret
	}
	return *o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Owner) GetEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.Enabled) {
		return nil, false
	}
	return o.Enabled, true
}

// HasEnabled returns a boolean if a field has been set.
func (o *Owner) HasEnabled() bool {
	if o != nil && !IsNil(o.Enabled) {
		return true
	}

	return false
}

// SetEnabled gets a reference to the given bool and assigns it to the Enabled field.
func (o *Owner) SetEnabled(v bool) {
	o.Enabled = &v
}

// GetFirstName returns the FirstName field value if set, zero value otherwise.
func (o *Owner) GetFirstName() string {
	if o == nil || IsNil(o.FirstName) {
		var ret string
		return ret
	}
	return *o.FirstName
}

// GetFirstNameOk returns a tuple with the FirstName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Owner) GetFirstNameOk() (*string, bool) {
	if o == nil || IsNil(o.FirstName) {
		return nil, false
	}
	return o.FirstName, true
}

// HasFirstName returns a boolean if a field has been set.
func (o *Owner) HasFirstName() bool {
	if o != nil && !IsNil(o.FirstName) {
		return true
	}

	return false
}

// SetFirstName gets a reference to the given string and assigns it to the FirstName field.
func (o *Owner) SetFirstName(v string) {
	o.FirstName = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *Owner) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Owner) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *Owner) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *Owner) SetId(v string) {
	o.Id = &v
}

// GetIdproviderId returns the IdproviderId field value if set, zero value otherwise.
func (o *Owner) GetIdproviderId() string {
	if o == nil || IsNil(o.IdproviderId) {
		var ret string
		return ret
	}
	return *o.IdproviderId
}

// GetIdproviderIdOk returns a tuple with the IdproviderId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Owner) GetIdproviderIdOk() (*string, bool) {
	if o == nil || IsNil(o.IdproviderId) {
		return nil, false
	}
	return o.IdproviderId, true
}

// HasIdproviderId returns a boolean if a field has been set.
func (o *Owner) HasIdproviderId() bool {
	if o != nil && !IsNil(o.IdproviderId) {
		return true
	}

	return false
}

// SetIdproviderId gets a reference to the given string and assigns it to the IdproviderId field.
func (o *Owner) SetIdproviderId(v string) {
	o.IdproviderId = &v
}

// GetLastLogin returns the LastLogin field value if set, zero value otherwise.
func (o *Owner) GetLastLogin() string {
	if o == nil || IsNil(o.LastLogin) {
		var ret string
		return ret
	}
	return *o.LastLogin
}

// GetLastLoginOk returns a tuple with the LastLogin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Owner) GetLastLoginOk() (*string, bool) {
	if o == nil || IsNil(o.LastLogin) {
		return nil, false
	}
	return o.LastLogin, true
}

// HasLastLogin returns a boolean if a field has been set.
func (o *Owner) HasLastLogin() bool {
	if o != nil && !IsNil(o.LastLogin) {
		return true
	}

	return false
}

// SetLastLogin gets a reference to the given string and assigns it to the LastLogin field.
func (o *Owner) SetLastLogin(v string) {
	o.LastLogin = &v
}

// GetLastName returns the LastName field value if set, zero value otherwise.
func (o *Owner) GetLastName() string {
	if o == nil || IsNil(o.LastName) {
		var ret string
		return ret
	}
	return *o.LastName
}

// GetLastNameOk returns a tuple with the LastName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Owner) GetLastNameOk() (*string, bool) {
	if o == nil || IsNil(o.LastName) {
		return nil, false
	}
	return o.LastName, true
}

// HasLastName returns a boolean if a field has been set.
func (o *Owner) HasLastName() bool {
	if o != nil && !IsNil(o.LastName) {
		return true
	}

	return false
}

// SetLastName gets a reference to the given string and assigns it to the LastName field.
func (o *Owner) SetLastName(v string) {
	o.LastName = &v
}

// GetMfaVerificationExcluded returns the MfaVerificationExcluded field value if set, zero value otherwise.
func (o *Owner) GetMfaVerificationExcluded() bool {
	if o == nil || IsNil(o.MfaVerificationExcluded) {
		var ret bool
		return ret
	}
	return *o.MfaVerificationExcluded
}

// GetMfaVerificationExcludedOk returns a tuple with the MfaVerificationExcluded field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Owner) GetMfaVerificationExcludedOk() (*bool, bool) {
	if o == nil || IsNil(o.MfaVerificationExcluded) {
		return nil, false
	}
	return o.MfaVerificationExcluded, true
}

// HasMfaVerificationExcluded returns a boolean if a field has been set.
func (o *Owner) HasMfaVerificationExcluded() bool {
	if o != nil && !IsNil(o.MfaVerificationExcluded) {
		return true
	}

	return false
}

// SetMfaVerificationExcluded gets a reference to the given bool and assigns it to the MfaVerificationExcluded field.
func (o *Owner) SetMfaVerificationExcluded(v bool) {
	o.MfaVerificationExcluded = &v
}

// GetMfaVerifiersConfigured returns the MfaVerifiersConfigured field value if set, zero value otherwise.
func (o *Owner) GetMfaVerifiersConfigured() string {
	if o == nil || IsNil(o.MfaVerifiersConfigured) {
		var ret string
		return ret
	}
	return *o.MfaVerifiersConfigured
}

// GetMfaVerifiersConfiguredOk returns a tuple with the MfaVerifiersConfigured field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Owner) GetMfaVerifiersConfiguredOk() (*string, bool) {
	if o == nil || IsNil(o.MfaVerifiersConfigured) {
		return nil, false
	}
	return o.MfaVerifiersConfigured, true
}

// HasMfaVerifiersConfigured returns a boolean if a field has been set.
func (o *Owner) HasMfaVerifiersConfigured() bool {
	if o != nil && !IsNil(o.MfaVerifiersConfigured) {
		return true
	}

	return false
}

// SetMfaVerifiersConfigured gets a reference to the given string and assigns it to the MfaVerifiersConfigured field.
func (o *Owner) SetMfaVerifiersConfigured(v string) {
	o.MfaVerifiersConfigured = &v
}

// GetOrganizationId returns the OrganizationId field value if set, zero value otherwise.
func (o *Owner) GetOrganizationId() string {
	if o == nil || IsNil(o.OrganizationId) {
		var ret string
		return ret
	}
	return *o.OrganizationId
}

// GetOrganizationIdOk returns a tuple with the OrganizationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Owner) GetOrganizationIdOk() (*string, bool) {
	if o == nil || IsNil(o.OrganizationId) {
		return nil, false
	}
	return o.OrganizationId, true
}

// HasOrganizationId returns a boolean if a field has been set.
func (o *Owner) HasOrganizationId() bool {
	if o != nil && !IsNil(o.OrganizationId) {
		return true
	}

	return false
}

// SetOrganizationId gets a reference to the given string and assigns it to the OrganizationId field.
func (o *Owner) SetOrganizationId(v string) {
	o.OrganizationId = &v
}

// GetPhoneNumber returns the PhoneNumber field value if set, zero value otherwise.
func (o *Owner) GetPhoneNumber() string {
	if o == nil || IsNil(o.PhoneNumber) {
		var ret string
		return ret
	}
	return *o.PhoneNumber
}

// GetPhoneNumberOk returns a tuple with the PhoneNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Owner) GetPhoneNumberOk() (*string, bool) {
	if o == nil || IsNil(o.PhoneNumber) {
		return nil, false
	}
	return o.PhoneNumber, true
}

// HasPhoneNumber returns a boolean if a field has been set.
func (o *Owner) HasPhoneNumber() bool {
	if o != nil && !IsNil(o.PhoneNumber) {
		return true
	}

	return false
}

// SetPhoneNumber gets a reference to the given string and assigns it to the PhoneNumber field.
func (o *Owner) SetPhoneNumber(v string) {
	o.PhoneNumber = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *Owner) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Owner) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *Owner) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *Owner) SetType(v string) {
	o.Type = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *Owner) GetUpdatedAt() string {
	if o == nil || IsNil(o.UpdatedAt) {
		var ret string
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Owner) GetUpdatedAtOk() (*string, bool) {
	if o == nil || IsNil(o.UpdatedAt) {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *Owner) HasUpdatedAt() bool {
	if o != nil && !IsNil(o.UpdatedAt) {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given string and assigns it to the UpdatedAt field.
func (o *Owner) SetUpdatedAt(v string) {
	o.UpdatedAt = &v
}

// GetUsername returns the Username field value if set, zero value otherwise.
func (o *Owner) GetUsername() string {
	if o == nil || IsNil(o.Username) {
		var ret string
		return ret
	}
	return *o.Username
}

// GetUsernameOk returns a tuple with the Username field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Owner) GetUsernameOk() (*string, bool) {
	if o == nil || IsNil(o.Username) {
		return nil, false
	}
	return o.Username, true
}

// HasUsername returns a boolean if a field has been set.
func (o *Owner) HasUsername() bool {
	if o != nil && !IsNil(o.Username) {
		return true
	}

	return false
}

// SetUsername gets a reference to the given string and assigns it to the Username field.
func (o *Owner) SetUsername(v string) {
	o.Username = &v
}

func (o Owner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Owner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CreatedAt) {
		toSerialize["createdAt"] = o.CreatedAt
	}
	if !IsNil(o.Deleted) {
		toSerialize["deleted"] = o.Deleted
	}
	if !IsNil(o.Email) {
		toSerialize["email"] = o.Email
	}
	if !IsNil(o.Enabled) {
		toSerialize["enabled"] = o.Enabled
	}
	if !IsNil(o.FirstName) {
		toSerialize["firstName"] = o.FirstName
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.IdproviderId) {
		toSerialize["idprovider_id"] = o.IdproviderId
	}
	if !IsNil(o.LastLogin) {
		toSerialize["lastLogin"] = o.LastLogin
	}
	if !IsNil(o.LastName) {
		toSerialize["lastName"] = o.LastName
	}
	if !IsNil(o.MfaVerificationExcluded) {
		toSerialize["mfaVerificationExcluded"] = o.MfaVerificationExcluded
	}
	if !IsNil(o.MfaVerifiersConfigured) {
		toSerialize["mfaVerifiersConfigured"] = o.MfaVerifiersConfigured
	}
	if !IsNil(o.OrganizationId) {
		toSerialize["organizationId"] = o.OrganizationId
	}
	if !IsNil(o.PhoneNumber) {
		toSerialize["phoneNumber"] = o.PhoneNumber
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.UpdatedAt) {
		toSerialize["updatedAt"] = o.UpdatedAt
	}
	if !IsNil(o.Username) {
		toSerialize["username"] = o.Username
	}
	return toSerialize, nil
}

type NullableOwner struct {
	value *Owner
	isSet bool
}

func (v NullableOwner) Get() *Owner {
	return v.value
}

func (v *NullableOwner) Set(val *Owner) {
	v.value = val
	v.isSet = true
}

func (v NullableOwner) IsSet() bool {
	return v.isSet
}

func (v *NullableOwner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOwner(val *Owner) *NullableOwner {
	return &NullableOwner{value: val, isSet: true}
}

func (v NullableOwner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOwner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


