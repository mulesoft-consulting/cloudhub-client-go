/*
Organization API

Description of the Organization API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package org

import (
	"encoding/json"
)

// checks if the BGCore type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BGCore{}

// BGCore struct for BGCore
type BGCore struct {
	// An explanation about the purpose of this instance.
	ClientId *string `json:"clientId,omitempty"`
	// An explanation about the purpose of this instance.
	CreatedAt *string `json:"createdAt,omitempty"`
	// An explanation about the purpose of this instance.
	Domain *string `json:"domain,omitempty"`
	Entitlements *Entitlements `json:"entitlements,omitempty"`
	// An explanation about the purpose of this instance.
	Environments []Environment `json:"environments,omitempty"`
	// An explanation about the purpose of this instance.
	Id *string `json:"id,omitempty"`
	// An explanation about the purpose of this instance.
	IdproviderId *string `json:"idprovider_id,omitempty"`
	// An explanation about the purpose of this instance.
	IsAutomaticAdminPromotionExempt *bool `json:"isAutomaticAdminPromotionExempt,omitempty"`
	// An explanation about the purpose of this instance.
	IsFederated *bool `json:"isFederated,omitempty"`
	// An explanation about the purpose of this instance.
	IsMaster *bool `json:"isMaster,omitempty"`
	// An explanation about the purpose of this instance.
	MfaRequired *string `json:"mfaRequired,omitempty"`
	// An explanation about the purpose of this instance.
	Name *string `json:"name,omitempty"`
	// An explanation about the purpose of this instance.
	OwnerId *string `json:"ownerId,omitempty"`
	// An explanation about the purpose of this instance.
	ParentOrganizationIds []string `json:"parentOrganizationIds,omitempty"`
	// An explanation about the purpose of this instance.
	Properties map[string]interface{} `json:"properties,omitempty"`
	// An explanation about the purpose of this instance.
	SubOrganizationIds []string `json:"subOrganizationIds,omitempty"`
	// An explanation about the purpose of this instance.
	TenantOrganizationIds []string `json:"tenantOrganizationIds,omitempty"`
	// An explanation about the purpose of this instance.
	UpdatedAt *string `json:"updatedAt,omitempty"`
	Owner *Owner `json:"owner,omitempty"`
}

// NewBGCore instantiates a new BGCore object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBGCore() *BGCore {
	this := BGCore{}
	var clientId string = ""
	this.ClientId = &clientId
	var createdAt string = ""
	this.CreatedAt = &createdAt
	var domain string = ""
	this.Domain = &domain
	var id string = ""
	this.Id = &id
	var idproviderId string = ""
	this.IdproviderId = &idproviderId
	var isAutomaticAdminPromotionExempt bool = false
	this.IsAutomaticAdminPromotionExempt = &isAutomaticAdminPromotionExempt
	var isFederated bool = false
	this.IsFederated = &isFederated
	var isMaster bool = false
	this.IsMaster = &isMaster
	var mfaRequired string = ""
	this.MfaRequired = &mfaRequired
	var name string = ""
	this.Name = &name
	var ownerId string = ""
	this.OwnerId = &ownerId
	var updatedAt string = ""
	this.UpdatedAt = &updatedAt
	return &this
}

// NewBGCoreWithDefaults instantiates a new BGCore object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBGCoreWithDefaults() *BGCore {
	this := BGCore{}
	var clientId string = ""
	this.ClientId = &clientId
	var createdAt string = ""
	this.CreatedAt = &createdAt
	var domain string = ""
	this.Domain = &domain
	var id string = ""
	this.Id = &id
	var idproviderId string = ""
	this.IdproviderId = &idproviderId
	var isAutomaticAdminPromotionExempt bool = false
	this.IsAutomaticAdminPromotionExempt = &isAutomaticAdminPromotionExempt
	var isFederated bool = false
	this.IsFederated = &isFederated
	var isMaster bool = false
	this.IsMaster = &isMaster
	var mfaRequired string = ""
	this.MfaRequired = &mfaRequired
	var name string = ""
	this.Name = &name
	var ownerId string = ""
	this.OwnerId = &ownerId
	var updatedAt string = ""
	this.UpdatedAt = &updatedAt
	return &this
}

// GetClientId returns the ClientId field value if set, zero value otherwise.
func (o *BGCore) GetClientId() string {
	if o == nil || IsNil(o.ClientId) {
		var ret string
		return ret
	}
	return *o.ClientId
}

// GetClientIdOk returns a tuple with the ClientId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BGCore) GetClientIdOk() (*string, bool) {
	if o == nil || IsNil(o.ClientId) {
		return nil, false
	}
	return o.ClientId, true
}

// HasClientId returns a boolean if a field has been set.
func (o *BGCore) HasClientId() bool {
	if o != nil && !IsNil(o.ClientId) {
		return true
	}

	return false
}

// SetClientId gets a reference to the given string and assigns it to the ClientId field.
func (o *BGCore) SetClientId(v string) {
	o.ClientId = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *BGCore) GetCreatedAt() string {
	if o == nil || IsNil(o.CreatedAt) {
		var ret string
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BGCore) GetCreatedAtOk() (*string, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *BGCore) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given string and assigns it to the CreatedAt field.
func (o *BGCore) SetCreatedAt(v string) {
	o.CreatedAt = &v
}

// GetDomain returns the Domain field value if set, zero value otherwise.
func (o *BGCore) GetDomain() string {
	if o == nil || IsNil(o.Domain) {
		var ret string
		return ret
	}
	return *o.Domain
}

// GetDomainOk returns a tuple with the Domain field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BGCore) GetDomainOk() (*string, bool) {
	if o == nil || IsNil(o.Domain) {
		return nil, false
	}
	return o.Domain, true
}

// HasDomain returns a boolean if a field has been set.
func (o *BGCore) HasDomain() bool {
	if o != nil && !IsNil(o.Domain) {
		return true
	}

	return false
}

// SetDomain gets a reference to the given string and assigns it to the Domain field.
func (o *BGCore) SetDomain(v string) {
	o.Domain = &v
}

// GetEntitlements returns the Entitlements field value if set, zero value otherwise.
func (o *BGCore) GetEntitlements() Entitlements {
	if o == nil || IsNil(o.Entitlements) {
		var ret Entitlements
		return ret
	}
	return *o.Entitlements
}

// GetEntitlementsOk returns a tuple with the Entitlements field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BGCore) GetEntitlementsOk() (*Entitlements, bool) {
	if o == nil || IsNil(o.Entitlements) {
		return nil, false
	}
	return o.Entitlements, true
}

// HasEntitlements returns a boolean if a field has been set.
func (o *BGCore) HasEntitlements() bool {
	if o != nil && !IsNil(o.Entitlements) {
		return true
	}

	return false
}

// SetEntitlements gets a reference to the given Entitlements and assigns it to the Entitlements field.
func (o *BGCore) SetEntitlements(v Entitlements) {
	o.Entitlements = &v
}

// GetEnvironments returns the Environments field value if set, zero value otherwise.
func (o *BGCore) GetEnvironments() []Environment {
	if o == nil || IsNil(o.Environments) {
		var ret []Environment
		return ret
	}
	return o.Environments
}

// GetEnvironmentsOk returns a tuple with the Environments field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BGCore) GetEnvironmentsOk() ([]Environment, bool) {
	if o == nil || IsNil(o.Environments) {
		return nil, false
	}
	return o.Environments, true
}

// HasEnvironments returns a boolean if a field has been set.
func (o *BGCore) HasEnvironments() bool {
	if o != nil && !IsNil(o.Environments) {
		return true
	}

	return false
}

// SetEnvironments gets a reference to the given []Environment and assigns it to the Environments field.
func (o *BGCore) SetEnvironments(v []Environment) {
	o.Environments = v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *BGCore) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BGCore) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *BGCore) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *BGCore) SetId(v string) {
	o.Id = &v
}

// GetIdproviderId returns the IdproviderId field value if set, zero value otherwise.
func (o *BGCore) GetIdproviderId() string {
	if o == nil || IsNil(o.IdproviderId) {
		var ret string
		return ret
	}
	return *o.IdproviderId
}

// GetIdproviderIdOk returns a tuple with the IdproviderId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BGCore) GetIdproviderIdOk() (*string, bool) {
	if o == nil || IsNil(o.IdproviderId) {
		return nil, false
	}
	return o.IdproviderId, true
}

// HasIdproviderId returns a boolean if a field has been set.
func (o *BGCore) HasIdproviderId() bool {
	if o != nil && !IsNil(o.IdproviderId) {
		return true
	}

	return false
}

// SetIdproviderId gets a reference to the given string and assigns it to the IdproviderId field.
func (o *BGCore) SetIdproviderId(v string) {
	o.IdproviderId = &v
}

// GetIsAutomaticAdminPromotionExempt returns the IsAutomaticAdminPromotionExempt field value if set, zero value otherwise.
func (o *BGCore) GetIsAutomaticAdminPromotionExempt() bool {
	if o == nil || IsNil(o.IsAutomaticAdminPromotionExempt) {
		var ret bool
		return ret
	}
	return *o.IsAutomaticAdminPromotionExempt
}

// GetIsAutomaticAdminPromotionExemptOk returns a tuple with the IsAutomaticAdminPromotionExempt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BGCore) GetIsAutomaticAdminPromotionExemptOk() (*bool, bool) {
	if o == nil || IsNil(o.IsAutomaticAdminPromotionExempt) {
		return nil, false
	}
	return o.IsAutomaticAdminPromotionExempt, true
}

// HasIsAutomaticAdminPromotionExempt returns a boolean if a field has been set.
func (o *BGCore) HasIsAutomaticAdminPromotionExempt() bool {
	if o != nil && !IsNil(o.IsAutomaticAdminPromotionExempt) {
		return true
	}

	return false
}

// SetIsAutomaticAdminPromotionExempt gets a reference to the given bool and assigns it to the IsAutomaticAdminPromotionExempt field.
func (o *BGCore) SetIsAutomaticAdminPromotionExempt(v bool) {
	o.IsAutomaticAdminPromotionExempt = &v
}

// GetIsFederated returns the IsFederated field value if set, zero value otherwise.
func (o *BGCore) GetIsFederated() bool {
	if o == nil || IsNil(o.IsFederated) {
		var ret bool
		return ret
	}
	return *o.IsFederated
}

// GetIsFederatedOk returns a tuple with the IsFederated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BGCore) GetIsFederatedOk() (*bool, bool) {
	if o == nil || IsNil(o.IsFederated) {
		return nil, false
	}
	return o.IsFederated, true
}

// HasIsFederated returns a boolean if a field has been set.
func (o *BGCore) HasIsFederated() bool {
	if o != nil && !IsNil(o.IsFederated) {
		return true
	}

	return false
}

// SetIsFederated gets a reference to the given bool and assigns it to the IsFederated field.
func (o *BGCore) SetIsFederated(v bool) {
	o.IsFederated = &v
}

// GetIsMaster returns the IsMaster field value if set, zero value otherwise.
func (o *BGCore) GetIsMaster() bool {
	if o == nil || IsNil(o.IsMaster) {
		var ret bool
		return ret
	}
	return *o.IsMaster
}

// GetIsMasterOk returns a tuple with the IsMaster field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BGCore) GetIsMasterOk() (*bool, bool) {
	if o == nil || IsNil(o.IsMaster) {
		return nil, false
	}
	return o.IsMaster, true
}

// HasIsMaster returns a boolean if a field has been set.
func (o *BGCore) HasIsMaster() bool {
	if o != nil && !IsNil(o.IsMaster) {
		return true
	}

	return false
}

// SetIsMaster gets a reference to the given bool and assigns it to the IsMaster field.
func (o *BGCore) SetIsMaster(v bool) {
	o.IsMaster = &v
}

// GetMfaRequired returns the MfaRequired field value if set, zero value otherwise.
func (o *BGCore) GetMfaRequired() string {
	if o == nil || IsNil(o.MfaRequired) {
		var ret string
		return ret
	}
	return *o.MfaRequired
}

// GetMfaRequiredOk returns a tuple with the MfaRequired field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BGCore) GetMfaRequiredOk() (*string, bool) {
	if o == nil || IsNil(o.MfaRequired) {
		return nil, false
	}
	return o.MfaRequired, true
}

// HasMfaRequired returns a boolean if a field has been set.
func (o *BGCore) HasMfaRequired() bool {
	if o != nil && !IsNil(o.MfaRequired) {
		return true
	}

	return false
}

// SetMfaRequired gets a reference to the given string and assigns it to the MfaRequired field.
func (o *BGCore) SetMfaRequired(v string) {
	o.MfaRequired = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *BGCore) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BGCore) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *BGCore) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *BGCore) SetName(v string) {
	o.Name = &v
}

// GetOwnerId returns the OwnerId field value if set, zero value otherwise.
func (o *BGCore) GetOwnerId() string {
	if o == nil || IsNil(o.OwnerId) {
		var ret string
		return ret
	}
	return *o.OwnerId
}

// GetOwnerIdOk returns a tuple with the OwnerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BGCore) GetOwnerIdOk() (*string, bool) {
	if o == nil || IsNil(o.OwnerId) {
		return nil, false
	}
	return o.OwnerId, true
}

// HasOwnerId returns a boolean if a field has been set.
func (o *BGCore) HasOwnerId() bool {
	if o != nil && !IsNil(o.OwnerId) {
		return true
	}

	return false
}

// SetOwnerId gets a reference to the given string and assigns it to the OwnerId field.
func (o *BGCore) SetOwnerId(v string) {
	o.OwnerId = &v
}

// GetParentOrganizationIds returns the ParentOrganizationIds field value if set, zero value otherwise.
func (o *BGCore) GetParentOrganizationIds() []string {
	if o == nil || IsNil(o.ParentOrganizationIds) {
		var ret []string
		return ret
	}
	return o.ParentOrganizationIds
}

// GetParentOrganizationIdsOk returns a tuple with the ParentOrganizationIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BGCore) GetParentOrganizationIdsOk() ([]string, bool) {
	if o == nil || IsNil(o.ParentOrganizationIds) {
		return nil, false
	}
	return o.ParentOrganizationIds, true
}

// HasParentOrganizationIds returns a boolean if a field has been set.
func (o *BGCore) HasParentOrganizationIds() bool {
	if o != nil && !IsNil(o.ParentOrganizationIds) {
		return true
	}

	return false
}

// SetParentOrganizationIds gets a reference to the given []string and assigns it to the ParentOrganizationIds field.
func (o *BGCore) SetParentOrganizationIds(v []string) {
	o.ParentOrganizationIds = v
}

// GetProperties returns the Properties field value if set, zero value otherwise.
func (o *BGCore) GetProperties() map[string]interface{} {
	if o == nil || IsNil(o.Properties) {
		var ret map[string]interface{}
		return ret
	}
	return o.Properties
}

// GetPropertiesOk returns a tuple with the Properties field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BGCore) GetPropertiesOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Properties) {
		return map[string]interface{}{}, false
	}
	return o.Properties, true
}

// HasProperties returns a boolean if a field has been set.
func (o *BGCore) HasProperties() bool {
	if o != nil && !IsNil(o.Properties) {
		return true
	}

	return false
}

// SetProperties gets a reference to the given map[string]interface{} and assigns it to the Properties field.
func (o *BGCore) SetProperties(v map[string]interface{}) {
	o.Properties = v
}

// GetSubOrganizationIds returns the SubOrganizationIds field value if set, zero value otherwise.
func (o *BGCore) GetSubOrganizationIds() []string {
	if o == nil || IsNil(o.SubOrganizationIds) {
		var ret []string
		return ret
	}
	return o.SubOrganizationIds
}

// GetSubOrganizationIdsOk returns a tuple with the SubOrganizationIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BGCore) GetSubOrganizationIdsOk() ([]string, bool) {
	if o == nil || IsNil(o.SubOrganizationIds) {
		return nil, false
	}
	return o.SubOrganizationIds, true
}

// HasSubOrganizationIds returns a boolean if a field has been set.
func (o *BGCore) HasSubOrganizationIds() bool {
	if o != nil && !IsNil(o.SubOrganizationIds) {
		return true
	}

	return false
}

// SetSubOrganizationIds gets a reference to the given []string and assigns it to the SubOrganizationIds field.
func (o *BGCore) SetSubOrganizationIds(v []string) {
	o.SubOrganizationIds = v
}

// GetTenantOrganizationIds returns the TenantOrganizationIds field value if set, zero value otherwise.
func (o *BGCore) GetTenantOrganizationIds() []string {
	if o == nil || IsNil(o.TenantOrganizationIds) {
		var ret []string
		return ret
	}
	return o.TenantOrganizationIds
}

// GetTenantOrganizationIdsOk returns a tuple with the TenantOrganizationIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BGCore) GetTenantOrganizationIdsOk() ([]string, bool) {
	if o == nil || IsNil(o.TenantOrganizationIds) {
		return nil, false
	}
	return o.TenantOrganizationIds, true
}

// HasTenantOrganizationIds returns a boolean if a field has been set.
func (o *BGCore) HasTenantOrganizationIds() bool {
	if o != nil && !IsNil(o.TenantOrganizationIds) {
		return true
	}

	return false
}

// SetTenantOrganizationIds gets a reference to the given []string and assigns it to the TenantOrganizationIds field.
func (o *BGCore) SetTenantOrganizationIds(v []string) {
	o.TenantOrganizationIds = v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *BGCore) GetUpdatedAt() string {
	if o == nil || IsNil(o.UpdatedAt) {
		var ret string
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BGCore) GetUpdatedAtOk() (*string, bool) {
	if o == nil || IsNil(o.UpdatedAt) {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *BGCore) HasUpdatedAt() bool {
	if o != nil && !IsNil(o.UpdatedAt) {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given string and assigns it to the UpdatedAt field.
func (o *BGCore) SetUpdatedAt(v string) {
	o.UpdatedAt = &v
}

// GetOwner returns the Owner field value if set, zero value otherwise.
func (o *BGCore) GetOwner() Owner {
	if o == nil || IsNil(o.Owner) {
		var ret Owner
		return ret
	}
	return *o.Owner
}

// GetOwnerOk returns a tuple with the Owner field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BGCore) GetOwnerOk() (*Owner, bool) {
	if o == nil || IsNil(o.Owner) {
		return nil, false
	}
	return o.Owner, true
}

// HasOwner returns a boolean if a field has been set.
func (o *BGCore) HasOwner() bool {
	if o != nil && !IsNil(o.Owner) {
		return true
	}

	return false
}

// SetOwner gets a reference to the given Owner and assigns it to the Owner field.
func (o *BGCore) SetOwner(v Owner) {
	o.Owner = &v
}

func (o BGCore) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BGCore) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ClientId) {
		toSerialize["clientId"] = o.ClientId
	}
	if !IsNil(o.CreatedAt) {
		toSerialize["createdAt"] = o.CreatedAt
	}
	if !IsNil(o.Domain) {
		toSerialize["domain"] = o.Domain
	}
	if !IsNil(o.Entitlements) {
		toSerialize["entitlements"] = o.Entitlements
	}
	if !IsNil(o.Environments) {
		toSerialize["environments"] = o.Environments
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.IdproviderId) {
		toSerialize["idprovider_id"] = o.IdproviderId
	}
	if !IsNil(o.IsAutomaticAdminPromotionExempt) {
		toSerialize["isAutomaticAdminPromotionExempt"] = o.IsAutomaticAdminPromotionExempt
	}
	if !IsNil(o.IsFederated) {
		toSerialize["isFederated"] = o.IsFederated
	}
	if !IsNil(o.IsMaster) {
		toSerialize["isMaster"] = o.IsMaster
	}
	if !IsNil(o.MfaRequired) {
		toSerialize["mfaRequired"] = o.MfaRequired
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.OwnerId) {
		toSerialize["ownerId"] = o.OwnerId
	}
	if !IsNil(o.ParentOrganizationIds) {
		toSerialize["parentOrganizationIds"] = o.ParentOrganizationIds
	}
	if !IsNil(o.Properties) {
		toSerialize["properties"] = o.Properties
	}
	if !IsNil(o.SubOrganizationIds) {
		toSerialize["subOrganizationIds"] = o.SubOrganizationIds
	}
	if !IsNil(o.TenantOrganizationIds) {
		toSerialize["tenantOrganizationIds"] = o.TenantOrganizationIds
	}
	if !IsNil(o.UpdatedAt) {
		toSerialize["updatedAt"] = o.UpdatedAt
	}
	if !IsNil(o.Owner) {
		toSerialize["owner"] = o.Owner
	}
	return toSerialize, nil
}

type NullableBGCore struct {
	value *BGCore
	isSet bool
}

func (v NullableBGCore) Get() *BGCore {
	return v.value
}

func (v *NullableBGCore) Set(val *BGCore) {
	v.value = val
	v.isSet = true
}

func (v NullableBGCore) IsSet() bool {
	return v.isSet
}

func (v *NullableBGCore) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBGCore(val *BGCore) *NullableBGCore {
	return &NullableBGCore{value: val, isSet: true}
}

func (v NullableBGCore) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBGCore) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


