/*
Organization API

Description of the Organization API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package org

import (
	"encoding/json"
)

// checks if the MonitoringCenter type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MonitoringCenter{}

// MonitoringCenter An explanation about the purpose of this instance.
type MonitoringCenter struct {
	// An explanation about the purpose of this instance.
	ProductSKU int32 `json:"productSKU"`
}

// NewMonitoringCenter instantiates a new MonitoringCenter object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMonitoringCenter(productSKU int32) *MonitoringCenter {
	this := MonitoringCenter{}
	this.ProductSKU = productSKU
	return &this
}

// NewMonitoringCenterWithDefaults instantiates a new MonitoringCenter object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMonitoringCenterWithDefaults() *MonitoringCenter {
	this := MonitoringCenter{}
	var productSKU int32 = 0
	this.ProductSKU = productSKU
	return &this
}

// GetProductSKU returns the ProductSKU field value
func (o *MonitoringCenter) GetProductSKU() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.ProductSKU
}

// GetProductSKUOk returns a tuple with the ProductSKU field value
// and a boolean to check if the value has been set.
func (o *MonitoringCenter) GetProductSKUOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ProductSKU, true
}

// SetProductSKU sets field value
func (o *MonitoringCenter) SetProductSKU(v int32) {
	o.ProductSKU = v
}

func (o MonitoringCenter) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MonitoringCenter) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["productSKU"] = o.ProductSKU
	return toSerialize, nil
}

type NullableMonitoringCenter struct {
	value *MonitoringCenter
	isSet bool
}

func (v NullableMonitoringCenter) Get() *MonitoringCenter {
	return v.value
}

func (v *NullableMonitoringCenter) Set(val *MonitoringCenter) {
	v.value = val
	v.isSet = true
}

func (v NullableMonitoringCenter) IsSet() bool {
	return v.isSet
}

func (v *NullableMonitoringCenter) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMonitoringCenter(val *MonitoringCenter) *NullableMonitoringCenter {
	return &NullableMonitoringCenter{value: val, isSet: true}
}

func (v NullableMonitoringCenter) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMonitoringCenter) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


