/*
Organization API

Description of the Organization API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package org

import (
	"encoding/json"
)

// checks if the Crowd type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Crowd{}

// Crowd An explanation about the purpose of this instance.
type Crowd struct {
	// An explanation about the purpose of this instance.
	Environments bool `json:"environments"`
	// An explanation about the purpose of this instance.
	HideApiManagerDesigner bool `json:"hideApiManagerDesigner"`
	// An explanation about the purpose of this instance.
	HideFormerApiPlatform bool `json:"hideFormerApiPlatform"`
}

// NewCrowd instantiates a new Crowd object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCrowd(environments bool, hideApiManagerDesigner bool, hideFormerApiPlatform bool) *Crowd {
	this := Crowd{}
	this.Environments = environments
	this.HideApiManagerDesigner = hideApiManagerDesigner
	this.HideFormerApiPlatform = hideFormerApiPlatform
	return &this
}

// NewCrowdWithDefaults instantiates a new Crowd object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCrowdWithDefaults() *Crowd {
	this := Crowd{}
	var environments bool = false
	this.Environments = environments
	var hideApiManagerDesigner bool = false
	this.HideApiManagerDesigner = hideApiManagerDesigner
	var hideFormerApiPlatform bool = false
	this.HideFormerApiPlatform = hideFormerApiPlatform
	return &this
}

// GetEnvironments returns the Environments field value
func (o *Crowd) GetEnvironments() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Environments
}

// GetEnvironmentsOk returns a tuple with the Environments field value
// and a boolean to check if the value has been set.
func (o *Crowd) GetEnvironmentsOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Environments, true
}

// SetEnvironments sets field value
func (o *Crowd) SetEnvironments(v bool) {
	o.Environments = v
}

// GetHideApiManagerDesigner returns the HideApiManagerDesigner field value
func (o *Crowd) GetHideApiManagerDesigner() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.HideApiManagerDesigner
}

// GetHideApiManagerDesignerOk returns a tuple with the HideApiManagerDesigner field value
// and a boolean to check if the value has been set.
func (o *Crowd) GetHideApiManagerDesignerOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.HideApiManagerDesigner, true
}

// SetHideApiManagerDesigner sets field value
func (o *Crowd) SetHideApiManagerDesigner(v bool) {
	o.HideApiManagerDesigner = v
}

// GetHideFormerApiPlatform returns the HideFormerApiPlatform field value
func (o *Crowd) GetHideFormerApiPlatform() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.HideFormerApiPlatform
}

// GetHideFormerApiPlatformOk returns a tuple with the HideFormerApiPlatform field value
// and a boolean to check if the value has been set.
func (o *Crowd) GetHideFormerApiPlatformOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.HideFormerApiPlatform, true
}

// SetHideFormerApiPlatform sets field value
func (o *Crowd) SetHideFormerApiPlatform(v bool) {
	o.HideFormerApiPlatform = v
}

func (o Crowd) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Crowd) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["environments"] = o.Environments
	toSerialize["hideApiManagerDesigner"] = o.HideApiManagerDesigner
	toSerialize["hideFormerApiPlatform"] = o.HideFormerApiPlatform
	return toSerialize, nil
}

type NullableCrowd struct {
	value *Crowd
	isSet bool
}

func (v NullableCrowd) Get() *Crowd {
	return v.value
}

func (v *NullableCrowd) Set(val *Crowd) {
	v.value = val
	v.isSet = true
}

func (v NullableCrowd) IsSet() bool {
	return v.isSet
}

func (v *NullableCrowd) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCrowd(val *Crowd) *NullableCrowd {
	return &NullableCrowd{value: val, isSet: true}
}

func (v NullableCrowd) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCrowd) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


