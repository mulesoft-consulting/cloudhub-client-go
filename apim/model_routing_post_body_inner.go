/*
API Manager API

API Manager API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package apim

import (
	"encoding/json"
)

// checks if the RoutingPostBodyInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RoutingPostBodyInner{}

// RoutingPostBodyInner struct for RoutingPostBodyInner
type RoutingPostBodyInner struct {
	Label *string `json:"label,omitempty"`
	Rules *RoutingRules `json:"rules,omitempty"`
	Upstreams *RoutingPostBodyInnerUpstreams `json:"upstreams,omitempty"`
}

// NewRoutingPostBodyInner instantiates a new RoutingPostBodyInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRoutingPostBodyInner() *RoutingPostBodyInner {
	this := RoutingPostBodyInner{}
	return &this
}

// NewRoutingPostBodyInnerWithDefaults instantiates a new RoutingPostBodyInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRoutingPostBodyInnerWithDefaults() *RoutingPostBodyInner {
	this := RoutingPostBodyInner{}
	return &this
}

// GetLabel returns the Label field value if set, zero value otherwise.
func (o *RoutingPostBodyInner) GetLabel() string {
	if o == nil || IsNil(o.Label) {
		var ret string
		return ret
	}
	return *o.Label
}

// GetLabelOk returns a tuple with the Label field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoutingPostBodyInner) GetLabelOk() (*string, bool) {
	if o == nil || IsNil(o.Label) {
		return nil, false
	}
	return o.Label, true
}

// HasLabel returns a boolean if a field has been set.
func (o *RoutingPostBodyInner) HasLabel() bool {
	if o != nil && !IsNil(o.Label) {
		return true
	}

	return false
}

// SetLabel gets a reference to the given string and assigns it to the Label field.
func (o *RoutingPostBodyInner) SetLabel(v string) {
	o.Label = &v
}

// GetRules returns the Rules field value if set, zero value otherwise.
func (o *RoutingPostBodyInner) GetRules() RoutingRules {
	if o == nil || IsNil(o.Rules) {
		var ret RoutingRules
		return ret
	}
	return *o.Rules
}

// GetRulesOk returns a tuple with the Rules field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoutingPostBodyInner) GetRulesOk() (*RoutingRules, bool) {
	if o == nil || IsNil(o.Rules) {
		return nil, false
	}
	return o.Rules, true
}

// HasRules returns a boolean if a field has been set.
func (o *RoutingPostBodyInner) HasRules() bool {
	if o != nil && !IsNil(o.Rules) {
		return true
	}

	return false
}

// SetRules gets a reference to the given RoutingRules and assigns it to the Rules field.
func (o *RoutingPostBodyInner) SetRules(v RoutingRules) {
	o.Rules = &v
}

// GetUpstreams returns the Upstreams field value if set, zero value otherwise.
func (o *RoutingPostBodyInner) GetUpstreams() RoutingPostBodyInnerUpstreams {
	if o == nil || IsNil(o.Upstreams) {
		var ret RoutingPostBodyInnerUpstreams
		return ret
	}
	return *o.Upstreams
}

// GetUpstreamsOk returns a tuple with the Upstreams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoutingPostBodyInner) GetUpstreamsOk() (*RoutingPostBodyInnerUpstreams, bool) {
	if o == nil || IsNil(o.Upstreams) {
		return nil, false
	}
	return o.Upstreams, true
}

// HasUpstreams returns a boolean if a field has been set.
func (o *RoutingPostBodyInner) HasUpstreams() bool {
	if o != nil && !IsNil(o.Upstreams) {
		return true
	}

	return false
}

// SetUpstreams gets a reference to the given RoutingPostBodyInnerUpstreams and assigns it to the Upstreams field.
func (o *RoutingPostBodyInner) SetUpstreams(v RoutingPostBodyInnerUpstreams) {
	o.Upstreams = &v
}

func (o RoutingPostBodyInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RoutingPostBodyInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Label) {
		toSerialize["label"] = o.Label
	}
	if !IsNil(o.Rules) {
		toSerialize["rules"] = o.Rules
	}
	if !IsNil(o.Upstreams) {
		toSerialize["upstreams"] = o.Upstreams
	}
	return toSerialize, nil
}

type NullableRoutingPostBodyInner struct {
	value *RoutingPostBodyInner
	isSet bool
}

func (v NullableRoutingPostBodyInner) Get() *RoutingPostBodyInner {
	return v.value
}

func (v *NullableRoutingPostBodyInner) Set(val *RoutingPostBodyInner) {
	v.value = val
	v.isSet = true
}

func (v NullableRoutingPostBodyInner) IsSet() bool {
	return v.isSet
}

func (v *NullableRoutingPostBodyInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRoutingPostBodyInner(val *RoutingPostBodyInner) *NullableRoutingPostBodyInner {
	return &NullableRoutingPostBodyInner{value: val, isSet: true}
}

func (v NullableRoutingPostBodyInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRoutingPostBodyInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


