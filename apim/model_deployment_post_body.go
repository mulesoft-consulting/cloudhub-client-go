/*
API Manager API

API Manager API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package apim

import (
	"encoding/json"
)

// checks if the DeploymentPostBody type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DeploymentPostBody{}

// DeploymentPostBody struct for DeploymentPostBody
type DeploymentPostBody struct {
	EnvironmentId *string `json:"environmentId,omitempty"`
	Type *string `json:"type,omitempty"`
	ExpectedStatus *string `json:"expectedStatus,omitempty"`
	Overwrite *bool `json:"overwrite,omitempty"`
	TargetId *string `json:"targetId,omitempty"`
	TargetName *string `json:"targetName,omitempty"`
	GatewayVersion *string `json:"gatewayVersion,omitempty"`
}

// NewDeploymentPostBody instantiates a new DeploymentPostBody object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDeploymentPostBody() *DeploymentPostBody {
	this := DeploymentPostBody{}
	return &this
}

// NewDeploymentPostBodyWithDefaults instantiates a new DeploymentPostBody object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDeploymentPostBodyWithDefaults() *DeploymentPostBody {
	this := DeploymentPostBody{}
	return &this
}

// GetEnvironmentId returns the EnvironmentId field value if set, zero value otherwise.
func (o *DeploymentPostBody) GetEnvironmentId() string {
	if o == nil || IsNil(o.EnvironmentId) {
		var ret string
		return ret
	}
	return *o.EnvironmentId
}

// GetEnvironmentIdOk returns a tuple with the EnvironmentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeploymentPostBody) GetEnvironmentIdOk() (*string, bool) {
	if o == nil || IsNil(o.EnvironmentId) {
		return nil, false
	}
	return o.EnvironmentId, true
}

// HasEnvironmentId returns a boolean if a field has been set.
func (o *DeploymentPostBody) HasEnvironmentId() bool {
	if o != nil && !IsNil(o.EnvironmentId) {
		return true
	}

	return false
}

// SetEnvironmentId gets a reference to the given string and assigns it to the EnvironmentId field.
func (o *DeploymentPostBody) SetEnvironmentId(v string) {
	o.EnvironmentId = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *DeploymentPostBody) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeploymentPostBody) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *DeploymentPostBody) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *DeploymentPostBody) SetType(v string) {
	o.Type = &v
}

// GetExpectedStatus returns the ExpectedStatus field value if set, zero value otherwise.
func (o *DeploymentPostBody) GetExpectedStatus() string {
	if o == nil || IsNil(o.ExpectedStatus) {
		var ret string
		return ret
	}
	return *o.ExpectedStatus
}

// GetExpectedStatusOk returns a tuple with the ExpectedStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeploymentPostBody) GetExpectedStatusOk() (*string, bool) {
	if o == nil || IsNil(o.ExpectedStatus) {
		return nil, false
	}
	return o.ExpectedStatus, true
}

// HasExpectedStatus returns a boolean if a field has been set.
func (o *DeploymentPostBody) HasExpectedStatus() bool {
	if o != nil && !IsNil(o.ExpectedStatus) {
		return true
	}

	return false
}

// SetExpectedStatus gets a reference to the given string and assigns it to the ExpectedStatus field.
func (o *DeploymentPostBody) SetExpectedStatus(v string) {
	o.ExpectedStatus = &v
}

// GetOverwrite returns the Overwrite field value if set, zero value otherwise.
func (o *DeploymentPostBody) GetOverwrite() bool {
	if o == nil || IsNil(o.Overwrite) {
		var ret bool
		return ret
	}
	return *o.Overwrite
}

// GetOverwriteOk returns a tuple with the Overwrite field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeploymentPostBody) GetOverwriteOk() (*bool, bool) {
	if o == nil || IsNil(o.Overwrite) {
		return nil, false
	}
	return o.Overwrite, true
}

// HasOverwrite returns a boolean if a field has been set.
func (o *DeploymentPostBody) HasOverwrite() bool {
	if o != nil && !IsNil(o.Overwrite) {
		return true
	}

	return false
}

// SetOverwrite gets a reference to the given bool and assigns it to the Overwrite field.
func (o *DeploymentPostBody) SetOverwrite(v bool) {
	o.Overwrite = &v
}

// GetTargetId returns the TargetId field value if set, zero value otherwise.
func (o *DeploymentPostBody) GetTargetId() string {
	if o == nil || IsNil(o.TargetId) {
		var ret string
		return ret
	}
	return *o.TargetId
}

// GetTargetIdOk returns a tuple with the TargetId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeploymentPostBody) GetTargetIdOk() (*string, bool) {
	if o == nil || IsNil(o.TargetId) {
		return nil, false
	}
	return o.TargetId, true
}

// HasTargetId returns a boolean if a field has been set.
func (o *DeploymentPostBody) HasTargetId() bool {
	if o != nil && !IsNil(o.TargetId) {
		return true
	}

	return false
}

// SetTargetId gets a reference to the given string and assigns it to the TargetId field.
func (o *DeploymentPostBody) SetTargetId(v string) {
	o.TargetId = &v
}

// GetTargetName returns the TargetName field value if set, zero value otherwise.
func (o *DeploymentPostBody) GetTargetName() string {
	if o == nil || IsNil(o.TargetName) {
		var ret string
		return ret
	}
	return *o.TargetName
}

// GetTargetNameOk returns a tuple with the TargetName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeploymentPostBody) GetTargetNameOk() (*string, bool) {
	if o == nil || IsNil(o.TargetName) {
		return nil, false
	}
	return o.TargetName, true
}

// HasTargetName returns a boolean if a field has been set.
func (o *DeploymentPostBody) HasTargetName() bool {
	if o != nil && !IsNil(o.TargetName) {
		return true
	}

	return false
}

// SetTargetName gets a reference to the given string and assigns it to the TargetName field.
func (o *DeploymentPostBody) SetTargetName(v string) {
	o.TargetName = &v
}

// GetGatewayVersion returns the GatewayVersion field value if set, zero value otherwise.
func (o *DeploymentPostBody) GetGatewayVersion() string {
	if o == nil || IsNil(o.GatewayVersion) {
		var ret string
		return ret
	}
	return *o.GatewayVersion
}

// GetGatewayVersionOk returns a tuple with the GatewayVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeploymentPostBody) GetGatewayVersionOk() (*string, bool) {
	if o == nil || IsNil(o.GatewayVersion) {
		return nil, false
	}
	return o.GatewayVersion, true
}

// HasGatewayVersion returns a boolean if a field has been set.
func (o *DeploymentPostBody) HasGatewayVersion() bool {
	if o != nil && !IsNil(o.GatewayVersion) {
		return true
	}

	return false
}

// SetGatewayVersion gets a reference to the given string and assigns it to the GatewayVersion field.
func (o *DeploymentPostBody) SetGatewayVersion(v string) {
	o.GatewayVersion = &v
}

func (o DeploymentPostBody) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DeploymentPostBody) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.EnvironmentId) {
		toSerialize["environmentId"] = o.EnvironmentId
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.ExpectedStatus) {
		toSerialize["expectedStatus"] = o.ExpectedStatus
	}
	if !IsNil(o.Overwrite) {
		toSerialize["overwrite"] = o.Overwrite
	}
	if !IsNil(o.TargetId) {
		toSerialize["targetId"] = o.TargetId
	}
	if !IsNil(o.TargetName) {
		toSerialize["targetName"] = o.TargetName
	}
	if !IsNil(o.GatewayVersion) {
		toSerialize["gatewayVersion"] = o.GatewayVersion
	}
	return toSerialize, nil
}

type NullableDeploymentPostBody struct {
	value *DeploymentPostBody
	isSet bool
}

func (v NullableDeploymentPostBody) Get() *DeploymentPostBody {
	return v.value
}

func (v *NullableDeploymentPostBody) Set(val *DeploymentPostBody) {
	v.value = val
	v.isSet = true
}

func (v NullableDeploymentPostBody) IsSet() bool {
	return v.isSet
}

func (v *NullableDeploymentPostBody) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeploymentPostBody(val *DeploymentPostBody) *NullableDeploymentPostBody {
	return &NullableDeploymentPostBody{value: val, isSet: true}
}

func (v NullableDeploymentPostBody) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeploymentPostBody) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


