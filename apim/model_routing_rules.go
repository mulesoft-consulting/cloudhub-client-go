/*
API Manager API

API Manager API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package apim

import (
	"encoding/json"
)

// checks if the RoutingRules type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RoutingRules{}

// RoutingRules struct for RoutingRules
type RoutingRules struct {
	Methods *string `json:"methods,omitempty"`
	Host *string `json:"host,omitempty"`
	Path *string `json:"path,omitempty"`
	Headers map[string]interface{} `json:"headers,omitempty"`
}

// NewRoutingRules instantiates a new RoutingRules object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRoutingRules() *RoutingRules {
	this := RoutingRules{}
	return &this
}

// NewRoutingRulesWithDefaults instantiates a new RoutingRules object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRoutingRulesWithDefaults() *RoutingRules {
	this := RoutingRules{}
	return &this
}

// GetMethods returns the Methods field value if set, zero value otherwise.
func (o *RoutingRules) GetMethods() string {
	if o == nil || IsNil(o.Methods) {
		var ret string
		return ret
	}
	return *o.Methods
}

// GetMethodsOk returns a tuple with the Methods field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoutingRules) GetMethodsOk() (*string, bool) {
	if o == nil || IsNil(o.Methods) {
		return nil, false
	}
	return o.Methods, true
}

// HasMethods returns a boolean if a field has been set.
func (o *RoutingRules) HasMethods() bool {
	if o != nil && !IsNil(o.Methods) {
		return true
	}

	return false
}

// SetMethods gets a reference to the given string and assigns it to the Methods field.
func (o *RoutingRules) SetMethods(v string) {
	o.Methods = &v
}

// GetHost returns the Host field value if set, zero value otherwise.
func (o *RoutingRules) GetHost() string {
	if o == nil || IsNil(o.Host) {
		var ret string
		return ret
	}
	return *o.Host
}

// GetHostOk returns a tuple with the Host field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoutingRules) GetHostOk() (*string, bool) {
	if o == nil || IsNil(o.Host) {
		return nil, false
	}
	return o.Host, true
}

// HasHost returns a boolean if a field has been set.
func (o *RoutingRules) HasHost() bool {
	if o != nil && !IsNil(o.Host) {
		return true
	}

	return false
}

// SetHost gets a reference to the given string and assigns it to the Host field.
func (o *RoutingRules) SetHost(v string) {
	o.Host = &v
}

// GetPath returns the Path field value if set, zero value otherwise.
func (o *RoutingRules) GetPath() string {
	if o == nil || IsNil(o.Path) {
		var ret string
		return ret
	}
	return *o.Path
}

// GetPathOk returns a tuple with the Path field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoutingRules) GetPathOk() (*string, bool) {
	if o == nil || IsNil(o.Path) {
		return nil, false
	}
	return o.Path, true
}

// HasPath returns a boolean if a field has been set.
func (o *RoutingRules) HasPath() bool {
	if o != nil && !IsNil(o.Path) {
		return true
	}

	return false
}

// SetPath gets a reference to the given string and assigns it to the Path field.
func (o *RoutingRules) SetPath(v string) {
	o.Path = &v
}

// GetHeaders returns the Headers field value if set, zero value otherwise.
func (o *RoutingRules) GetHeaders() map[string]interface{} {
	if o == nil || IsNil(o.Headers) {
		var ret map[string]interface{}
		return ret
	}
	return o.Headers
}

// GetHeadersOk returns a tuple with the Headers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoutingRules) GetHeadersOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Headers) {
		return map[string]interface{}{}, false
	}
	return o.Headers, true
}

// HasHeaders returns a boolean if a field has been set.
func (o *RoutingRules) HasHeaders() bool {
	if o != nil && !IsNil(o.Headers) {
		return true
	}

	return false
}

// SetHeaders gets a reference to the given map[string]interface{} and assigns it to the Headers field.
func (o *RoutingRules) SetHeaders(v map[string]interface{}) {
	o.Headers = v
}

func (o RoutingRules) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RoutingRules) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Methods) {
		toSerialize["methods"] = o.Methods
	}
	if !IsNil(o.Host) {
		toSerialize["host"] = o.Host
	}
	if !IsNil(o.Path) {
		toSerialize["path"] = o.Path
	}
	if !IsNil(o.Headers) {
		toSerialize["headers"] = o.Headers
	}
	return toSerialize, nil
}

type NullableRoutingRules struct {
	value *RoutingRules
	isSet bool
}

func (v NullableRoutingRules) Get() *RoutingRules {
	return v.value
}

func (v *NullableRoutingRules) Set(val *RoutingRules) {
	v.value = val
	v.isSet = true
}

func (v NullableRoutingRules) IsSet() bool {
	return v.isSet
}

func (v *NullableRoutingRules) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRoutingRules(val *RoutingRules) *NullableRoutingRules {
	return &NullableRoutingRules{value: val, isSet: true}
}

func (v NullableRoutingRules) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRoutingRules) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


