/*
API Manager API

API Manager API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package apim

import (
	"encoding/json"
)

// checks if the RoutingUpstreamsInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RoutingUpstreamsInner{}

// RoutingUpstreamsInner struct for RoutingUpstreamsInner
type RoutingUpstreamsInner struct {
	Id *string `json:"id,omitempty"`
	Weight *int32 `json:"weight,omitempty"`
	Uri *string `json:"uri,omitempty"`
	Label *string `json:"label,omitempty"`
}

// NewRoutingUpstreamsInner instantiates a new RoutingUpstreamsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRoutingUpstreamsInner() *RoutingUpstreamsInner {
	this := RoutingUpstreamsInner{}
	return &this
}

// NewRoutingUpstreamsInnerWithDefaults instantiates a new RoutingUpstreamsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRoutingUpstreamsInnerWithDefaults() *RoutingUpstreamsInner {
	this := RoutingUpstreamsInner{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *RoutingUpstreamsInner) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoutingUpstreamsInner) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *RoutingUpstreamsInner) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *RoutingUpstreamsInner) SetId(v string) {
	o.Id = &v
}

// GetWeight returns the Weight field value if set, zero value otherwise.
func (o *RoutingUpstreamsInner) GetWeight() int32 {
	if o == nil || IsNil(o.Weight) {
		var ret int32
		return ret
	}
	return *o.Weight
}

// GetWeightOk returns a tuple with the Weight field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoutingUpstreamsInner) GetWeightOk() (*int32, bool) {
	if o == nil || IsNil(o.Weight) {
		return nil, false
	}
	return o.Weight, true
}

// HasWeight returns a boolean if a field has been set.
func (o *RoutingUpstreamsInner) HasWeight() bool {
	if o != nil && !IsNil(o.Weight) {
		return true
	}

	return false
}

// SetWeight gets a reference to the given int32 and assigns it to the Weight field.
func (o *RoutingUpstreamsInner) SetWeight(v int32) {
	o.Weight = &v
}

// GetUri returns the Uri field value if set, zero value otherwise.
func (o *RoutingUpstreamsInner) GetUri() string {
	if o == nil || IsNil(o.Uri) {
		var ret string
		return ret
	}
	return *o.Uri
}

// GetUriOk returns a tuple with the Uri field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoutingUpstreamsInner) GetUriOk() (*string, bool) {
	if o == nil || IsNil(o.Uri) {
		return nil, false
	}
	return o.Uri, true
}

// HasUri returns a boolean if a field has been set.
func (o *RoutingUpstreamsInner) HasUri() bool {
	if o != nil && !IsNil(o.Uri) {
		return true
	}

	return false
}

// SetUri gets a reference to the given string and assigns it to the Uri field.
func (o *RoutingUpstreamsInner) SetUri(v string) {
	o.Uri = &v
}

// GetLabel returns the Label field value if set, zero value otherwise.
func (o *RoutingUpstreamsInner) GetLabel() string {
	if o == nil || IsNil(o.Label) {
		var ret string
		return ret
	}
	return *o.Label
}

// GetLabelOk returns a tuple with the Label field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoutingUpstreamsInner) GetLabelOk() (*string, bool) {
	if o == nil || IsNil(o.Label) {
		return nil, false
	}
	return o.Label, true
}

// HasLabel returns a boolean if a field has been set.
func (o *RoutingUpstreamsInner) HasLabel() bool {
	if o != nil && !IsNil(o.Label) {
		return true
	}

	return false
}

// SetLabel gets a reference to the given string and assigns it to the Label field.
func (o *RoutingUpstreamsInner) SetLabel(v string) {
	o.Label = &v
}

func (o RoutingUpstreamsInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RoutingUpstreamsInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Weight) {
		toSerialize["weight"] = o.Weight
	}
	if !IsNil(o.Uri) {
		toSerialize["uri"] = o.Uri
	}
	if !IsNil(o.Label) {
		toSerialize["label"] = o.Label
	}
	return toSerialize, nil
}

type NullableRoutingUpstreamsInner struct {
	value *RoutingUpstreamsInner
	isSet bool
}

func (v NullableRoutingUpstreamsInner) Get() *RoutingUpstreamsInner {
	return v.value
}

func (v *NullableRoutingUpstreamsInner) Set(val *RoutingUpstreamsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableRoutingUpstreamsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableRoutingUpstreamsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRoutingUpstreamsInner(val *RoutingUpstreamsInner) *NullableRoutingUpstreamsInner {
	return &NullableRoutingUpstreamsInner{value: val, isSet: true}
}

func (v NullableRoutingUpstreamsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRoutingUpstreamsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


