/*
API Manager API

API Manager API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package apim

import (
	"encoding/json"
)

// checks if the Deployment type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Deployment{}

// Deployment struct for Deployment
type Deployment struct {
	Audit *Audit `json:"audit,omitempty"`
	Id *int32 `json:"id,omitempty"`
	ApplicationId *string `json:"applicationId,omitempty"`
	ApplicationName NullableString `json:"applicationName,omitempty"`
	GatewayVersion NullableString `json:"gatewayVersion,omitempty"`
	EnvironmentName NullableString `json:"environmentName,omitempty"`
	EnvironmentId NullableString `json:"environmentId,omitempty"`
	TargetId *string `json:"targetId,omitempty"`
	TargetName *string `json:"targetName,omitempty"`
	DeploymentId NullableString `json:"deploymentId,omitempty"`
	UpdatedDate *string `json:"updatedDate,omitempty"`
	Type *string `json:"type,omitempty"`
	ExpectedStatus *string `json:"expectedStatus,omitempty"`
	ApiId *int32 `json:"apiId,omitempty"`
}

// NewDeployment instantiates a new Deployment object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDeployment() *Deployment {
	this := Deployment{}
	return &this
}

// NewDeploymentWithDefaults instantiates a new Deployment object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDeploymentWithDefaults() *Deployment {
	this := Deployment{}
	return &this
}

// GetAudit returns the Audit field value if set, zero value otherwise.
func (o *Deployment) GetAudit() Audit {
	if o == nil || IsNil(o.Audit) {
		var ret Audit
		return ret
	}
	return *o.Audit
}

// GetAuditOk returns a tuple with the Audit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Deployment) GetAuditOk() (*Audit, bool) {
	if o == nil || IsNil(o.Audit) {
		return nil, false
	}
	return o.Audit, true
}

// HasAudit returns a boolean if a field has been set.
func (o *Deployment) HasAudit() bool {
	if o != nil && !IsNil(o.Audit) {
		return true
	}

	return false
}

// SetAudit gets a reference to the given Audit and assigns it to the Audit field.
func (o *Deployment) SetAudit(v Audit) {
	o.Audit = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *Deployment) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Deployment) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *Deployment) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *Deployment) SetId(v int32) {
	o.Id = &v
}

// GetApplicationId returns the ApplicationId field value if set, zero value otherwise.
func (o *Deployment) GetApplicationId() string {
	if o == nil || IsNil(o.ApplicationId) {
		var ret string
		return ret
	}
	return *o.ApplicationId
}

// GetApplicationIdOk returns a tuple with the ApplicationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Deployment) GetApplicationIdOk() (*string, bool) {
	if o == nil || IsNil(o.ApplicationId) {
		return nil, false
	}
	return o.ApplicationId, true
}

// HasApplicationId returns a boolean if a field has been set.
func (o *Deployment) HasApplicationId() bool {
	if o != nil && !IsNil(o.ApplicationId) {
		return true
	}

	return false
}

// SetApplicationId gets a reference to the given string and assigns it to the ApplicationId field.
func (o *Deployment) SetApplicationId(v string) {
	o.ApplicationId = &v
}

// GetApplicationName returns the ApplicationName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Deployment) GetApplicationName() string {
	if o == nil || IsNil(o.ApplicationName.Get()) {
		var ret string
		return ret
	}
	return *o.ApplicationName.Get()
}

// GetApplicationNameOk returns a tuple with the ApplicationName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Deployment) GetApplicationNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ApplicationName.Get(), o.ApplicationName.IsSet()
}

// HasApplicationName returns a boolean if a field has been set.
func (o *Deployment) HasApplicationName() bool {
	if o != nil && o.ApplicationName.IsSet() {
		return true
	}

	return false
}

// SetApplicationName gets a reference to the given NullableString and assigns it to the ApplicationName field.
func (o *Deployment) SetApplicationName(v string) {
	o.ApplicationName.Set(&v)
}
// SetApplicationNameNil sets the value for ApplicationName to be an explicit nil
func (o *Deployment) SetApplicationNameNil() {
	o.ApplicationName.Set(nil)
}

// UnsetApplicationName ensures that no value is present for ApplicationName, not even an explicit nil
func (o *Deployment) UnsetApplicationName() {
	o.ApplicationName.Unset()
}

// GetGatewayVersion returns the GatewayVersion field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Deployment) GetGatewayVersion() string {
	if o == nil || IsNil(o.GatewayVersion.Get()) {
		var ret string
		return ret
	}
	return *o.GatewayVersion.Get()
}

// GetGatewayVersionOk returns a tuple with the GatewayVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Deployment) GetGatewayVersionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.GatewayVersion.Get(), o.GatewayVersion.IsSet()
}

// HasGatewayVersion returns a boolean if a field has been set.
func (o *Deployment) HasGatewayVersion() bool {
	if o != nil && o.GatewayVersion.IsSet() {
		return true
	}

	return false
}

// SetGatewayVersion gets a reference to the given NullableString and assigns it to the GatewayVersion field.
func (o *Deployment) SetGatewayVersion(v string) {
	o.GatewayVersion.Set(&v)
}
// SetGatewayVersionNil sets the value for GatewayVersion to be an explicit nil
func (o *Deployment) SetGatewayVersionNil() {
	o.GatewayVersion.Set(nil)
}

// UnsetGatewayVersion ensures that no value is present for GatewayVersion, not even an explicit nil
func (o *Deployment) UnsetGatewayVersion() {
	o.GatewayVersion.Unset()
}

// GetEnvironmentName returns the EnvironmentName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Deployment) GetEnvironmentName() string {
	if o == nil || IsNil(o.EnvironmentName.Get()) {
		var ret string
		return ret
	}
	return *o.EnvironmentName.Get()
}

// GetEnvironmentNameOk returns a tuple with the EnvironmentName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Deployment) GetEnvironmentNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.EnvironmentName.Get(), o.EnvironmentName.IsSet()
}

// HasEnvironmentName returns a boolean if a field has been set.
func (o *Deployment) HasEnvironmentName() bool {
	if o != nil && o.EnvironmentName.IsSet() {
		return true
	}

	return false
}

// SetEnvironmentName gets a reference to the given NullableString and assigns it to the EnvironmentName field.
func (o *Deployment) SetEnvironmentName(v string) {
	o.EnvironmentName.Set(&v)
}
// SetEnvironmentNameNil sets the value for EnvironmentName to be an explicit nil
func (o *Deployment) SetEnvironmentNameNil() {
	o.EnvironmentName.Set(nil)
}

// UnsetEnvironmentName ensures that no value is present for EnvironmentName, not even an explicit nil
func (o *Deployment) UnsetEnvironmentName() {
	o.EnvironmentName.Unset()
}

// GetEnvironmentId returns the EnvironmentId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Deployment) GetEnvironmentId() string {
	if o == nil || IsNil(o.EnvironmentId.Get()) {
		var ret string
		return ret
	}
	return *o.EnvironmentId.Get()
}

// GetEnvironmentIdOk returns a tuple with the EnvironmentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Deployment) GetEnvironmentIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.EnvironmentId.Get(), o.EnvironmentId.IsSet()
}

// HasEnvironmentId returns a boolean if a field has been set.
func (o *Deployment) HasEnvironmentId() bool {
	if o != nil && o.EnvironmentId.IsSet() {
		return true
	}

	return false
}

// SetEnvironmentId gets a reference to the given NullableString and assigns it to the EnvironmentId field.
func (o *Deployment) SetEnvironmentId(v string) {
	o.EnvironmentId.Set(&v)
}
// SetEnvironmentIdNil sets the value for EnvironmentId to be an explicit nil
func (o *Deployment) SetEnvironmentIdNil() {
	o.EnvironmentId.Set(nil)
}

// UnsetEnvironmentId ensures that no value is present for EnvironmentId, not even an explicit nil
func (o *Deployment) UnsetEnvironmentId() {
	o.EnvironmentId.Unset()
}

// GetTargetId returns the TargetId field value if set, zero value otherwise.
func (o *Deployment) GetTargetId() string {
	if o == nil || IsNil(o.TargetId) {
		var ret string
		return ret
	}
	return *o.TargetId
}

// GetTargetIdOk returns a tuple with the TargetId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Deployment) GetTargetIdOk() (*string, bool) {
	if o == nil || IsNil(o.TargetId) {
		return nil, false
	}
	return o.TargetId, true
}

// HasTargetId returns a boolean if a field has been set.
func (o *Deployment) HasTargetId() bool {
	if o != nil && !IsNil(o.TargetId) {
		return true
	}

	return false
}

// SetTargetId gets a reference to the given string and assigns it to the TargetId field.
func (o *Deployment) SetTargetId(v string) {
	o.TargetId = &v
}

// GetTargetName returns the TargetName field value if set, zero value otherwise.
func (o *Deployment) GetTargetName() string {
	if o == nil || IsNil(o.TargetName) {
		var ret string
		return ret
	}
	return *o.TargetName
}

// GetTargetNameOk returns a tuple with the TargetName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Deployment) GetTargetNameOk() (*string, bool) {
	if o == nil || IsNil(o.TargetName) {
		return nil, false
	}
	return o.TargetName, true
}

// HasTargetName returns a boolean if a field has been set.
func (o *Deployment) HasTargetName() bool {
	if o != nil && !IsNil(o.TargetName) {
		return true
	}

	return false
}

// SetTargetName gets a reference to the given string and assigns it to the TargetName field.
func (o *Deployment) SetTargetName(v string) {
	o.TargetName = &v
}

// GetDeploymentId returns the DeploymentId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Deployment) GetDeploymentId() string {
	if o == nil || IsNil(o.DeploymentId.Get()) {
		var ret string
		return ret
	}
	return *o.DeploymentId.Get()
}

// GetDeploymentIdOk returns a tuple with the DeploymentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Deployment) GetDeploymentIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.DeploymentId.Get(), o.DeploymentId.IsSet()
}

// HasDeploymentId returns a boolean if a field has been set.
func (o *Deployment) HasDeploymentId() bool {
	if o != nil && o.DeploymentId.IsSet() {
		return true
	}

	return false
}

// SetDeploymentId gets a reference to the given NullableString and assigns it to the DeploymentId field.
func (o *Deployment) SetDeploymentId(v string) {
	o.DeploymentId.Set(&v)
}
// SetDeploymentIdNil sets the value for DeploymentId to be an explicit nil
func (o *Deployment) SetDeploymentIdNil() {
	o.DeploymentId.Set(nil)
}

// UnsetDeploymentId ensures that no value is present for DeploymentId, not even an explicit nil
func (o *Deployment) UnsetDeploymentId() {
	o.DeploymentId.Unset()
}

// GetUpdatedDate returns the UpdatedDate field value if set, zero value otherwise.
func (o *Deployment) GetUpdatedDate() string {
	if o == nil || IsNil(o.UpdatedDate) {
		var ret string
		return ret
	}
	return *o.UpdatedDate
}

// GetUpdatedDateOk returns a tuple with the UpdatedDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Deployment) GetUpdatedDateOk() (*string, bool) {
	if o == nil || IsNil(o.UpdatedDate) {
		return nil, false
	}
	return o.UpdatedDate, true
}

// HasUpdatedDate returns a boolean if a field has been set.
func (o *Deployment) HasUpdatedDate() bool {
	if o != nil && !IsNil(o.UpdatedDate) {
		return true
	}

	return false
}

// SetUpdatedDate gets a reference to the given string and assigns it to the UpdatedDate field.
func (o *Deployment) SetUpdatedDate(v string) {
	o.UpdatedDate = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *Deployment) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Deployment) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *Deployment) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *Deployment) SetType(v string) {
	o.Type = &v
}

// GetExpectedStatus returns the ExpectedStatus field value if set, zero value otherwise.
func (o *Deployment) GetExpectedStatus() string {
	if o == nil || IsNil(o.ExpectedStatus) {
		var ret string
		return ret
	}
	return *o.ExpectedStatus
}

// GetExpectedStatusOk returns a tuple with the ExpectedStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Deployment) GetExpectedStatusOk() (*string, bool) {
	if o == nil || IsNil(o.ExpectedStatus) {
		return nil, false
	}
	return o.ExpectedStatus, true
}

// HasExpectedStatus returns a boolean if a field has been set.
func (o *Deployment) HasExpectedStatus() bool {
	if o != nil && !IsNil(o.ExpectedStatus) {
		return true
	}

	return false
}

// SetExpectedStatus gets a reference to the given string and assigns it to the ExpectedStatus field.
func (o *Deployment) SetExpectedStatus(v string) {
	o.ExpectedStatus = &v
}

// GetApiId returns the ApiId field value if set, zero value otherwise.
func (o *Deployment) GetApiId() int32 {
	if o == nil || IsNil(o.ApiId) {
		var ret int32
		return ret
	}
	return *o.ApiId
}

// GetApiIdOk returns a tuple with the ApiId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Deployment) GetApiIdOk() (*int32, bool) {
	if o == nil || IsNil(o.ApiId) {
		return nil, false
	}
	return o.ApiId, true
}

// HasApiId returns a boolean if a field has been set.
func (o *Deployment) HasApiId() bool {
	if o != nil && !IsNil(o.ApiId) {
		return true
	}

	return false
}

// SetApiId gets a reference to the given int32 and assigns it to the ApiId field.
func (o *Deployment) SetApiId(v int32) {
	o.ApiId = &v
}

func (o Deployment) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Deployment) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Audit) {
		toSerialize["audit"] = o.Audit
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.ApplicationId) {
		toSerialize["applicationId"] = o.ApplicationId
	}
	if o.ApplicationName.IsSet() {
		toSerialize["applicationName"] = o.ApplicationName.Get()
	}
	if o.GatewayVersion.IsSet() {
		toSerialize["gatewayVersion"] = o.GatewayVersion.Get()
	}
	if o.EnvironmentName.IsSet() {
		toSerialize["environmentName"] = o.EnvironmentName.Get()
	}
	if o.EnvironmentId.IsSet() {
		toSerialize["environmentId"] = o.EnvironmentId.Get()
	}
	if !IsNil(o.TargetId) {
		toSerialize["targetId"] = o.TargetId
	}
	if !IsNil(o.TargetName) {
		toSerialize["targetName"] = o.TargetName
	}
	if o.DeploymentId.IsSet() {
		toSerialize["deploymentId"] = o.DeploymentId.Get()
	}
	if !IsNil(o.UpdatedDate) {
		toSerialize["updatedDate"] = o.UpdatedDate
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.ExpectedStatus) {
		toSerialize["expectedStatus"] = o.ExpectedStatus
	}
	if !IsNil(o.ApiId) {
		toSerialize["apiId"] = o.ApiId
	}
	return toSerialize, nil
}

type NullableDeployment struct {
	value *Deployment
	isSet bool
}

func (v NullableDeployment) Get() *Deployment {
	return v.value
}

func (v *NullableDeployment) Set(val *Deployment) {
	v.value = val
	v.isSet = true
}

func (v NullableDeployment) IsSet() bool {
	return v.isSet
}

func (v *NullableDeployment) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeployment(val *Deployment) *NullableDeployment {
	return &NullableDeployment{value: val, isSet: true}
}

func (v NullableDeployment) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeployment) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


