/*
API Manager API

API Manager API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package apim

import (
	"encoding/json"
)

// checks if the RoutingPostBodyInnerUpstreams type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RoutingPostBodyInnerUpstreams{}

// RoutingPostBodyInnerUpstreams struct for RoutingPostBodyInnerUpstreams
type RoutingPostBodyInnerUpstreams struct {
	Weight *int32 `json:"weight,omitempty"`
	Uri *string `json:"uri,omitempty"`
	Label *string `json:"label,omitempty"`
}

// NewRoutingPostBodyInnerUpstreams instantiates a new RoutingPostBodyInnerUpstreams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRoutingPostBodyInnerUpstreams() *RoutingPostBodyInnerUpstreams {
	this := RoutingPostBodyInnerUpstreams{}
	return &this
}

// NewRoutingPostBodyInnerUpstreamsWithDefaults instantiates a new RoutingPostBodyInnerUpstreams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRoutingPostBodyInnerUpstreamsWithDefaults() *RoutingPostBodyInnerUpstreams {
	this := RoutingPostBodyInnerUpstreams{}
	return &this
}

// GetWeight returns the Weight field value if set, zero value otherwise.
func (o *RoutingPostBodyInnerUpstreams) GetWeight() int32 {
	if o == nil || IsNil(o.Weight) {
		var ret int32
		return ret
	}
	return *o.Weight
}

// GetWeightOk returns a tuple with the Weight field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoutingPostBodyInnerUpstreams) GetWeightOk() (*int32, bool) {
	if o == nil || IsNil(o.Weight) {
		return nil, false
	}
	return o.Weight, true
}

// HasWeight returns a boolean if a field has been set.
func (o *RoutingPostBodyInnerUpstreams) HasWeight() bool {
	if o != nil && !IsNil(o.Weight) {
		return true
	}

	return false
}

// SetWeight gets a reference to the given int32 and assigns it to the Weight field.
func (o *RoutingPostBodyInnerUpstreams) SetWeight(v int32) {
	o.Weight = &v
}

// GetUri returns the Uri field value if set, zero value otherwise.
func (o *RoutingPostBodyInnerUpstreams) GetUri() string {
	if o == nil || IsNil(o.Uri) {
		var ret string
		return ret
	}
	return *o.Uri
}

// GetUriOk returns a tuple with the Uri field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoutingPostBodyInnerUpstreams) GetUriOk() (*string, bool) {
	if o == nil || IsNil(o.Uri) {
		return nil, false
	}
	return o.Uri, true
}

// HasUri returns a boolean if a field has been set.
func (o *RoutingPostBodyInnerUpstreams) HasUri() bool {
	if o != nil && !IsNil(o.Uri) {
		return true
	}

	return false
}

// SetUri gets a reference to the given string and assigns it to the Uri field.
func (o *RoutingPostBodyInnerUpstreams) SetUri(v string) {
	o.Uri = &v
}

// GetLabel returns the Label field value if set, zero value otherwise.
func (o *RoutingPostBodyInnerUpstreams) GetLabel() string {
	if o == nil || IsNil(o.Label) {
		var ret string
		return ret
	}
	return *o.Label
}

// GetLabelOk returns a tuple with the Label field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoutingPostBodyInnerUpstreams) GetLabelOk() (*string, bool) {
	if o == nil || IsNil(o.Label) {
		return nil, false
	}
	return o.Label, true
}

// HasLabel returns a boolean if a field has been set.
func (o *RoutingPostBodyInnerUpstreams) HasLabel() bool {
	if o != nil && !IsNil(o.Label) {
		return true
	}

	return false
}

// SetLabel gets a reference to the given string and assigns it to the Label field.
func (o *RoutingPostBodyInnerUpstreams) SetLabel(v string) {
	o.Label = &v
}

func (o RoutingPostBodyInnerUpstreams) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RoutingPostBodyInnerUpstreams) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Weight) {
		toSerialize["weight"] = o.Weight
	}
	if !IsNil(o.Uri) {
		toSerialize["uri"] = o.Uri
	}
	if !IsNil(o.Label) {
		toSerialize["label"] = o.Label
	}
	return toSerialize, nil
}

type NullableRoutingPostBodyInnerUpstreams struct {
	value *RoutingPostBodyInnerUpstreams
	isSet bool
}

func (v NullableRoutingPostBodyInnerUpstreams) Get() *RoutingPostBodyInnerUpstreams {
	return v.value
}

func (v *NullableRoutingPostBodyInnerUpstreams) Set(val *RoutingPostBodyInnerUpstreams) {
	v.value = val
	v.isSet = true
}

func (v NullableRoutingPostBodyInnerUpstreams) IsSet() bool {
	return v.isSet
}

func (v *NullableRoutingPostBodyInnerUpstreams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRoutingPostBodyInnerUpstreams(val *RoutingPostBodyInnerUpstreams) *NullableRoutingPostBodyInnerUpstreams {
	return &NullableRoutingPostBodyInnerUpstreams{value: val, isSet: true}
}

func (v NullableRoutingPostBodyInnerUpstreams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRoutingPostBodyInnerUpstreams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


