/*
API Manager API

API Manager API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package apim

import (
	"encoding/json"
)

// checks if the EndpointPostBodyTlsContexts type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EndpointPostBodyTlsContexts{}

// EndpointPostBodyTlsContexts struct for EndpointPostBodyTlsContexts
type EndpointPostBodyTlsContexts struct {
	Inbound NullableEndpointPostBodyTlsContextsInbound `json:"inbound,omitempty"`
}

// NewEndpointPostBodyTlsContexts instantiates a new EndpointPostBodyTlsContexts object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEndpointPostBodyTlsContexts() *EndpointPostBodyTlsContexts {
	this := EndpointPostBodyTlsContexts{}
	return &this
}

// NewEndpointPostBodyTlsContextsWithDefaults instantiates a new EndpointPostBodyTlsContexts object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEndpointPostBodyTlsContextsWithDefaults() *EndpointPostBodyTlsContexts {
	this := EndpointPostBodyTlsContexts{}
	return &this
}

// GetInbound returns the Inbound field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EndpointPostBodyTlsContexts) GetInbound() EndpointPostBodyTlsContextsInbound {
	if o == nil || IsNil(o.Inbound.Get()) {
		var ret EndpointPostBodyTlsContextsInbound
		return ret
	}
	return *o.Inbound.Get()
}

// GetInboundOk returns a tuple with the Inbound field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EndpointPostBodyTlsContexts) GetInboundOk() (*EndpointPostBodyTlsContextsInbound, bool) {
	if o == nil {
		return nil, false
	}
	return o.Inbound.Get(), o.Inbound.IsSet()
}

// HasInbound returns a boolean if a field has been set.
func (o *EndpointPostBodyTlsContexts) HasInbound() bool {
	if o != nil && o.Inbound.IsSet() {
		return true
	}

	return false
}

// SetInbound gets a reference to the given NullableEndpointPostBodyTlsContextsInbound and assigns it to the Inbound field.
func (o *EndpointPostBodyTlsContexts) SetInbound(v EndpointPostBodyTlsContextsInbound) {
	o.Inbound.Set(&v)
}
// SetInboundNil sets the value for Inbound to be an explicit nil
func (o *EndpointPostBodyTlsContexts) SetInboundNil() {
	o.Inbound.Set(nil)
}

// UnsetInbound ensures that no value is present for Inbound, not even an explicit nil
func (o *EndpointPostBodyTlsContexts) UnsetInbound() {
	o.Inbound.Unset()
}

func (o EndpointPostBodyTlsContexts) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EndpointPostBodyTlsContexts) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Inbound.IsSet() {
		toSerialize["inbound"] = o.Inbound.Get()
	}
	return toSerialize, nil
}

type NullableEndpointPostBodyTlsContexts struct {
	value *EndpointPostBodyTlsContexts
	isSet bool
}

func (v NullableEndpointPostBodyTlsContexts) Get() *EndpointPostBodyTlsContexts {
	return v.value
}

func (v *NullableEndpointPostBodyTlsContexts) Set(val *EndpointPostBodyTlsContexts) {
	v.value = val
	v.isSet = true
}

func (v NullableEndpointPostBodyTlsContexts) IsSet() bool {
	return v.isSet
}

func (v *NullableEndpointPostBodyTlsContexts) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEndpointPostBodyTlsContexts(val *EndpointPostBodyTlsContexts) *NullableEndpointPostBodyTlsContexts {
	return &NullableEndpointPostBodyTlsContexts{value: val, isSet: true}
}

func (v NullableEndpointPostBodyTlsContexts) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEndpointPostBodyTlsContexts) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


