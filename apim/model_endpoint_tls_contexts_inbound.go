/*
API Manager API

API Manager API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package apim

import (
	"encoding/json"
)

// checks if the EndpointTlsContextsInbound type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EndpointTlsContextsInbound{}

// EndpointTlsContextsInbound struct for EndpointTlsContextsInbound
type EndpointTlsContextsInbound struct {
	SecretGroupId *string `json:"secretGroupId,omitempty"`
	TlsContextId *string `json:"tlsContextId,omitempty"`
	Name *string `json:"name,omitempty"`
	Authorized *bool `json:"authorized,omitempty"`
}

// NewEndpointTlsContextsInbound instantiates a new EndpointTlsContextsInbound object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEndpointTlsContextsInbound() *EndpointTlsContextsInbound {
	this := EndpointTlsContextsInbound{}
	return &this
}

// NewEndpointTlsContextsInboundWithDefaults instantiates a new EndpointTlsContextsInbound object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEndpointTlsContextsInboundWithDefaults() *EndpointTlsContextsInbound {
	this := EndpointTlsContextsInbound{}
	return &this
}

// GetSecretGroupId returns the SecretGroupId field value if set, zero value otherwise.
func (o *EndpointTlsContextsInbound) GetSecretGroupId() string {
	if o == nil || IsNil(o.SecretGroupId) {
		var ret string
		return ret
	}
	return *o.SecretGroupId
}

// GetSecretGroupIdOk returns a tuple with the SecretGroupId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EndpointTlsContextsInbound) GetSecretGroupIdOk() (*string, bool) {
	if o == nil || IsNil(o.SecretGroupId) {
		return nil, false
	}
	return o.SecretGroupId, true
}

// HasSecretGroupId returns a boolean if a field has been set.
func (o *EndpointTlsContextsInbound) HasSecretGroupId() bool {
	if o != nil && !IsNil(o.SecretGroupId) {
		return true
	}

	return false
}

// SetSecretGroupId gets a reference to the given string and assigns it to the SecretGroupId field.
func (o *EndpointTlsContextsInbound) SetSecretGroupId(v string) {
	o.SecretGroupId = &v
}

// GetTlsContextId returns the TlsContextId field value if set, zero value otherwise.
func (o *EndpointTlsContextsInbound) GetTlsContextId() string {
	if o == nil || IsNil(o.TlsContextId) {
		var ret string
		return ret
	}
	return *o.TlsContextId
}

// GetTlsContextIdOk returns a tuple with the TlsContextId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EndpointTlsContextsInbound) GetTlsContextIdOk() (*string, bool) {
	if o == nil || IsNil(o.TlsContextId) {
		return nil, false
	}
	return o.TlsContextId, true
}

// HasTlsContextId returns a boolean if a field has been set.
func (o *EndpointTlsContextsInbound) HasTlsContextId() bool {
	if o != nil && !IsNil(o.TlsContextId) {
		return true
	}

	return false
}

// SetTlsContextId gets a reference to the given string and assigns it to the TlsContextId field.
func (o *EndpointTlsContextsInbound) SetTlsContextId(v string) {
	o.TlsContextId = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *EndpointTlsContextsInbound) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EndpointTlsContextsInbound) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *EndpointTlsContextsInbound) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *EndpointTlsContextsInbound) SetName(v string) {
	o.Name = &v
}

// GetAuthorized returns the Authorized field value if set, zero value otherwise.
func (o *EndpointTlsContextsInbound) GetAuthorized() bool {
	if o == nil || IsNil(o.Authorized) {
		var ret bool
		return ret
	}
	return *o.Authorized
}

// GetAuthorizedOk returns a tuple with the Authorized field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EndpointTlsContextsInbound) GetAuthorizedOk() (*bool, bool) {
	if o == nil || IsNil(o.Authorized) {
		return nil, false
	}
	return o.Authorized, true
}

// HasAuthorized returns a boolean if a field has been set.
func (o *EndpointTlsContextsInbound) HasAuthorized() bool {
	if o != nil && !IsNil(o.Authorized) {
		return true
	}

	return false
}

// SetAuthorized gets a reference to the given bool and assigns it to the Authorized field.
func (o *EndpointTlsContextsInbound) SetAuthorized(v bool) {
	o.Authorized = &v
}

func (o EndpointTlsContextsInbound) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EndpointTlsContextsInbound) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.SecretGroupId) {
		toSerialize["secretGroupId"] = o.SecretGroupId
	}
	if !IsNil(o.TlsContextId) {
		toSerialize["tlsContextId"] = o.TlsContextId
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Authorized) {
		toSerialize["authorized"] = o.Authorized
	}
	return toSerialize, nil
}

type NullableEndpointTlsContextsInbound struct {
	value *EndpointTlsContextsInbound
	isSet bool
}

func (v NullableEndpointTlsContextsInbound) Get() *EndpointTlsContextsInbound {
	return v.value
}

func (v *NullableEndpointTlsContextsInbound) Set(val *EndpointTlsContextsInbound) {
	v.value = val
	v.isSet = true
}

func (v NullableEndpointTlsContextsInbound) IsSet() bool {
	return v.isSet
}

func (v *NullableEndpointTlsContextsInbound) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEndpointTlsContextsInbound(val *EndpointTlsContextsInbound) *NullableEndpointTlsContextsInbound {
	return &NullableEndpointTlsContextsInbound{value: val, isSet: true}
}

func (v NullableEndpointTlsContextsInbound) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEndpointTlsContextsInbound) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


