/*
Dedicated Load Balancer API

Description of the DLB API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package dlb

import (
	"encoding/json"
)

// checks if the DlbCoreSslEndpointsInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DlbCoreSslEndpointsInner{}

// DlbCoreSslEndpointsInner struct for DlbCoreSslEndpointsInner
type DlbCoreSslEndpointsInner struct {
	PrivateKeyLabel *string `json:"privateKeyLabel,omitempty"`
	PrivateKeyDigest *string `json:"privateKeyDigest,omitempty"`
	PublicKeyLabel *string `json:"publicKeyLabel,omitempty"`
	PublicKeyDigest *string `json:"publicKeyDigest,omitempty"`
	PublicKeyCN *string `json:"publicKeyCN,omitempty"`
	ClientCertLabel *string `json:"clientCertLabel,omitempty"`
	ClientCertDigest *string `json:"clientCertDigest,omitempty"`
	ClientCertCN *string `json:"clientCertCN,omitempty"`
	RevocationListLabel *string `json:"revocationListLabel,omitempty"`
	RevocationListDigest *string `json:"revocationListDigest,omitempty"`
	VerifyClientMode *string `json:"verifyClientMode,omitempty"`
	Mappings []DlbCoreSslEndpointsInnerMappingsInner `json:"mappings,omitempty"`
}

// NewDlbCoreSslEndpointsInner instantiates a new DlbCoreSslEndpointsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDlbCoreSslEndpointsInner() *DlbCoreSslEndpointsInner {
	this := DlbCoreSslEndpointsInner{}
	var verifyClientMode string = "off"
	this.VerifyClientMode = &verifyClientMode
	return &this
}

// NewDlbCoreSslEndpointsInnerWithDefaults instantiates a new DlbCoreSslEndpointsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDlbCoreSslEndpointsInnerWithDefaults() *DlbCoreSslEndpointsInner {
	this := DlbCoreSslEndpointsInner{}
	var verifyClientMode string = "off"
	this.VerifyClientMode = &verifyClientMode
	return &this
}

// GetPrivateKeyLabel returns the PrivateKeyLabel field value if set, zero value otherwise.
func (o *DlbCoreSslEndpointsInner) GetPrivateKeyLabel() string {
	if o == nil || IsNil(o.PrivateKeyLabel) {
		var ret string
		return ret
	}
	return *o.PrivateKeyLabel
}

// GetPrivateKeyLabelOk returns a tuple with the PrivateKeyLabel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DlbCoreSslEndpointsInner) GetPrivateKeyLabelOk() (*string, bool) {
	if o == nil || IsNil(o.PrivateKeyLabel) {
		return nil, false
	}
	return o.PrivateKeyLabel, true
}

// HasPrivateKeyLabel returns a boolean if a field has been set.
func (o *DlbCoreSslEndpointsInner) HasPrivateKeyLabel() bool {
	if o != nil && !IsNil(o.PrivateKeyLabel) {
		return true
	}

	return false
}

// SetPrivateKeyLabel gets a reference to the given string and assigns it to the PrivateKeyLabel field.
func (o *DlbCoreSslEndpointsInner) SetPrivateKeyLabel(v string) {
	o.PrivateKeyLabel = &v
}

// GetPrivateKeyDigest returns the PrivateKeyDigest field value if set, zero value otherwise.
func (o *DlbCoreSslEndpointsInner) GetPrivateKeyDigest() string {
	if o == nil || IsNil(o.PrivateKeyDigest) {
		var ret string
		return ret
	}
	return *o.PrivateKeyDigest
}

// GetPrivateKeyDigestOk returns a tuple with the PrivateKeyDigest field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DlbCoreSslEndpointsInner) GetPrivateKeyDigestOk() (*string, bool) {
	if o == nil || IsNil(o.PrivateKeyDigest) {
		return nil, false
	}
	return o.PrivateKeyDigest, true
}

// HasPrivateKeyDigest returns a boolean if a field has been set.
func (o *DlbCoreSslEndpointsInner) HasPrivateKeyDigest() bool {
	if o != nil && !IsNil(o.PrivateKeyDigest) {
		return true
	}

	return false
}

// SetPrivateKeyDigest gets a reference to the given string and assigns it to the PrivateKeyDigest field.
func (o *DlbCoreSslEndpointsInner) SetPrivateKeyDigest(v string) {
	o.PrivateKeyDigest = &v
}

// GetPublicKeyLabel returns the PublicKeyLabel field value if set, zero value otherwise.
func (o *DlbCoreSslEndpointsInner) GetPublicKeyLabel() string {
	if o == nil || IsNil(o.PublicKeyLabel) {
		var ret string
		return ret
	}
	return *o.PublicKeyLabel
}

// GetPublicKeyLabelOk returns a tuple with the PublicKeyLabel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DlbCoreSslEndpointsInner) GetPublicKeyLabelOk() (*string, bool) {
	if o == nil || IsNil(o.PublicKeyLabel) {
		return nil, false
	}
	return o.PublicKeyLabel, true
}

// HasPublicKeyLabel returns a boolean if a field has been set.
func (o *DlbCoreSslEndpointsInner) HasPublicKeyLabel() bool {
	if o != nil && !IsNil(o.PublicKeyLabel) {
		return true
	}

	return false
}

// SetPublicKeyLabel gets a reference to the given string and assigns it to the PublicKeyLabel field.
func (o *DlbCoreSslEndpointsInner) SetPublicKeyLabel(v string) {
	o.PublicKeyLabel = &v
}

// GetPublicKeyDigest returns the PublicKeyDigest field value if set, zero value otherwise.
func (o *DlbCoreSslEndpointsInner) GetPublicKeyDigest() string {
	if o == nil || IsNil(o.PublicKeyDigest) {
		var ret string
		return ret
	}
	return *o.PublicKeyDigest
}

// GetPublicKeyDigestOk returns a tuple with the PublicKeyDigest field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DlbCoreSslEndpointsInner) GetPublicKeyDigestOk() (*string, bool) {
	if o == nil || IsNil(o.PublicKeyDigest) {
		return nil, false
	}
	return o.PublicKeyDigest, true
}

// HasPublicKeyDigest returns a boolean if a field has been set.
func (o *DlbCoreSslEndpointsInner) HasPublicKeyDigest() bool {
	if o != nil && !IsNil(o.PublicKeyDigest) {
		return true
	}

	return false
}

// SetPublicKeyDigest gets a reference to the given string and assigns it to the PublicKeyDigest field.
func (o *DlbCoreSslEndpointsInner) SetPublicKeyDigest(v string) {
	o.PublicKeyDigest = &v
}

// GetPublicKeyCN returns the PublicKeyCN field value if set, zero value otherwise.
func (o *DlbCoreSslEndpointsInner) GetPublicKeyCN() string {
	if o == nil || IsNil(o.PublicKeyCN) {
		var ret string
		return ret
	}
	return *o.PublicKeyCN
}

// GetPublicKeyCNOk returns a tuple with the PublicKeyCN field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DlbCoreSslEndpointsInner) GetPublicKeyCNOk() (*string, bool) {
	if o == nil || IsNil(o.PublicKeyCN) {
		return nil, false
	}
	return o.PublicKeyCN, true
}

// HasPublicKeyCN returns a boolean if a field has been set.
func (o *DlbCoreSslEndpointsInner) HasPublicKeyCN() bool {
	if o != nil && !IsNil(o.PublicKeyCN) {
		return true
	}

	return false
}

// SetPublicKeyCN gets a reference to the given string and assigns it to the PublicKeyCN field.
func (o *DlbCoreSslEndpointsInner) SetPublicKeyCN(v string) {
	o.PublicKeyCN = &v
}

// GetClientCertLabel returns the ClientCertLabel field value if set, zero value otherwise.
func (o *DlbCoreSslEndpointsInner) GetClientCertLabel() string {
	if o == nil || IsNil(o.ClientCertLabel) {
		var ret string
		return ret
	}
	return *o.ClientCertLabel
}

// GetClientCertLabelOk returns a tuple with the ClientCertLabel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DlbCoreSslEndpointsInner) GetClientCertLabelOk() (*string, bool) {
	if o == nil || IsNil(o.ClientCertLabel) {
		return nil, false
	}
	return o.ClientCertLabel, true
}

// HasClientCertLabel returns a boolean if a field has been set.
func (o *DlbCoreSslEndpointsInner) HasClientCertLabel() bool {
	if o != nil && !IsNil(o.ClientCertLabel) {
		return true
	}

	return false
}

// SetClientCertLabel gets a reference to the given string and assigns it to the ClientCertLabel field.
func (o *DlbCoreSslEndpointsInner) SetClientCertLabel(v string) {
	o.ClientCertLabel = &v
}

// GetClientCertDigest returns the ClientCertDigest field value if set, zero value otherwise.
func (o *DlbCoreSslEndpointsInner) GetClientCertDigest() string {
	if o == nil || IsNil(o.ClientCertDigest) {
		var ret string
		return ret
	}
	return *o.ClientCertDigest
}

// GetClientCertDigestOk returns a tuple with the ClientCertDigest field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DlbCoreSslEndpointsInner) GetClientCertDigestOk() (*string, bool) {
	if o == nil || IsNil(o.ClientCertDigest) {
		return nil, false
	}
	return o.ClientCertDigest, true
}

// HasClientCertDigest returns a boolean if a field has been set.
func (o *DlbCoreSslEndpointsInner) HasClientCertDigest() bool {
	if o != nil && !IsNil(o.ClientCertDigest) {
		return true
	}

	return false
}

// SetClientCertDigest gets a reference to the given string and assigns it to the ClientCertDigest field.
func (o *DlbCoreSslEndpointsInner) SetClientCertDigest(v string) {
	o.ClientCertDigest = &v
}

// GetClientCertCN returns the ClientCertCN field value if set, zero value otherwise.
func (o *DlbCoreSslEndpointsInner) GetClientCertCN() string {
	if o == nil || IsNil(o.ClientCertCN) {
		var ret string
		return ret
	}
	return *o.ClientCertCN
}

// GetClientCertCNOk returns a tuple with the ClientCertCN field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DlbCoreSslEndpointsInner) GetClientCertCNOk() (*string, bool) {
	if o == nil || IsNil(o.ClientCertCN) {
		return nil, false
	}
	return o.ClientCertCN, true
}

// HasClientCertCN returns a boolean if a field has been set.
func (o *DlbCoreSslEndpointsInner) HasClientCertCN() bool {
	if o != nil && !IsNil(o.ClientCertCN) {
		return true
	}

	return false
}

// SetClientCertCN gets a reference to the given string and assigns it to the ClientCertCN field.
func (o *DlbCoreSslEndpointsInner) SetClientCertCN(v string) {
	o.ClientCertCN = &v
}

// GetRevocationListLabel returns the RevocationListLabel field value if set, zero value otherwise.
func (o *DlbCoreSslEndpointsInner) GetRevocationListLabel() string {
	if o == nil || IsNil(o.RevocationListLabel) {
		var ret string
		return ret
	}
	return *o.RevocationListLabel
}

// GetRevocationListLabelOk returns a tuple with the RevocationListLabel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DlbCoreSslEndpointsInner) GetRevocationListLabelOk() (*string, bool) {
	if o == nil || IsNil(o.RevocationListLabel) {
		return nil, false
	}
	return o.RevocationListLabel, true
}

// HasRevocationListLabel returns a boolean if a field has been set.
func (o *DlbCoreSslEndpointsInner) HasRevocationListLabel() bool {
	if o != nil && !IsNil(o.RevocationListLabel) {
		return true
	}

	return false
}

// SetRevocationListLabel gets a reference to the given string and assigns it to the RevocationListLabel field.
func (o *DlbCoreSslEndpointsInner) SetRevocationListLabel(v string) {
	o.RevocationListLabel = &v
}

// GetRevocationListDigest returns the RevocationListDigest field value if set, zero value otherwise.
func (o *DlbCoreSslEndpointsInner) GetRevocationListDigest() string {
	if o == nil || IsNil(o.RevocationListDigest) {
		var ret string
		return ret
	}
	return *o.RevocationListDigest
}

// GetRevocationListDigestOk returns a tuple with the RevocationListDigest field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DlbCoreSslEndpointsInner) GetRevocationListDigestOk() (*string, bool) {
	if o == nil || IsNil(o.RevocationListDigest) {
		return nil, false
	}
	return o.RevocationListDigest, true
}

// HasRevocationListDigest returns a boolean if a field has been set.
func (o *DlbCoreSslEndpointsInner) HasRevocationListDigest() bool {
	if o != nil && !IsNil(o.RevocationListDigest) {
		return true
	}

	return false
}

// SetRevocationListDigest gets a reference to the given string and assigns it to the RevocationListDigest field.
func (o *DlbCoreSslEndpointsInner) SetRevocationListDigest(v string) {
	o.RevocationListDigest = &v
}

// GetVerifyClientMode returns the VerifyClientMode field value if set, zero value otherwise.
func (o *DlbCoreSslEndpointsInner) GetVerifyClientMode() string {
	if o == nil || IsNil(o.VerifyClientMode) {
		var ret string
		return ret
	}
	return *o.VerifyClientMode
}

// GetVerifyClientModeOk returns a tuple with the VerifyClientMode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DlbCoreSslEndpointsInner) GetVerifyClientModeOk() (*string, bool) {
	if o == nil || IsNil(o.VerifyClientMode) {
		return nil, false
	}
	return o.VerifyClientMode, true
}

// HasVerifyClientMode returns a boolean if a field has been set.
func (o *DlbCoreSslEndpointsInner) HasVerifyClientMode() bool {
	if o != nil && !IsNil(o.VerifyClientMode) {
		return true
	}

	return false
}

// SetVerifyClientMode gets a reference to the given string and assigns it to the VerifyClientMode field.
func (o *DlbCoreSslEndpointsInner) SetVerifyClientMode(v string) {
	o.VerifyClientMode = &v
}

// GetMappings returns the Mappings field value if set, zero value otherwise.
func (o *DlbCoreSslEndpointsInner) GetMappings() []DlbCoreSslEndpointsInnerMappingsInner {
	if o == nil || IsNil(o.Mappings) {
		var ret []DlbCoreSslEndpointsInnerMappingsInner
		return ret
	}
	return o.Mappings
}

// GetMappingsOk returns a tuple with the Mappings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DlbCoreSslEndpointsInner) GetMappingsOk() ([]DlbCoreSslEndpointsInnerMappingsInner, bool) {
	if o == nil || IsNil(o.Mappings) {
		return nil, false
	}
	return o.Mappings, true
}

// HasMappings returns a boolean if a field has been set.
func (o *DlbCoreSslEndpointsInner) HasMappings() bool {
	if o != nil && !IsNil(o.Mappings) {
		return true
	}

	return false
}

// SetMappings gets a reference to the given []DlbCoreSslEndpointsInnerMappingsInner and assigns it to the Mappings field.
func (o *DlbCoreSslEndpointsInner) SetMappings(v []DlbCoreSslEndpointsInnerMappingsInner) {
	o.Mappings = v
}

func (o DlbCoreSslEndpointsInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DlbCoreSslEndpointsInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.PrivateKeyLabel) {
		toSerialize["privateKeyLabel"] = o.PrivateKeyLabel
	}
	if !IsNil(o.PrivateKeyDigest) {
		toSerialize["privateKeyDigest"] = o.PrivateKeyDigest
	}
	if !IsNil(o.PublicKeyLabel) {
		toSerialize["publicKeyLabel"] = o.PublicKeyLabel
	}
	if !IsNil(o.PublicKeyDigest) {
		toSerialize["publicKeyDigest"] = o.PublicKeyDigest
	}
	if !IsNil(o.PublicKeyCN) {
		toSerialize["publicKeyCN"] = o.PublicKeyCN
	}
	if !IsNil(o.ClientCertLabel) {
		toSerialize["clientCertLabel"] = o.ClientCertLabel
	}
	if !IsNil(o.ClientCertDigest) {
		toSerialize["clientCertDigest"] = o.ClientCertDigest
	}
	if !IsNil(o.ClientCertCN) {
		toSerialize["clientCertCN"] = o.ClientCertCN
	}
	if !IsNil(o.RevocationListLabel) {
		toSerialize["revocationListLabel"] = o.RevocationListLabel
	}
	if !IsNil(o.RevocationListDigest) {
		toSerialize["revocationListDigest"] = o.RevocationListDigest
	}
	if !IsNil(o.VerifyClientMode) {
		toSerialize["verifyClientMode"] = o.VerifyClientMode
	}
	if !IsNil(o.Mappings) {
		toSerialize["mappings"] = o.Mappings
	}
	return toSerialize, nil
}

type NullableDlbCoreSslEndpointsInner struct {
	value *DlbCoreSslEndpointsInner
	isSet bool
}

func (v NullableDlbCoreSslEndpointsInner) Get() *DlbCoreSslEndpointsInner {
	return v.value
}

func (v *NullableDlbCoreSslEndpointsInner) Set(val *DlbCoreSslEndpointsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableDlbCoreSslEndpointsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableDlbCoreSslEndpointsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDlbCoreSslEndpointsInner(val *DlbCoreSslEndpointsInner) *NullableDlbCoreSslEndpointsInner {
	return &NullableDlbCoreSslEndpointsInner{value: val, isSet: true}
}

func (v NullableDlbCoreSslEndpointsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDlbCoreSslEndpointsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


