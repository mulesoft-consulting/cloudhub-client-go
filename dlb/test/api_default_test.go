/*
Dedicated Load Balancer API

Testing DefaultApiService

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech);

package dlb

import (
	"context"
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
	"testing"
	openapiclient "github.com/mulesoft-anypoint/anypoint-client-go/dlb"
)

func Test_dlb_DefaultApiService(t *testing.T) {

	configuration := openapiclient.NewConfiguration()
	apiClient := openapiclient.NewAPIClient(configuration)

	t.Run("Test DefaultApiService OrganizationsOrgIdVpcsVpcIdLoadbalancersDlbIdDelete", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var orgId string
		var vpcId string
		var dlbId string

		httpRes, err := apiClient.DefaultApi.OrganizationsOrgIdVpcsVpcIdLoadbalancersDlbIdDelete(context.Background(), orgId, vpcId, dlbId).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test DefaultApiService OrganizationsOrgIdVpcsVpcIdLoadbalancersDlbIdGet", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var orgId string
		var vpcId string
		var dlbId string

		resp, httpRes, err := apiClient.DefaultApi.OrganizationsOrgIdVpcsVpcIdLoadbalancersDlbIdGet(context.Background(), orgId, vpcId, dlbId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test DefaultApiService OrganizationsOrgIdVpcsVpcIdLoadbalancersDlbIdPatch", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var orgId string
		var vpcId string
		var dlbId string

		resp, httpRes, err := apiClient.DefaultApi.OrganizationsOrgIdVpcsVpcIdLoadbalancersDlbIdPatch(context.Background(), orgId, vpcId, dlbId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test DefaultApiService OrganizationsOrgIdVpcsVpcIdLoadbalancersGet", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var orgId string
		var vpcId string

		resp, httpRes, err := apiClient.DefaultApi.OrganizationsOrgIdVpcsVpcIdLoadbalancersGet(context.Background(), orgId, vpcId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test DefaultApiService OrganizationsOrgIdVpcsVpcIdLoadbalancersPost", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var orgId string
		var vpcId string

		resp, httpRes, err := apiClient.DefaultApi.OrganizationsOrgIdVpcsVpcIdLoadbalancersPost(context.Background(), orgId, vpcId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

}
