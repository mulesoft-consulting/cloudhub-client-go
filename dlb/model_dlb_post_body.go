/*
Dedicated Load Balancer API

Description of the DLB API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package dlb

import (
	"encoding/json"
)

// checks if the DlbPostBody type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DlbPostBody{}

// DlbPostBody struct for DlbPostBody
type DlbPostBody struct {
	Name *string `json:"name,omitempty"`
	// dlb state
	State *string `json:"state,omitempty"`
	// The DNS domain for the Load Balancer
	Domain *string `json:"domain,omitempty"`
	IpWhitelist []string `json:"ipWhitelist,omitempty"`
	IpAllowlist []string `json:"ipAllowlist,omitempty"`
	HttpMode *string `json:"httpMode,omitempty"`
	DefaultSslEndpoint *int32 `json:"defaultSslEndpoint,omitempty"`
	Tlsv1 *bool `json:"tlsv1,omitempty"`
	KeepUrlEncoding *bool `json:"keepUrlEncoding,omitempty"`
	UpstreamTlsv12 *bool `json:"upstreamTlsv12,omitempty"`
	StaticIPsDisabled *bool `json:"staticIPsDisabled,omitempty"`
	DoubleStaticIps *bool `json:"doubleStaticIps,omitempty"`
	EnableStreaming *bool `json:"enableStreaming,omitempty"`
	ForwardClientCertificate *bool `json:"forwardClientCertificate,omitempty"`
	// the dedicated load balancer's number of workers.
	Workers *int32 `json:"workers,omitempty"`
	// Sets the Mule application response timeout value.
	ProxyReadTimeout *string `json:"proxyReadTimeout,omitempty"`
	SslEndpoints []DlbPostBodySslEndpointsInner `json:"sslEndpoints,omitempty"`
}

// NewDlbPostBody instantiates a new DlbPostBody object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDlbPostBody() *DlbPostBody {
	this := DlbPostBody{}
	var state string = "STOPPED"
	this.State = &state
	var httpMode string = "redirect"
	this.HttpMode = &httpMode
	var defaultSslEndpoint int32 = 0
	this.DefaultSslEndpoint = &defaultSslEndpoint
	var workers int32 = 2
	this.Workers = &workers
	var proxyReadTimeout string = "300"
	this.ProxyReadTimeout = &proxyReadTimeout
	return &this
}

// NewDlbPostBodyWithDefaults instantiates a new DlbPostBody object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDlbPostBodyWithDefaults() *DlbPostBody {
	this := DlbPostBody{}
	var state string = "STOPPED"
	this.State = &state
	var httpMode string = "redirect"
	this.HttpMode = &httpMode
	var defaultSslEndpoint int32 = 0
	this.DefaultSslEndpoint = &defaultSslEndpoint
	var workers int32 = 2
	this.Workers = &workers
	var proxyReadTimeout string = "300"
	this.ProxyReadTimeout = &proxyReadTimeout
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *DlbPostBody) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DlbPostBody) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *DlbPostBody) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *DlbPostBody) SetName(v string) {
	o.Name = &v
}

// GetState returns the State field value if set, zero value otherwise.
func (o *DlbPostBody) GetState() string {
	if o == nil || IsNil(o.State) {
		var ret string
		return ret
	}
	return *o.State
}

// GetStateOk returns a tuple with the State field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DlbPostBody) GetStateOk() (*string, bool) {
	if o == nil || IsNil(o.State) {
		return nil, false
	}
	return o.State, true
}

// HasState returns a boolean if a field has been set.
func (o *DlbPostBody) HasState() bool {
	if o != nil && !IsNil(o.State) {
		return true
	}

	return false
}

// SetState gets a reference to the given string and assigns it to the State field.
func (o *DlbPostBody) SetState(v string) {
	o.State = &v
}

// GetDomain returns the Domain field value if set, zero value otherwise.
func (o *DlbPostBody) GetDomain() string {
	if o == nil || IsNil(o.Domain) {
		var ret string
		return ret
	}
	return *o.Domain
}

// GetDomainOk returns a tuple with the Domain field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DlbPostBody) GetDomainOk() (*string, bool) {
	if o == nil || IsNil(o.Domain) {
		return nil, false
	}
	return o.Domain, true
}

// HasDomain returns a boolean if a field has been set.
func (o *DlbPostBody) HasDomain() bool {
	if o != nil && !IsNil(o.Domain) {
		return true
	}

	return false
}

// SetDomain gets a reference to the given string and assigns it to the Domain field.
func (o *DlbPostBody) SetDomain(v string) {
	o.Domain = &v
}

// GetIpWhitelist returns the IpWhitelist field value if set, zero value otherwise.
func (o *DlbPostBody) GetIpWhitelist() []string {
	if o == nil || IsNil(o.IpWhitelist) {
		var ret []string
		return ret
	}
	return o.IpWhitelist
}

// GetIpWhitelistOk returns a tuple with the IpWhitelist field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DlbPostBody) GetIpWhitelistOk() ([]string, bool) {
	if o == nil || IsNil(o.IpWhitelist) {
		return nil, false
	}
	return o.IpWhitelist, true
}

// HasIpWhitelist returns a boolean if a field has been set.
func (o *DlbPostBody) HasIpWhitelist() bool {
	if o != nil && !IsNil(o.IpWhitelist) {
		return true
	}

	return false
}

// SetIpWhitelist gets a reference to the given []string and assigns it to the IpWhitelist field.
func (o *DlbPostBody) SetIpWhitelist(v []string) {
	o.IpWhitelist = v
}

// GetIpAllowlist returns the IpAllowlist field value if set, zero value otherwise.
func (o *DlbPostBody) GetIpAllowlist() []string {
	if o == nil || IsNil(o.IpAllowlist) {
		var ret []string
		return ret
	}
	return o.IpAllowlist
}

// GetIpAllowlistOk returns a tuple with the IpAllowlist field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DlbPostBody) GetIpAllowlistOk() ([]string, bool) {
	if o == nil || IsNil(o.IpAllowlist) {
		return nil, false
	}
	return o.IpAllowlist, true
}

// HasIpAllowlist returns a boolean if a field has been set.
func (o *DlbPostBody) HasIpAllowlist() bool {
	if o != nil && !IsNil(o.IpAllowlist) {
		return true
	}

	return false
}

// SetIpAllowlist gets a reference to the given []string and assigns it to the IpAllowlist field.
func (o *DlbPostBody) SetIpAllowlist(v []string) {
	o.IpAllowlist = v
}

// GetHttpMode returns the HttpMode field value if set, zero value otherwise.
func (o *DlbPostBody) GetHttpMode() string {
	if o == nil || IsNil(o.HttpMode) {
		var ret string
		return ret
	}
	return *o.HttpMode
}

// GetHttpModeOk returns a tuple with the HttpMode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DlbPostBody) GetHttpModeOk() (*string, bool) {
	if o == nil || IsNil(o.HttpMode) {
		return nil, false
	}
	return o.HttpMode, true
}

// HasHttpMode returns a boolean if a field has been set.
func (o *DlbPostBody) HasHttpMode() bool {
	if o != nil && !IsNil(o.HttpMode) {
		return true
	}

	return false
}

// SetHttpMode gets a reference to the given string and assigns it to the HttpMode field.
func (o *DlbPostBody) SetHttpMode(v string) {
	o.HttpMode = &v
}

// GetDefaultSslEndpoint returns the DefaultSslEndpoint field value if set, zero value otherwise.
func (o *DlbPostBody) GetDefaultSslEndpoint() int32 {
	if o == nil || IsNil(o.DefaultSslEndpoint) {
		var ret int32
		return ret
	}
	return *o.DefaultSslEndpoint
}

// GetDefaultSslEndpointOk returns a tuple with the DefaultSslEndpoint field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DlbPostBody) GetDefaultSslEndpointOk() (*int32, bool) {
	if o == nil || IsNil(o.DefaultSslEndpoint) {
		return nil, false
	}
	return o.DefaultSslEndpoint, true
}

// HasDefaultSslEndpoint returns a boolean if a field has been set.
func (o *DlbPostBody) HasDefaultSslEndpoint() bool {
	if o != nil && !IsNil(o.DefaultSslEndpoint) {
		return true
	}

	return false
}

// SetDefaultSslEndpoint gets a reference to the given int32 and assigns it to the DefaultSslEndpoint field.
func (o *DlbPostBody) SetDefaultSslEndpoint(v int32) {
	o.DefaultSslEndpoint = &v
}

// GetTlsv1 returns the Tlsv1 field value if set, zero value otherwise.
func (o *DlbPostBody) GetTlsv1() bool {
	if o == nil || IsNil(o.Tlsv1) {
		var ret bool
		return ret
	}
	return *o.Tlsv1
}

// GetTlsv1Ok returns a tuple with the Tlsv1 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DlbPostBody) GetTlsv1Ok() (*bool, bool) {
	if o == nil || IsNil(o.Tlsv1) {
		return nil, false
	}
	return o.Tlsv1, true
}

// HasTlsv1 returns a boolean if a field has been set.
func (o *DlbPostBody) HasTlsv1() bool {
	if o != nil && !IsNil(o.Tlsv1) {
		return true
	}

	return false
}

// SetTlsv1 gets a reference to the given bool and assigns it to the Tlsv1 field.
func (o *DlbPostBody) SetTlsv1(v bool) {
	o.Tlsv1 = &v
}

// GetKeepUrlEncoding returns the KeepUrlEncoding field value if set, zero value otherwise.
func (o *DlbPostBody) GetKeepUrlEncoding() bool {
	if o == nil || IsNil(o.KeepUrlEncoding) {
		var ret bool
		return ret
	}
	return *o.KeepUrlEncoding
}

// GetKeepUrlEncodingOk returns a tuple with the KeepUrlEncoding field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DlbPostBody) GetKeepUrlEncodingOk() (*bool, bool) {
	if o == nil || IsNil(o.KeepUrlEncoding) {
		return nil, false
	}
	return o.KeepUrlEncoding, true
}

// HasKeepUrlEncoding returns a boolean if a field has been set.
func (o *DlbPostBody) HasKeepUrlEncoding() bool {
	if o != nil && !IsNil(o.KeepUrlEncoding) {
		return true
	}

	return false
}

// SetKeepUrlEncoding gets a reference to the given bool and assigns it to the KeepUrlEncoding field.
func (o *DlbPostBody) SetKeepUrlEncoding(v bool) {
	o.KeepUrlEncoding = &v
}

// GetUpstreamTlsv12 returns the UpstreamTlsv12 field value if set, zero value otherwise.
func (o *DlbPostBody) GetUpstreamTlsv12() bool {
	if o == nil || IsNil(o.UpstreamTlsv12) {
		var ret bool
		return ret
	}
	return *o.UpstreamTlsv12
}

// GetUpstreamTlsv12Ok returns a tuple with the UpstreamTlsv12 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DlbPostBody) GetUpstreamTlsv12Ok() (*bool, bool) {
	if o == nil || IsNil(o.UpstreamTlsv12) {
		return nil, false
	}
	return o.UpstreamTlsv12, true
}

// HasUpstreamTlsv12 returns a boolean if a field has been set.
func (o *DlbPostBody) HasUpstreamTlsv12() bool {
	if o != nil && !IsNil(o.UpstreamTlsv12) {
		return true
	}

	return false
}

// SetUpstreamTlsv12 gets a reference to the given bool and assigns it to the UpstreamTlsv12 field.
func (o *DlbPostBody) SetUpstreamTlsv12(v bool) {
	o.UpstreamTlsv12 = &v
}

// GetStaticIPsDisabled returns the StaticIPsDisabled field value if set, zero value otherwise.
func (o *DlbPostBody) GetStaticIPsDisabled() bool {
	if o == nil || IsNil(o.StaticIPsDisabled) {
		var ret bool
		return ret
	}
	return *o.StaticIPsDisabled
}

// GetStaticIPsDisabledOk returns a tuple with the StaticIPsDisabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DlbPostBody) GetStaticIPsDisabledOk() (*bool, bool) {
	if o == nil || IsNil(o.StaticIPsDisabled) {
		return nil, false
	}
	return o.StaticIPsDisabled, true
}

// HasStaticIPsDisabled returns a boolean if a field has been set.
func (o *DlbPostBody) HasStaticIPsDisabled() bool {
	if o != nil && !IsNil(o.StaticIPsDisabled) {
		return true
	}

	return false
}

// SetStaticIPsDisabled gets a reference to the given bool and assigns it to the StaticIPsDisabled field.
func (o *DlbPostBody) SetStaticIPsDisabled(v bool) {
	o.StaticIPsDisabled = &v
}

// GetDoubleStaticIps returns the DoubleStaticIps field value if set, zero value otherwise.
func (o *DlbPostBody) GetDoubleStaticIps() bool {
	if o == nil || IsNil(o.DoubleStaticIps) {
		var ret bool
		return ret
	}
	return *o.DoubleStaticIps
}

// GetDoubleStaticIpsOk returns a tuple with the DoubleStaticIps field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DlbPostBody) GetDoubleStaticIpsOk() (*bool, bool) {
	if o == nil || IsNil(o.DoubleStaticIps) {
		return nil, false
	}
	return o.DoubleStaticIps, true
}

// HasDoubleStaticIps returns a boolean if a field has been set.
func (o *DlbPostBody) HasDoubleStaticIps() bool {
	if o != nil && !IsNil(o.DoubleStaticIps) {
		return true
	}

	return false
}

// SetDoubleStaticIps gets a reference to the given bool and assigns it to the DoubleStaticIps field.
func (o *DlbPostBody) SetDoubleStaticIps(v bool) {
	o.DoubleStaticIps = &v
}

// GetEnableStreaming returns the EnableStreaming field value if set, zero value otherwise.
func (o *DlbPostBody) GetEnableStreaming() bool {
	if o == nil || IsNil(o.EnableStreaming) {
		var ret bool
		return ret
	}
	return *o.EnableStreaming
}

// GetEnableStreamingOk returns a tuple with the EnableStreaming field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DlbPostBody) GetEnableStreamingOk() (*bool, bool) {
	if o == nil || IsNil(o.EnableStreaming) {
		return nil, false
	}
	return o.EnableStreaming, true
}

// HasEnableStreaming returns a boolean if a field has been set.
func (o *DlbPostBody) HasEnableStreaming() bool {
	if o != nil && !IsNil(o.EnableStreaming) {
		return true
	}

	return false
}

// SetEnableStreaming gets a reference to the given bool and assigns it to the EnableStreaming field.
func (o *DlbPostBody) SetEnableStreaming(v bool) {
	o.EnableStreaming = &v
}

// GetForwardClientCertificate returns the ForwardClientCertificate field value if set, zero value otherwise.
func (o *DlbPostBody) GetForwardClientCertificate() bool {
	if o == nil || IsNil(o.ForwardClientCertificate) {
		var ret bool
		return ret
	}
	return *o.ForwardClientCertificate
}

// GetForwardClientCertificateOk returns a tuple with the ForwardClientCertificate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DlbPostBody) GetForwardClientCertificateOk() (*bool, bool) {
	if o == nil || IsNil(o.ForwardClientCertificate) {
		return nil, false
	}
	return o.ForwardClientCertificate, true
}

// HasForwardClientCertificate returns a boolean if a field has been set.
func (o *DlbPostBody) HasForwardClientCertificate() bool {
	if o != nil && !IsNil(o.ForwardClientCertificate) {
		return true
	}

	return false
}

// SetForwardClientCertificate gets a reference to the given bool and assigns it to the ForwardClientCertificate field.
func (o *DlbPostBody) SetForwardClientCertificate(v bool) {
	o.ForwardClientCertificate = &v
}

// GetWorkers returns the Workers field value if set, zero value otherwise.
func (o *DlbPostBody) GetWorkers() int32 {
	if o == nil || IsNil(o.Workers) {
		var ret int32
		return ret
	}
	return *o.Workers
}

// GetWorkersOk returns a tuple with the Workers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DlbPostBody) GetWorkersOk() (*int32, bool) {
	if o == nil || IsNil(o.Workers) {
		return nil, false
	}
	return o.Workers, true
}

// HasWorkers returns a boolean if a field has been set.
func (o *DlbPostBody) HasWorkers() bool {
	if o != nil && !IsNil(o.Workers) {
		return true
	}

	return false
}

// SetWorkers gets a reference to the given int32 and assigns it to the Workers field.
func (o *DlbPostBody) SetWorkers(v int32) {
	o.Workers = &v
}

// GetProxyReadTimeout returns the ProxyReadTimeout field value if set, zero value otherwise.
func (o *DlbPostBody) GetProxyReadTimeout() string {
	if o == nil || IsNil(o.ProxyReadTimeout) {
		var ret string
		return ret
	}
	return *o.ProxyReadTimeout
}

// GetProxyReadTimeoutOk returns a tuple with the ProxyReadTimeout field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DlbPostBody) GetProxyReadTimeoutOk() (*string, bool) {
	if o == nil || IsNil(o.ProxyReadTimeout) {
		return nil, false
	}
	return o.ProxyReadTimeout, true
}

// HasProxyReadTimeout returns a boolean if a field has been set.
func (o *DlbPostBody) HasProxyReadTimeout() bool {
	if o != nil && !IsNil(o.ProxyReadTimeout) {
		return true
	}

	return false
}

// SetProxyReadTimeout gets a reference to the given string and assigns it to the ProxyReadTimeout field.
func (o *DlbPostBody) SetProxyReadTimeout(v string) {
	o.ProxyReadTimeout = &v
}

// GetSslEndpoints returns the SslEndpoints field value if set, zero value otherwise.
func (o *DlbPostBody) GetSslEndpoints() []DlbPostBodySslEndpointsInner {
	if o == nil || IsNil(o.SslEndpoints) {
		var ret []DlbPostBodySslEndpointsInner
		return ret
	}
	return o.SslEndpoints
}

// GetSslEndpointsOk returns a tuple with the SslEndpoints field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DlbPostBody) GetSslEndpointsOk() ([]DlbPostBodySslEndpointsInner, bool) {
	if o == nil || IsNil(o.SslEndpoints) {
		return nil, false
	}
	return o.SslEndpoints, true
}

// HasSslEndpoints returns a boolean if a field has been set.
func (o *DlbPostBody) HasSslEndpoints() bool {
	if o != nil && !IsNil(o.SslEndpoints) {
		return true
	}

	return false
}

// SetSslEndpoints gets a reference to the given []DlbPostBodySslEndpointsInner and assigns it to the SslEndpoints field.
func (o *DlbPostBody) SetSslEndpoints(v []DlbPostBodySslEndpointsInner) {
	o.SslEndpoints = v
}

func (o DlbPostBody) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DlbPostBody) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.State) {
		toSerialize["state"] = o.State
	}
	if !IsNil(o.Domain) {
		toSerialize["domain"] = o.Domain
	}
	if !IsNil(o.IpWhitelist) {
		toSerialize["ipWhitelist"] = o.IpWhitelist
	}
	if !IsNil(o.IpAllowlist) {
		toSerialize["ipAllowlist"] = o.IpAllowlist
	}
	if !IsNil(o.HttpMode) {
		toSerialize["httpMode"] = o.HttpMode
	}
	if !IsNil(o.DefaultSslEndpoint) {
		toSerialize["defaultSslEndpoint"] = o.DefaultSslEndpoint
	}
	if !IsNil(o.Tlsv1) {
		toSerialize["tlsv1"] = o.Tlsv1
	}
	if !IsNil(o.KeepUrlEncoding) {
		toSerialize["keepUrlEncoding"] = o.KeepUrlEncoding
	}
	if !IsNil(o.UpstreamTlsv12) {
		toSerialize["upstreamTlsv12"] = o.UpstreamTlsv12
	}
	if !IsNil(o.StaticIPsDisabled) {
		toSerialize["staticIPsDisabled"] = o.StaticIPsDisabled
	}
	if !IsNil(o.DoubleStaticIps) {
		toSerialize["doubleStaticIps"] = o.DoubleStaticIps
	}
	if !IsNil(o.EnableStreaming) {
		toSerialize["enableStreaming"] = o.EnableStreaming
	}
	if !IsNil(o.ForwardClientCertificate) {
		toSerialize["forwardClientCertificate"] = o.ForwardClientCertificate
	}
	if !IsNil(o.Workers) {
		toSerialize["workers"] = o.Workers
	}
	if !IsNil(o.ProxyReadTimeout) {
		toSerialize["proxyReadTimeout"] = o.ProxyReadTimeout
	}
	if !IsNil(o.SslEndpoints) {
		toSerialize["sslEndpoints"] = o.SslEndpoints
	}
	return toSerialize, nil
}

type NullableDlbPostBody struct {
	value *DlbPostBody
	isSet bool
}

func (v NullableDlbPostBody) Get() *DlbPostBody {
	return v.value
}

func (v *NullableDlbPostBody) Set(val *DlbPostBody) {
	v.value = val
	v.isSet = true
}

func (v NullableDlbPostBody) IsSet() bool {
	return v.isSet
}

func (v *NullableDlbPostBody) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDlbPostBody(val *DlbPostBody) *NullableDlbPostBody {
	return &NullableDlbPostBody{value: val, isSet: true}
}

func (v NullableDlbPostBody) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDlbPostBody) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


