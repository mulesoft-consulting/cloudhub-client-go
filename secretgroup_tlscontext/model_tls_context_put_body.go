/*
Secret Group TLS Context API

Secret Group TLS Context API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package secretgroup_tlscontext

import (
	"encoding/json"
	"fmt"
)

// TlsContextPutBody - The body differs depending on the type of the tls-context you want to create. more information here: https://anypoint.mulesoft.com/exchange/portals/anypoint-platform/f1e97bc6-315a-4490-82a7-23abe036327a.anypoint-platform/secrets-manager/minor/1.6/console/method/%233344/ 
type TlsContextPutBody struct {
	TlsContextFlexGatewayBody *TlsContextFlexGatewayBody
	TlsContextMuleBody *TlsContextMuleBody
	TlsContextSfBody *TlsContextSfBody
}

// TlsContextFlexGatewayBodyAsTlsContextPutBody is a convenience function that returns TlsContextFlexGatewayBody wrapped in TlsContextPutBody
func TlsContextFlexGatewayBodyAsTlsContextPutBody(v *TlsContextFlexGatewayBody) TlsContextPutBody {
	return TlsContextPutBody{
		TlsContextFlexGatewayBody: v,
	}
}

// TlsContextMuleBodyAsTlsContextPutBody is a convenience function that returns TlsContextMuleBody wrapped in TlsContextPutBody
func TlsContextMuleBodyAsTlsContextPutBody(v *TlsContextMuleBody) TlsContextPutBody {
	return TlsContextPutBody{
		TlsContextMuleBody: v,
	}
}

// TlsContextSfBodyAsTlsContextPutBody is a convenience function that returns TlsContextSfBody wrapped in TlsContextPutBody
func TlsContextSfBodyAsTlsContextPutBody(v *TlsContextSfBody) TlsContextPutBody {
	return TlsContextPutBody{
		TlsContextSfBody: v,
	}
}


// Unmarshal JSON data into one of the pointers in the struct
func (dst *TlsContextPutBody) UnmarshalJSON(data []byte) error {
	var err error
	match := 0
	// try to unmarshal data into TlsContextFlexGatewayBody
	err = newStrictDecoder(data).Decode(&dst.TlsContextFlexGatewayBody)
	if err == nil {
		jsonTlsContextFlexGatewayBody, _ := json.Marshal(dst.TlsContextFlexGatewayBody)
		if string(jsonTlsContextFlexGatewayBody) == "{}" { // empty struct
			dst.TlsContextFlexGatewayBody = nil
		} else {
			match++
		}
	} else {
		dst.TlsContextFlexGatewayBody = nil
	}

	// try to unmarshal data into TlsContextMuleBody
	err = newStrictDecoder(data).Decode(&dst.TlsContextMuleBody)
	if err == nil {
		jsonTlsContextMuleBody, _ := json.Marshal(dst.TlsContextMuleBody)
		if string(jsonTlsContextMuleBody) == "{}" { // empty struct
			dst.TlsContextMuleBody = nil
		} else {
			match++
		}
	} else {
		dst.TlsContextMuleBody = nil
	}

	// try to unmarshal data into TlsContextSfBody
	err = newStrictDecoder(data).Decode(&dst.TlsContextSfBody)
	if err == nil {
		jsonTlsContextSfBody, _ := json.Marshal(dst.TlsContextSfBody)
		if string(jsonTlsContextSfBody) == "{}" { // empty struct
			dst.TlsContextSfBody = nil
		} else {
			match++
		}
	} else {
		dst.TlsContextSfBody = nil
	}

	if match > 1 { // more than 1 match
		// reset to nil
		dst.TlsContextFlexGatewayBody = nil
		dst.TlsContextMuleBody = nil
		dst.TlsContextSfBody = nil

		return fmt.Errorf("data matches more than one schema in oneOf(TlsContextPutBody)")
	} else if match == 1 {
		return nil // exactly one match
	} else { // no match
		return fmt.Errorf("data failed to match schemas in oneOf(TlsContextPutBody)")
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src TlsContextPutBody) MarshalJSON() ([]byte, error) {
	if src.TlsContextFlexGatewayBody != nil {
		return json.Marshal(&src.TlsContextFlexGatewayBody)
	}

	if src.TlsContextMuleBody != nil {
		return json.Marshal(&src.TlsContextMuleBody)
	}

	if src.TlsContextSfBody != nil {
		return json.Marshal(&src.TlsContextSfBody)
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance
func (obj *TlsContextPutBody) GetActualInstance() (interface{}) {
	if obj == nil {
		return nil
	}
	if obj.TlsContextFlexGatewayBody != nil {
		return obj.TlsContextFlexGatewayBody
	}

	if obj.TlsContextMuleBody != nil {
		return obj.TlsContextMuleBody
	}

	if obj.TlsContextSfBody != nil {
		return obj.TlsContextSfBody
	}

	// all schemas are nil
	return nil
}

type NullableTlsContextPutBody struct {
	value *TlsContextPutBody
	isSet bool
}

func (v NullableTlsContextPutBody) Get() *TlsContextPutBody {
	return v.value
}

func (v *NullableTlsContextPutBody) Set(val *TlsContextPutBody) {
	v.value = val
	v.isSet = true
}

func (v NullableTlsContextPutBody) IsSet() bool {
	return v.isSet
}

func (v *NullableTlsContextPutBody) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTlsContextPutBody(val *TlsContextPutBody) *NullableTlsContextPutBody {
	return &NullableTlsContextPutBody{value: val, isSet: true}
}

func (v NullableTlsContextPutBody) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTlsContextPutBody) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


