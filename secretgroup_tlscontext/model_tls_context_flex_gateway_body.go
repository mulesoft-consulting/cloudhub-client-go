/*
Secret Group TLS Context API

Secret Group TLS Context API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package secretgroup_tlscontext

import (
	"encoding/json"
)

// checks if the TlsContextFlexGatewayBody type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TlsContextFlexGatewayBody{}

// TlsContextFlexGatewayBody struct for TlsContextFlexGatewayBody
type TlsContextFlexGatewayBody struct {
	Name *string `json:"name,omitempty"`
	// Date on which this secret should expire. If not set, by default, it will be set to one year from the date on which this secret is created/updated. Once the secret expires, a grant can not be requested for it. 
	ExpirationDate *string `json:"expirationDate,omitempty"`
	// Minimum TLS version supported.
	MinTlsVersion *string `json:"minTlsVersion,omitempty"`
	// Maximum TLS version supported.
	MaxTlsVersion *string `json:"maxTlsVersion,omitempty"`
	// The target engine
	Target *string `json:"target,omitempty"`
	// supported HTTP versions in the most-to-least preferred order. At least one version must be specified.
	AlpnProtocols []string `json:"alpnProtocols,omitempty"`
	InboundSettings *TlsContextFlexGatewayBodyInboundSettings `json:"inboundSettings,omitempty"`
	OutboundSettings *TlsContextFlexGatewayBodyOutboundSettings `json:"outboundSettings,omitempty"`
	// List of acceptable cipher suites for Flex Gateway target if min TLS version is < 1.3. If you are are not using the defaults and select individual ciphers, please select ciphers that match the configured keystore to ensure that TLS can setup a connection. For a keystore with an RSA key (the most common type), select ciphers which contain the string RSA (there are some exceptions). If using ECC ciphers, select ciphers which contain the string \"ECDSA\". TLS standards and documentation can be consulted for more background information. 
	CipherSuites []string `json:"cipherSuites,omitempty"`
	Keystore *SecretPath `json:"keystore,omitempty"`
	Truststore *SecretPath `json:"truststore,omitempty"`
}

// NewTlsContextFlexGatewayBody instantiates a new TlsContextFlexGatewayBody object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTlsContextFlexGatewayBody() *TlsContextFlexGatewayBody {
	this := TlsContextFlexGatewayBody{}
	return &this
}

// NewTlsContextFlexGatewayBodyWithDefaults instantiates a new TlsContextFlexGatewayBody object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTlsContextFlexGatewayBodyWithDefaults() *TlsContextFlexGatewayBody {
	this := TlsContextFlexGatewayBody{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *TlsContextFlexGatewayBody) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TlsContextFlexGatewayBody) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *TlsContextFlexGatewayBody) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *TlsContextFlexGatewayBody) SetName(v string) {
	o.Name = &v
}

// GetExpirationDate returns the ExpirationDate field value if set, zero value otherwise.
func (o *TlsContextFlexGatewayBody) GetExpirationDate() string {
	if o == nil || IsNil(o.ExpirationDate) {
		var ret string
		return ret
	}
	return *o.ExpirationDate
}

// GetExpirationDateOk returns a tuple with the ExpirationDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TlsContextFlexGatewayBody) GetExpirationDateOk() (*string, bool) {
	if o == nil || IsNil(o.ExpirationDate) {
		return nil, false
	}
	return o.ExpirationDate, true
}

// HasExpirationDate returns a boolean if a field has been set.
func (o *TlsContextFlexGatewayBody) HasExpirationDate() bool {
	if o != nil && !IsNil(o.ExpirationDate) {
		return true
	}

	return false
}

// SetExpirationDate gets a reference to the given string and assigns it to the ExpirationDate field.
func (o *TlsContextFlexGatewayBody) SetExpirationDate(v string) {
	o.ExpirationDate = &v
}

// GetMinTlsVersion returns the MinTlsVersion field value if set, zero value otherwise.
func (o *TlsContextFlexGatewayBody) GetMinTlsVersion() string {
	if o == nil || IsNil(o.MinTlsVersion) {
		var ret string
		return ret
	}
	return *o.MinTlsVersion
}

// GetMinTlsVersionOk returns a tuple with the MinTlsVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TlsContextFlexGatewayBody) GetMinTlsVersionOk() (*string, bool) {
	if o == nil || IsNil(o.MinTlsVersion) {
		return nil, false
	}
	return o.MinTlsVersion, true
}

// HasMinTlsVersion returns a boolean if a field has been set.
func (o *TlsContextFlexGatewayBody) HasMinTlsVersion() bool {
	if o != nil && !IsNil(o.MinTlsVersion) {
		return true
	}

	return false
}

// SetMinTlsVersion gets a reference to the given string and assigns it to the MinTlsVersion field.
func (o *TlsContextFlexGatewayBody) SetMinTlsVersion(v string) {
	o.MinTlsVersion = &v
}

// GetMaxTlsVersion returns the MaxTlsVersion field value if set, zero value otherwise.
func (o *TlsContextFlexGatewayBody) GetMaxTlsVersion() string {
	if o == nil || IsNil(o.MaxTlsVersion) {
		var ret string
		return ret
	}
	return *o.MaxTlsVersion
}

// GetMaxTlsVersionOk returns a tuple with the MaxTlsVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TlsContextFlexGatewayBody) GetMaxTlsVersionOk() (*string, bool) {
	if o == nil || IsNil(o.MaxTlsVersion) {
		return nil, false
	}
	return o.MaxTlsVersion, true
}

// HasMaxTlsVersion returns a boolean if a field has been set.
func (o *TlsContextFlexGatewayBody) HasMaxTlsVersion() bool {
	if o != nil && !IsNil(o.MaxTlsVersion) {
		return true
	}

	return false
}

// SetMaxTlsVersion gets a reference to the given string and assigns it to the MaxTlsVersion field.
func (o *TlsContextFlexGatewayBody) SetMaxTlsVersion(v string) {
	o.MaxTlsVersion = &v
}

// GetTarget returns the Target field value if set, zero value otherwise.
func (o *TlsContextFlexGatewayBody) GetTarget() string {
	if o == nil || IsNil(o.Target) {
		var ret string
		return ret
	}
	return *o.Target
}

// GetTargetOk returns a tuple with the Target field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TlsContextFlexGatewayBody) GetTargetOk() (*string, bool) {
	if o == nil || IsNil(o.Target) {
		return nil, false
	}
	return o.Target, true
}

// HasTarget returns a boolean if a field has been set.
func (o *TlsContextFlexGatewayBody) HasTarget() bool {
	if o != nil && !IsNil(o.Target) {
		return true
	}

	return false
}

// SetTarget gets a reference to the given string and assigns it to the Target field.
func (o *TlsContextFlexGatewayBody) SetTarget(v string) {
	o.Target = &v
}

// GetAlpnProtocols returns the AlpnProtocols field value if set, zero value otherwise.
func (o *TlsContextFlexGatewayBody) GetAlpnProtocols() []string {
	if o == nil || IsNil(o.AlpnProtocols) {
		var ret []string
		return ret
	}
	return o.AlpnProtocols
}

// GetAlpnProtocolsOk returns a tuple with the AlpnProtocols field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TlsContextFlexGatewayBody) GetAlpnProtocolsOk() ([]string, bool) {
	if o == nil || IsNil(o.AlpnProtocols) {
		return nil, false
	}
	return o.AlpnProtocols, true
}

// HasAlpnProtocols returns a boolean if a field has been set.
func (o *TlsContextFlexGatewayBody) HasAlpnProtocols() bool {
	if o != nil && !IsNil(o.AlpnProtocols) {
		return true
	}

	return false
}

// SetAlpnProtocols gets a reference to the given []string and assigns it to the AlpnProtocols field.
func (o *TlsContextFlexGatewayBody) SetAlpnProtocols(v []string) {
	o.AlpnProtocols = v
}

// GetInboundSettings returns the InboundSettings field value if set, zero value otherwise.
func (o *TlsContextFlexGatewayBody) GetInboundSettings() TlsContextFlexGatewayBodyInboundSettings {
	if o == nil || IsNil(o.InboundSettings) {
		var ret TlsContextFlexGatewayBodyInboundSettings
		return ret
	}
	return *o.InboundSettings
}

// GetInboundSettingsOk returns a tuple with the InboundSettings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TlsContextFlexGatewayBody) GetInboundSettingsOk() (*TlsContextFlexGatewayBodyInboundSettings, bool) {
	if o == nil || IsNil(o.InboundSettings) {
		return nil, false
	}
	return o.InboundSettings, true
}

// HasInboundSettings returns a boolean if a field has been set.
func (o *TlsContextFlexGatewayBody) HasInboundSettings() bool {
	if o != nil && !IsNil(o.InboundSettings) {
		return true
	}

	return false
}

// SetInboundSettings gets a reference to the given TlsContextFlexGatewayBodyInboundSettings and assigns it to the InboundSettings field.
func (o *TlsContextFlexGatewayBody) SetInboundSettings(v TlsContextFlexGatewayBodyInboundSettings) {
	o.InboundSettings = &v
}

// GetOutboundSettings returns the OutboundSettings field value if set, zero value otherwise.
func (o *TlsContextFlexGatewayBody) GetOutboundSettings() TlsContextFlexGatewayBodyOutboundSettings {
	if o == nil || IsNil(o.OutboundSettings) {
		var ret TlsContextFlexGatewayBodyOutboundSettings
		return ret
	}
	return *o.OutboundSettings
}

// GetOutboundSettingsOk returns a tuple with the OutboundSettings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TlsContextFlexGatewayBody) GetOutboundSettingsOk() (*TlsContextFlexGatewayBodyOutboundSettings, bool) {
	if o == nil || IsNil(o.OutboundSettings) {
		return nil, false
	}
	return o.OutboundSettings, true
}

// HasOutboundSettings returns a boolean if a field has been set.
func (o *TlsContextFlexGatewayBody) HasOutboundSettings() bool {
	if o != nil && !IsNil(o.OutboundSettings) {
		return true
	}

	return false
}

// SetOutboundSettings gets a reference to the given TlsContextFlexGatewayBodyOutboundSettings and assigns it to the OutboundSettings field.
func (o *TlsContextFlexGatewayBody) SetOutboundSettings(v TlsContextFlexGatewayBodyOutboundSettings) {
	o.OutboundSettings = &v
}

// GetCipherSuites returns the CipherSuites field value if set, zero value otherwise.
func (o *TlsContextFlexGatewayBody) GetCipherSuites() []string {
	if o == nil || IsNil(o.CipherSuites) {
		var ret []string
		return ret
	}
	return o.CipherSuites
}

// GetCipherSuitesOk returns a tuple with the CipherSuites field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TlsContextFlexGatewayBody) GetCipherSuitesOk() ([]string, bool) {
	if o == nil || IsNil(o.CipherSuites) {
		return nil, false
	}
	return o.CipherSuites, true
}

// HasCipherSuites returns a boolean if a field has been set.
func (o *TlsContextFlexGatewayBody) HasCipherSuites() bool {
	if o != nil && !IsNil(o.CipherSuites) {
		return true
	}

	return false
}

// SetCipherSuites gets a reference to the given []string and assigns it to the CipherSuites field.
func (o *TlsContextFlexGatewayBody) SetCipherSuites(v []string) {
	o.CipherSuites = v
}

// GetKeystore returns the Keystore field value if set, zero value otherwise.
func (o *TlsContextFlexGatewayBody) GetKeystore() SecretPath {
	if o == nil || IsNil(o.Keystore) {
		var ret SecretPath
		return ret
	}
	return *o.Keystore
}

// GetKeystoreOk returns a tuple with the Keystore field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TlsContextFlexGatewayBody) GetKeystoreOk() (*SecretPath, bool) {
	if o == nil || IsNil(o.Keystore) {
		return nil, false
	}
	return o.Keystore, true
}

// HasKeystore returns a boolean if a field has been set.
func (o *TlsContextFlexGatewayBody) HasKeystore() bool {
	if o != nil && !IsNil(o.Keystore) {
		return true
	}

	return false
}

// SetKeystore gets a reference to the given SecretPath and assigns it to the Keystore field.
func (o *TlsContextFlexGatewayBody) SetKeystore(v SecretPath) {
	o.Keystore = &v
}

// GetTruststore returns the Truststore field value if set, zero value otherwise.
func (o *TlsContextFlexGatewayBody) GetTruststore() SecretPath {
	if o == nil || IsNil(o.Truststore) {
		var ret SecretPath
		return ret
	}
	return *o.Truststore
}

// GetTruststoreOk returns a tuple with the Truststore field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TlsContextFlexGatewayBody) GetTruststoreOk() (*SecretPath, bool) {
	if o == nil || IsNil(o.Truststore) {
		return nil, false
	}
	return o.Truststore, true
}

// HasTruststore returns a boolean if a field has been set.
func (o *TlsContextFlexGatewayBody) HasTruststore() bool {
	if o != nil && !IsNil(o.Truststore) {
		return true
	}

	return false
}

// SetTruststore gets a reference to the given SecretPath and assigns it to the Truststore field.
func (o *TlsContextFlexGatewayBody) SetTruststore(v SecretPath) {
	o.Truststore = &v
}

func (o TlsContextFlexGatewayBody) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TlsContextFlexGatewayBody) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.ExpirationDate) {
		toSerialize["expirationDate"] = o.ExpirationDate
	}
	if !IsNil(o.MinTlsVersion) {
		toSerialize["minTlsVersion"] = o.MinTlsVersion
	}
	if !IsNil(o.MaxTlsVersion) {
		toSerialize["maxTlsVersion"] = o.MaxTlsVersion
	}
	if !IsNil(o.Target) {
		toSerialize["target"] = o.Target
	}
	if !IsNil(o.AlpnProtocols) {
		toSerialize["alpnProtocols"] = o.AlpnProtocols
	}
	if !IsNil(o.InboundSettings) {
		toSerialize["inboundSettings"] = o.InboundSettings
	}
	if !IsNil(o.OutboundSettings) {
		toSerialize["outboundSettings"] = o.OutboundSettings
	}
	if !IsNil(o.CipherSuites) {
		toSerialize["cipherSuites"] = o.CipherSuites
	}
	if !IsNil(o.Keystore) {
		toSerialize["keystore"] = o.Keystore
	}
	if !IsNil(o.Truststore) {
		toSerialize["truststore"] = o.Truststore
	}
	return toSerialize, nil
}

type NullableTlsContextFlexGatewayBody struct {
	value *TlsContextFlexGatewayBody
	isSet bool
}

func (v NullableTlsContextFlexGatewayBody) Get() *TlsContextFlexGatewayBody {
	return v.value
}

func (v *NullableTlsContextFlexGatewayBody) Set(val *TlsContextFlexGatewayBody) {
	v.value = val
	v.isSet = true
}

func (v NullableTlsContextFlexGatewayBody) IsSet() bool {
	return v.isSet
}

func (v *NullableTlsContextFlexGatewayBody) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTlsContextFlexGatewayBody(val *TlsContextFlexGatewayBody) *NullableTlsContextFlexGatewayBody {
	return &NullableTlsContextFlexGatewayBody{value: val, isSet: true}
}

func (v NullableTlsContextFlexGatewayBody) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTlsContextFlexGatewayBody) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


