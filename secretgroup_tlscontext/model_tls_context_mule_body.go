/*
Secret Group TLS Context API

Secret Group TLS Context API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package secretgroup_tlscontext

import (
	"encoding/json"
)

// checks if the TlsContextMuleBody type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TlsContextMuleBody{}

// TlsContextMuleBody struct for TlsContextMuleBody
type TlsContextMuleBody struct {
	Name *string `json:"name,omitempty"`
	// Date on which this secret should expire. If not set, by default, it will be set to one year from the date on which this secret is created/updated. Once the secret expires, a grant can not be requested for it. 
	ExpirationDate *string `json:"expirationDate,omitempty"`
	// The target engine. The enum type SecurityFabric is used for the Anypoint Security products.
	Target *string `json:"target,omitempty"`
	Keystore *SecretPath `json:"keystore,omitempty"`
	Truststore *SecretPath `json:"truststore,omitempty"`
	// List of enabled cipher suites for Mule target
	CipherSuites []string `json:"cipherSuites,omitempty"`
	AcceptableTlsVersions *AcceptableTlsVersions `json:"acceptableTlsVersions,omitempty"`
	// Setting this flag to true indicates that certificate validation should not be enforced, i.e. the truststore, even though set, is ignored at runtime.
	Insecure *bool `json:"insecure,omitempty"`
}

// NewTlsContextMuleBody instantiates a new TlsContextMuleBody object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTlsContextMuleBody() *TlsContextMuleBody {
	this := TlsContextMuleBody{}
	return &this
}

// NewTlsContextMuleBodyWithDefaults instantiates a new TlsContextMuleBody object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTlsContextMuleBodyWithDefaults() *TlsContextMuleBody {
	this := TlsContextMuleBody{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *TlsContextMuleBody) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TlsContextMuleBody) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *TlsContextMuleBody) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *TlsContextMuleBody) SetName(v string) {
	o.Name = &v
}

// GetExpirationDate returns the ExpirationDate field value if set, zero value otherwise.
func (o *TlsContextMuleBody) GetExpirationDate() string {
	if o == nil || IsNil(o.ExpirationDate) {
		var ret string
		return ret
	}
	return *o.ExpirationDate
}

// GetExpirationDateOk returns a tuple with the ExpirationDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TlsContextMuleBody) GetExpirationDateOk() (*string, bool) {
	if o == nil || IsNil(o.ExpirationDate) {
		return nil, false
	}
	return o.ExpirationDate, true
}

// HasExpirationDate returns a boolean if a field has been set.
func (o *TlsContextMuleBody) HasExpirationDate() bool {
	if o != nil && !IsNil(o.ExpirationDate) {
		return true
	}

	return false
}

// SetExpirationDate gets a reference to the given string and assigns it to the ExpirationDate field.
func (o *TlsContextMuleBody) SetExpirationDate(v string) {
	o.ExpirationDate = &v
}

// GetTarget returns the Target field value if set, zero value otherwise.
func (o *TlsContextMuleBody) GetTarget() string {
	if o == nil || IsNil(o.Target) {
		var ret string
		return ret
	}
	return *o.Target
}

// GetTargetOk returns a tuple with the Target field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TlsContextMuleBody) GetTargetOk() (*string, bool) {
	if o == nil || IsNil(o.Target) {
		return nil, false
	}
	return o.Target, true
}

// HasTarget returns a boolean if a field has been set.
func (o *TlsContextMuleBody) HasTarget() bool {
	if o != nil && !IsNil(o.Target) {
		return true
	}

	return false
}

// SetTarget gets a reference to the given string and assigns it to the Target field.
func (o *TlsContextMuleBody) SetTarget(v string) {
	o.Target = &v
}

// GetKeystore returns the Keystore field value if set, zero value otherwise.
func (o *TlsContextMuleBody) GetKeystore() SecretPath {
	if o == nil || IsNil(o.Keystore) {
		var ret SecretPath
		return ret
	}
	return *o.Keystore
}

// GetKeystoreOk returns a tuple with the Keystore field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TlsContextMuleBody) GetKeystoreOk() (*SecretPath, bool) {
	if o == nil || IsNil(o.Keystore) {
		return nil, false
	}
	return o.Keystore, true
}

// HasKeystore returns a boolean if a field has been set.
func (o *TlsContextMuleBody) HasKeystore() bool {
	if o != nil && !IsNil(o.Keystore) {
		return true
	}

	return false
}

// SetKeystore gets a reference to the given SecretPath and assigns it to the Keystore field.
func (o *TlsContextMuleBody) SetKeystore(v SecretPath) {
	o.Keystore = &v
}

// GetTruststore returns the Truststore field value if set, zero value otherwise.
func (o *TlsContextMuleBody) GetTruststore() SecretPath {
	if o == nil || IsNil(o.Truststore) {
		var ret SecretPath
		return ret
	}
	return *o.Truststore
}

// GetTruststoreOk returns a tuple with the Truststore field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TlsContextMuleBody) GetTruststoreOk() (*SecretPath, bool) {
	if o == nil || IsNil(o.Truststore) {
		return nil, false
	}
	return o.Truststore, true
}

// HasTruststore returns a boolean if a field has been set.
func (o *TlsContextMuleBody) HasTruststore() bool {
	if o != nil && !IsNil(o.Truststore) {
		return true
	}

	return false
}

// SetTruststore gets a reference to the given SecretPath and assigns it to the Truststore field.
func (o *TlsContextMuleBody) SetTruststore(v SecretPath) {
	o.Truststore = &v
}

// GetCipherSuites returns the CipherSuites field value if set, zero value otherwise.
func (o *TlsContextMuleBody) GetCipherSuites() []string {
	if o == nil || IsNil(o.CipherSuites) {
		var ret []string
		return ret
	}
	return o.CipherSuites
}

// GetCipherSuitesOk returns a tuple with the CipherSuites field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TlsContextMuleBody) GetCipherSuitesOk() ([]string, bool) {
	if o == nil || IsNil(o.CipherSuites) {
		return nil, false
	}
	return o.CipherSuites, true
}

// HasCipherSuites returns a boolean if a field has been set.
func (o *TlsContextMuleBody) HasCipherSuites() bool {
	if o != nil && !IsNil(o.CipherSuites) {
		return true
	}

	return false
}

// SetCipherSuites gets a reference to the given []string and assigns it to the CipherSuites field.
func (o *TlsContextMuleBody) SetCipherSuites(v []string) {
	o.CipherSuites = v
}

// GetAcceptableTlsVersions returns the AcceptableTlsVersions field value if set, zero value otherwise.
func (o *TlsContextMuleBody) GetAcceptableTlsVersions() AcceptableTlsVersions {
	if o == nil || IsNil(o.AcceptableTlsVersions) {
		var ret AcceptableTlsVersions
		return ret
	}
	return *o.AcceptableTlsVersions
}

// GetAcceptableTlsVersionsOk returns a tuple with the AcceptableTlsVersions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TlsContextMuleBody) GetAcceptableTlsVersionsOk() (*AcceptableTlsVersions, bool) {
	if o == nil || IsNil(o.AcceptableTlsVersions) {
		return nil, false
	}
	return o.AcceptableTlsVersions, true
}

// HasAcceptableTlsVersions returns a boolean if a field has been set.
func (o *TlsContextMuleBody) HasAcceptableTlsVersions() bool {
	if o != nil && !IsNil(o.AcceptableTlsVersions) {
		return true
	}

	return false
}

// SetAcceptableTlsVersions gets a reference to the given AcceptableTlsVersions and assigns it to the AcceptableTlsVersions field.
func (o *TlsContextMuleBody) SetAcceptableTlsVersions(v AcceptableTlsVersions) {
	o.AcceptableTlsVersions = &v
}

// GetInsecure returns the Insecure field value if set, zero value otherwise.
func (o *TlsContextMuleBody) GetInsecure() bool {
	if o == nil || IsNil(o.Insecure) {
		var ret bool
		return ret
	}
	return *o.Insecure
}

// GetInsecureOk returns a tuple with the Insecure field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TlsContextMuleBody) GetInsecureOk() (*bool, bool) {
	if o == nil || IsNil(o.Insecure) {
		return nil, false
	}
	return o.Insecure, true
}

// HasInsecure returns a boolean if a field has been set.
func (o *TlsContextMuleBody) HasInsecure() bool {
	if o != nil && !IsNil(o.Insecure) {
		return true
	}

	return false
}

// SetInsecure gets a reference to the given bool and assigns it to the Insecure field.
func (o *TlsContextMuleBody) SetInsecure(v bool) {
	o.Insecure = &v
}

func (o TlsContextMuleBody) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TlsContextMuleBody) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.ExpirationDate) {
		toSerialize["expirationDate"] = o.ExpirationDate
	}
	if !IsNil(o.Target) {
		toSerialize["target"] = o.Target
	}
	if !IsNil(o.Keystore) {
		toSerialize["keystore"] = o.Keystore
	}
	if !IsNil(o.Truststore) {
		toSerialize["truststore"] = o.Truststore
	}
	if !IsNil(o.CipherSuites) {
		toSerialize["cipherSuites"] = o.CipherSuites
	}
	if !IsNil(o.AcceptableTlsVersions) {
		toSerialize["acceptableTlsVersions"] = o.AcceptableTlsVersions
	}
	if !IsNil(o.Insecure) {
		toSerialize["insecure"] = o.Insecure
	}
	return toSerialize, nil
}

type NullableTlsContextMuleBody struct {
	value *TlsContextMuleBody
	isSet bool
}

func (v NullableTlsContextMuleBody) Get() *TlsContextMuleBody {
	return v.value
}

func (v *NullableTlsContextMuleBody) Set(val *TlsContextMuleBody) {
	v.value = val
	v.isSet = true
}

func (v NullableTlsContextMuleBody) IsSet() bool {
	return v.isSet
}

func (v *NullableTlsContextMuleBody) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTlsContextMuleBody(val *TlsContextMuleBody) *NullableTlsContextMuleBody {
	return &NullableTlsContextMuleBody{value: val, isSet: true}
}

func (v NullableTlsContextMuleBody) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTlsContextMuleBody) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


