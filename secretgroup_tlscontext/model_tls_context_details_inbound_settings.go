/*
Secret Group TLS Context API

Secret Group TLS Context API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package secretgroup_tlscontext

import (
	"encoding/json"
)

// checks if the TlsContextDetailsInboundSettings type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TlsContextDetailsInboundSettings{}

// TlsContextDetailsInboundSettings Properties that are applicable only when the TLS context is used to secure inbound traffic.
type TlsContextDetailsInboundSettings struct {
	// flag that indicates whether the client certificate validation must be enforced.
	EnableClientCertValidation *bool `json:"enableClientCertValidation,omitempty"`
}

// NewTlsContextDetailsInboundSettings instantiates a new TlsContextDetailsInboundSettings object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTlsContextDetailsInboundSettings() *TlsContextDetailsInboundSettings {
	this := TlsContextDetailsInboundSettings{}
	return &this
}

// NewTlsContextDetailsInboundSettingsWithDefaults instantiates a new TlsContextDetailsInboundSettings object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTlsContextDetailsInboundSettingsWithDefaults() *TlsContextDetailsInboundSettings {
	this := TlsContextDetailsInboundSettings{}
	return &this
}

// GetEnableClientCertValidation returns the EnableClientCertValidation field value if set, zero value otherwise.
func (o *TlsContextDetailsInboundSettings) GetEnableClientCertValidation() bool {
	if o == nil || IsNil(o.EnableClientCertValidation) {
		var ret bool
		return ret
	}
	return *o.EnableClientCertValidation
}

// GetEnableClientCertValidationOk returns a tuple with the EnableClientCertValidation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TlsContextDetailsInboundSettings) GetEnableClientCertValidationOk() (*bool, bool) {
	if o == nil || IsNil(o.EnableClientCertValidation) {
		return nil, false
	}
	return o.EnableClientCertValidation, true
}

// HasEnableClientCertValidation returns a boolean if a field has been set.
func (o *TlsContextDetailsInboundSettings) HasEnableClientCertValidation() bool {
	if o != nil && !IsNil(o.EnableClientCertValidation) {
		return true
	}

	return false
}

// SetEnableClientCertValidation gets a reference to the given bool and assigns it to the EnableClientCertValidation field.
func (o *TlsContextDetailsInboundSettings) SetEnableClientCertValidation(v bool) {
	o.EnableClientCertValidation = &v
}

func (o TlsContextDetailsInboundSettings) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TlsContextDetailsInboundSettings) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.EnableClientCertValidation) {
		toSerialize["enableClientCertValidation"] = o.EnableClientCertValidation
	}
	return toSerialize, nil
}

type NullableTlsContextDetailsInboundSettings struct {
	value *TlsContextDetailsInboundSettings
	isSet bool
}

func (v NullableTlsContextDetailsInboundSettings) Get() *TlsContextDetailsInboundSettings {
	return v.value
}

func (v *NullableTlsContextDetailsInboundSettings) Set(val *TlsContextDetailsInboundSettings) {
	v.value = val
	v.isSet = true
}

func (v NullableTlsContextDetailsInboundSettings) IsSet() bool {
	return v.isSet
}

func (v *NullableTlsContextDetailsInboundSettings) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTlsContextDetailsInboundSettings(val *TlsContextDetailsInboundSettings) *NullableTlsContextDetailsInboundSettings {
	return &NullableTlsContextDetailsInboundSettings{value: val, isSet: true}
}

func (v NullableTlsContextDetailsInboundSettings) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTlsContextDetailsInboundSettings) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


