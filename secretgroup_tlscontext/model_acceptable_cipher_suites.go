/*
Secret Group TLS Context API

Secret Group TLS Context API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package secretgroup_tlscontext

import (
	"encoding/json"
)

// checks if the AcceptableCipherSuites type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AcceptableCipherSuites{}

// AcceptableCipherSuites List of accepted cipher suites by Security Fabric target, at least one should be set to true. If you are are not using the defaults and select individual ciphers, please select ciphers that match the configured keystore to ensure that TLS can setup a connection. For a keystore with an RSA key (the most common type), select ciphers which contain the string RSA (there are some exceptions). If using ECC ciphers, select ciphers which contain the string \"ECDSA\". TLS standards and documentation can be consulted for more background information. 
type AcceptableCipherSuites struct {
	// Allowed to be enabled only if tlsV1Dot2 is enabled.
	Aes128GcmSha256 *bool `json:"aes128GcmSha256,omitempty"`
	// Allowed to be enabled only if tlsV1Dot2 is enabled.
	Aes128Sha256 *bool `json:"aes128Sha256,omitempty"`
	// Allowed to be enabled only if tlsV1Dot2 is enabled.
	Aes256GcmSha384 *bool `json:"aes256GcmSha384,omitempty"`
	// Allowed to be enabled only if tlsV1Dot2 is enabled.
	Aes256Sha256 *bool `json:"aes256Sha256,omitempty"`
	// Allowed to be enabled only if tlsV1Dot2 is enabled.
	DheRsaAes128GcmSha256 *bool `json:"dheRsaAes128GcmSha256,omitempty"`
	// Allowed to be enabled only if tlsV1Dot2 is enabled.
	DheRsaAes128Sha256 *bool `json:"dheRsaAes128Sha256,omitempty"`
	// Allowed to be enabled only if tlsV1Dot2 is enabled.
	DheRsaAes256GcmSha384 *bool `json:"dheRsaAes256GcmSha384,omitempty"`
	// Allowed to be enabled only if tlsV1Dot2 is enabled.
	DheRsaAes256Sha256 *bool `json:"dheRsaAes256Sha256,omitempty"`
	// Allowed to be enabled only if tlsV1Dot2 is enabled.
	EcdheEcdsaAes128GcmSha256 *bool `json:"ecdheEcdsaAes128GcmSha256,omitempty"`
	// Allowed to be enabled only if tlsV1Dot2 is enabled.
	EcdheEcdsaAes128Sha1 *bool `json:"ecdheEcdsaAes128Sha1,omitempty"`
	// Allowed to be enabled only if tlsV1Dot2 is enabled.
	EcdheEcdsaAes256GcmSha384 *bool `json:"ecdheEcdsaAes256GcmSha384,omitempty"`
	// Allowed to be enabled only if tlsV1Dot2 is enabled.
	EcdheEcdsaAes256Sha1 *bool `json:"ecdheEcdsaAes256Sha1,omitempty"`
	// Allowed to be enabled only if tlsV1Dot2 is enabled.
	EcdheRsaAes128GcmSha256 *bool `json:"ecdheRsaAes128GcmSha256,omitempty"`
	// Allowed to be enabled only if tlsV1Dot2 is enabled.
	EcdheRsaAes128Sha1 *bool `json:"ecdheRsaAes128Sha1,omitempty"`
	// Allowed to be enabled only if tlsV1Dot2 is enabled.
	EcdheRsaAes256GcmSha384 *bool `json:"ecdheRsaAes256GcmSha384,omitempty"`
	// Allowed to be enabled only if tlsV1Dot2 is enabled.
	EcdheRsaAes256Sha1 *bool `json:"ecdheRsaAes256Sha1,omitempty"`
	// Allowed to be enabled only if tlsV1Dot2 is enabled.
	EcdheEcdsaChacha20Poly1305 *bool `json:"ecdheEcdsaChacha20Poly1305,omitempty"`
	// Allowed to be enabled only if tlsV1Dot2 is enabled.
	EcdheRsaChacha20Poly1305 *bool `json:"ecdheRsaChacha20Poly1305,omitempty"`
	// Allowed to be enabled only if tlsV1Dot2 is enabled.
	DheRsaChacha20Poly1305 *bool `json:"dheRsaChacha20Poly1305,omitempty"`
	// Allowed to be enabled only if tlsV1Dot2 is enabled.
	TlsAes256GcmSha384 *bool `json:"tlsAes256GcmSha384,omitempty"`
	// Allowed to be enabled only if tlsV1Dot2 is enabled.
	TlsChacha20Poly1305Sha256 *bool `json:"tlsChacha20Poly1305Sha256,omitempty"`
	// Allowed to be enabled only if tlsV1Dot2 is enabled.
	TlsAes128GcmSha256 *bool `json:"tlsAes128GcmSha256,omitempty"`
}

// NewAcceptableCipherSuites instantiates a new AcceptableCipherSuites object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAcceptableCipherSuites() *AcceptableCipherSuites {
	this := AcceptableCipherSuites{}
	var aes128GcmSha256 bool = false
	this.Aes128GcmSha256 = &aes128GcmSha256
	var aes128Sha256 bool = false
	this.Aes128Sha256 = &aes128Sha256
	var aes256GcmSha384 bool = false
	this.Aes256GcmSha384 = &aes256GcmSha384
	var aes256Sha256 bool = false
	this.Aes256Sha256 = &aes256Sha256
	var dheRsaAes128GcmSha256 bool = false
	this.DheRsaAes128GcmSha256 = &dheRsaAes128GcmSha256
	var dheRsaAes128Sha256 bool = false
	this.DheRsaAes128Sha256 = &dheRsaAes128Sha256
	var dheRsaAes256GcmSha384 bool = false
	this.DheRsaAes256GcmSha384 = &dheRsaAes256GcmSha384
	var dheRsaAes256Sha256 bool = false
	this.DheRsaAes256Sha256 = &dheRsaAes256Sha256
	var ecdheEcdsaAes128GcmSha256 bool = false
	this.EcdheEcdsaAes128GcmSha256 = &ecdheEcdsaAes128GcmSha256
	var ecdheEcdsaAes128Sha1 bool = false
	this.EcdheEcdsaAes128Sha1 = &ecdheEcdsaAes128Sha1
	var ecdheEcdsaAes256GcmSha384 bool = false
	this.EcdheEcdsaAes256GcmSha384 = &ecdheEcdsaAes256GcmSha384
	var ecdheEcdsaAes256Sha1 bool = false
	this.EcdheEcdsaAes256Sha1 = &ecdheEcdsaAes256Sha1
	var ecdheRsaAes128GcmSha256 bool = false
	this.EcdheRsaAes128GcmSha256 = &ecdheRsaAes128GcmSha256
	var ecdheRsaAes128Sha1 bool = false
	this.EcdheRsaAes128Sha1 = &ecdheRsaAes128Sha1
	var ecdheRsaAes256GcmSha384 bool = false
	this.EcdheRsaAes256GcmSha384 = &ecdheRsaAes256GcmSha384
	var ecdheRsaAes256Sha1 bool = false
	this.EcdheRsaAes256Sha1 = &ecdheRsaAes256Sha1
	var ecdheEcdsaChacha20Poly1305 bool = false
	this.EcdheEcdsaChacha20Poly1305 = &ecdheEcdsaChacha20Poly1305
	var ecdheRsaChacha20Poly1305 bool = false
	this.EcdheRsaChacha20Poly1305 = &ecdheRsaChacha20Poly1305
	var dheRsaChacha20Poly1305 bool = false
	this.DheRsaChacha20Poly1305 = &dheRsaChacha20Poly1305
	var tlsAes256GcmSha384 bool = false
	this.TlsAes256GcmSha384 = &tlsAes256GcmSha384
	var tlsChacha20Poly1305Sha256 bool = false
	this.TlsChacha20Poly1305Sha256 = &tlsChacha20Poly1305Sha256
	var tlsAes128GcmSha256 bool = false
	this.TlsAes128GcmSha256 = &tlsAes128GcmSha256
	return &this
}

// NewAcceptableCipherSuitesWithDefaults instantiates a new AcceptableCipherSuites object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAcceptableCipherSuitesWithDefaults() *AcceptableCipherSuites {
	this := AcceptableCipherSuites{}
	var aes128GcmSha256 bool = false
	this.Aes128GcmSha256 = &aes128GcmSha256
	var aes128Sha256 bool = false
	this.Aes128Sha256 = &aes128Sha256
	var aes256GcmSha384 bool = false
	this.Aes256GcmSha384 = &aes256GcmSha384
	var aes256Sha256 bool = false
	this.Aes256Sha256 = &aes256Sha256
	var dheRsaAes128GcmSha256 bool = false
	this.DheRsaAes128GcmSha256 = &dheRsaAes128GcmSha256
	var dheRsaAes128Sha256 bool = false
	this.DheRsaAes128Sha256 = &dheRsaAes128Sha256
	var dheRsaAes256GcmSha384 bool = false
	this.DheRsaAes256GcmSha384 = &dheRsaAes256GcmSha384
	var dheRsaAes256Sha256 bool = false
	this.DheRsaAes256Sha256 = &dheRsaAes256Sha256
	var ecdheEcdsaAes128GcmSha256 bool = false
	this.EcdheEcdsaAes128GcmSha256 = &ecdheEcdsaAes128GcmSha256
	var ecdheEcdsaAes128Sha1 bool = false
	this.EcdheEcdsaAes128Sha1 = &ecdheEcdsaAes128Sha1
	var ecdheEcdsaAes256GcmSha384 bool = false
	this.EcdheEcdsaAes256GcmSha384 = &ecdheEcdsaAes256GcmSha384
	var ecdheEcdsaAes256Sha1 bool = false
	this.EcdheEcdsaAes256Sha1 = &ecdheEcdsaAes256Sha1
	var ecdheRsaAes128GcmSha256 bool = false
	this.EcdheRsaAes128GcmSha256 = &ecdheRsaAes128GcmSha256
	var ecdheRsaAes128Sha1 bool = false
	this.EcdheRsaAes128Sha1 = &ecdheRsaAes128Sha1
	var ecdheRsaAes256GcmSha384 bool = false
	this.EcdheRsaAes256GcmSha384 = &ecdheRsaAes256GcmSha384
	var ecdheRsaAes256Sha1 bool = false
	this.EcdheRsaAes256Sha1 = &ecdheRsaAes256Sha1
	var ecdheEcdsaChacha20Poly1305 bool = false
	this.EcdheEcdsaChacha20Poly1305 = &ecdheEcdsaChacha20Poly1305
	var ecdheRsaChacha20Poly1305 bool = false
	this.EcdheRsaChacha20Poly1305 = &ecdheRsaChacha20Poly1305
	var dheRsaChacha20Poly1305 bool = false
	this.DheRsaChacha20Poly1305 = &dheRsaChacha20Poly1305
	var tlsAes256GcmSha384 bool = false
	this.TlsAes256GcmSha384 = &tlsAes256GcmSha384
	var tlsChacha20Poly1305Sha256 bool = false
	this.TlsChacha20Poly1305Sha256 = &tlsChacha20Poly1305Sha256
	var tlsAes128GcmSha256 bool = false
	this.TlsAes128GcmSha256 = &tlsAes128GcmSha256
	return &this
}

// GetAes128GcmSha256 returns the Aes128GcmSha256 field value if set, zero value otherwise.
func (o *AcceptableCipherSuites) GetAes128GcmSha256() bool {
	if o == nil || IsNil(o.Aes128GcmSha256) {
		var ret bool
		return ret
	}
	return *o.Aes128GcmSha256
}

// GetAes128GcmSha256Ok returns a tuple with the Aes128GcmSha256 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AcceptableCipherSuites) GetAes128GcmSha256Ok() (*bool, bool) {
	if o == nil || IsNil(o.Aes128GcmSha256) {
		return nil, false
	}
	return o.Aes128GcmSha256, true
}

// HasAes128GcmSha256 returns a boolean if a field has been set.
func (o *AcceptableCipherSuites) HasAes128GcmSha256() bool {
	if o != nil && !IsNil(o.Aes128GcmSha256) {
		return true
	}

	return false
}

// SetAes128GcmSha256 gets a reference to the given bool and assigns it to the Aes128GcmSha256 field.
func (o *AcceptableCipherSuites) SetAes128GcmSha256(v bool) {
	o.Aes128GcmSha256 = &v
}

// GetAes128Sha256 returns the Aes128Sha256 field value if set, zero value otherwise.
func (o *AcceptableCipherSuites) GetAes128Sha256() bool {
	if o == nil || IsNil(o.Aes128Sha256) {
		var ret bool
		return ret
	}
	return *o.Aes128Sha256
}

// GetAes128Sha256Ok returns a tuple with the Aes128Sha256 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AcceptableCipherSuites) GetAes128Sha256Ok() (*bool, bool) {
	if o == nil || IsNil(o.Aes128Sha256) {
		return nil, false
	}
	return o.Aes128Sha256, true
}

// HasAes128Sha256 returns a boolean if a field has been set.
func (o *AcceptableCipherSuites) HasAes128Sha256() bool {
	if o != nil && !IsNil(o.Aes128Sha256) {
		return true
	}

	return false
}

// SetAes128Sha256 gets a reference to the given bool and assigns it to the Aes128Sha256 field.
func (o *AcceptableCipherSuites) SetAes128Sha256(v bool) {
	o.Aes128Sha256 = &v
}

// GetAes256GcmSha384 returns the Aes256GcmSha384 field value if set, zero value otherwise.
func (o *AcceptableCipherSuites) GetAes256GcmSha384() bool {
	if o == nil || IsNil(o.Aes256GcmSha384) {
		var ret bool
		return ret
	}
	return *o.Aes256GcmSha384
}

// GetAes256GcmSha384Ok returns a tuple with the Aes256GcmSha384 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AcceptableCipherSuites) GetAes256GcmSha384Ok() (*bool, bool) {
	if o == nil || IsNil(o.Aes256GcmSha384) {
		return nil, false
	}
	return o.Aes256GcmSha384, true
}

// HasAes256GcmSha384 returns a boolean if a field has been set.
func (o *AcceptableCipherSuites) HasAes256GcmSha384() bool {
	if o != nil && !IsNil(o.Aes256GcmSha384) {
		return true
	}

	return false
}

// SetAes256GcmSha384 gets a reference to the given bool and assigns it to the Aes256GcmSha384 field.
func (o *AcceptableCipherSuites) SetAes256GcmSha384(v bool) {
	o.Aes256GcmSha384 = &v
}

// GetAes256Sha256 returns the Aes256Sha256 field value if set, zero value otherwise.
func (o *AcceptableCipherSuites) GetAes256Sha256() bool {
	if o == nil || IsNil(o.Aes256Sha256) {
		var ret bool
		return ret
	}
	return *o.Aes256Sha256
}

// GetAes256Sha256Ok returns a tuple with the Aes256Sha256 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AcceptableCipherSuites) GetAes256Sha256Ok() (*bool, bool) {
	if o == nil || IsNil(o.Aes256Sha256) {
		return nil, false
	}
	return o.Aes256Sha256, true
}

// HasAes256Sha256 returns a boolean if a field has been set.
func (o *AcceptableCipherSuites) HasAes256Sha256() bool {
	if o != nil && !IsNil(o.Aes256Sha256) {
		return true
	}

	return false
}

// SetAes256Sha256 gets a reference to the given bool and assigns it to the Aes256Sha256 field.
func (o *AcceptableCipherSuites) SetAes256Sha256(v bool) {
	o.Aes256Sha256 = &v
}

// GetDheRsaAes128GcmSha256 returns the DheRsaAes128GcmSha256 field value if set, zero value otherwise.
func (o *AcceptableCipherSuites) GetDheRsaAes128GcmSha256() bool {
	if o == nil || IsNil(o.DheRsaAes128GcmSha256) {
		var ret bool
		return ret
	}
	return *o.DheRsaAes128GcmSha256
}

// GetDheRsaAes128GcmSha256Ok returns a tuple with the DheRsaAes128GcmSha256 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AcceptableCipherSuites) GetDheRsaAes128GcmSha256Ok() (*bool, bool) {
	if o == nil || IsNil(o.DheRsaAes128GcmSha256) {
		return nil, false
	}
	return o.DheRsaAes128GcmSha256, true
}

// HasDheRsaAes128GcmSha256 returns a boolean if a field has been set.
func (o *AcceptableCipherSuites) HasDheRsaAes128GcmSha256() bool {
	if o != nil && !IsNil(o.DheRsaAes128GcmSha256) {
		return true
	}

	return false
}

// SetDheRsaAes128GcmSha256 gets a reference to the given bool and assigns it to the DheRsaAes128GcmSha256 field.
func (o *AcceptableCipherSuites) SetDheRsaAes128GcmSha256(v bool) {
	o.DheRsaAes128GcmSha256 = &v
}

// GetDheRsaAes128Sha256 returns the DheRsaAes128Sha256 field value if set, zero value otherwise.
func (o *AcceptableCipherSuites) GetDheRsaAes128Sha256() bool {
	if o == nil || IsNil(o.DheRsaAes128Sha256) {
		var ret bool
		return ret
	}
	return *o.DheRsaAes128Sha256
}

// GetDheRsaAes128Sha256Ok returns a tuple with the DheRsaAes128Sha256 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AcceptableCipherSuites) GetDheRsaAes128Sha256Ok() (*bool, bool) {
	if o == nil || IsNil(o.DheRsaAes128Sha256) {
		return nil, false
	}
	return o.DheRsaAes128Sha256, true
}

// HasDheRsaAes128Sha256 returns a boolean if a field has been set.
func (o *AcceptableCipherSuites) HasDheRsaAes128Sha256() bool {
	if o != nil && !IsNil(o.DheRsaAes128Sha256) {
		return true
	}

	return false
}

// SetDheRsaAes128Sha256 gets a reference to the given bool and assigns it to the DheRsaAes128Sha256 field.
func (o *AcceptableCipherSuites) SetDheRsaAes128Sha256(v bool) {
	o.DheRsaAes128Sha256 = &v
}

// GetDheRsaAes256GcmSha384 returns the DheRsaAes256GcmSha384 field value if set, zero value otherwise.
func (o *AcceptableCipherSuites) GetDheRsaAes256GcmSha384() bool {
	if o == nil || IsNil(o.DheRsaAes256GcmSha384) {
		var ret bool
		return ret
	}
	return *o.DheRsaAes256GcmSha384
}

// GetDheRsaAes256GcmSha384Ok returns a tuple with the DheRsaAes256GcmSha384 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AcceptableCipherSuites) GetDheRsaAes256GcmSha384Ok() (*bool, bool) {
	if o == nil || IsNil(o.DheRsaAes256GcmSha384) {
		return nil, false
	}
	return o.DheRsaAes256GcmSha384, true
}

// HasDheRsaAes256GcmSha384 returns a boolean if a field has been set.
func (o *AcceptableCipherSuites) HasDheRsaAes256GcmSha384() bool {
	if o != nil && !IsNil(o.DheRsaAes256GcmSha384) {
		return true
	}

	return false
}

// SetDheRsaAes256GcmSha384 gets a reference to the given bool and assigns it to the DheRsaAes256GcmSha384 field.
func (o *AcceptableCipherSuites) SetDheRsaAes256GcmSha384(v bool) {
	o.DheRsaAes256GcmSha384 = &v
}

// GetDheRsaAes256Sha256 returns the DheRsaAes256Sha256 field value if set, zero value otherwise.
func (o *AcceptableCipherSuites) GetDheRsaAes256Sha256() bool {
	if o == nil || IsNil(o.DheRsaAes256Sha256) {
		var ret bool
		return ret
	}
	return *o.DheRsaAes256Sha256
}

// GetDheRsaAes256Sha256Ok returns a tuple with the DheRsaAes256Sha256 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AcceptableCipherSuites) GetDheRsaAes256Sha256Ok() (*bool, bool) {
	if o == nil || IsNil(o.DheRsaAes256Sha256) {
		return nil, false
	}
	return o.DheRsaAes256Sha256, true
}

// HasDheRsaAes256Sha256 returns a boolean if a field has been set.
func (o *AcceptableCipherSuites) HasDheRsaAes256Sha256() bool {
	if o != nil && !IsNil(o.DheRsaAes256Sha256) {
		return true
	}

	return false
}

// SetDheRsaAes256Sha256 gets a reference to the given bool and assigns it to the DheRsaAes256Sha256 field.
func (o *AcceptableCipherSuites) SetDheRsaAes256Sha256(v bool) {
	o.DheRsaAes256Sha256 = &v
}

// GetEcdheEcdsaAes128GcmSha256 returns the EcdheEcdsaAes128GcmSha256 field value if set, zero value otherwise.
func (o *AcceptableCipherSuites) GetEcdheEcdsaAes128GcmSha256() bool {
	if o == nil || IsNil(o.EcdheEcdsaAes128GcmSha256) {
		var ret bool
		return ret
	}
	return *o.EcdheEcdsaAes128GcmSha256
}

// GetEcdheEcdsaAes128GcmSha256Ok returns a tuple with the EcdheEcdsaAes128GcmSha256 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AcceptableCipherSuites) GetEcdheEcdsaAes128GcmSha256Ok() (*bool, bool) {
	if o == nil || IsNil(o.EcdheEcdsaAes128GcmSha256) {
		return nil, false
	}
	return o.EcdheEcdsaAes128GcmSha256, true
}

// HasEcdheEcdsaAes128GcmSha256 returns a boolean if a field has been set.
func (o *AcceptableCipherSuites) HasEcdheEcdsaAes128GcmSha256() bool {
	if o != nil && !IsNil(o.EcdheEcdsaAes128GcmSha256) {
		return true
	}

	return false
}

// SetEcdheEcdsaAes128GcmSha256 gets a reference to the given bool and assigns it to the EcdheEcdsaAes128GcmSha256 field.
func (o *AcceptableCipherSuites) SetEcdheEcdsaAes128GcmSha256(v bool) {
	o.EcdheEcdsaAes128GcmSha256 = &v
}

// GetEcdheEcdsaAes128Sha1 returns the EcdheEcdsaAes128Sha1 field value if set, zero value otherwise.
func (o *AcceptableCipherSuites) GetEcdheEcdsaAes128Sha1() bool {
	if o == nil || IsNil(o.EcdheEcdsaAes128Sha1) {
		var ret bool
		return ret
	}
	return *o.EcdheEcdsaAes128Sha1
}

// GetEcdheEcdsaAes128Sha1Ok returns a tuple with the EcdheEcdsaAes128Sha1 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AcceptableCipherSuites) GetEcdheEcdsaAes128Sha1Ok() (*bool, bool) {
	if o == nil || IsNil(o.EcdheEcdsaAes128Sha1) {
		return nil, false
	}
	return o.EcdheEcdsaAes128Sha1, true
}

// HasEcdheEcdsaAes128Sha1 returns a boolean if a field has been set.
func (o *AcceptableCipherSuites) HasEcdheEcdsaAes128Sha1() bool {
	if o != nil && !IsNil(o.EcdheEcdsaAes128Sha1) {
		return true
	}

	return false
}

// SetEcdheEcdsaAes128Sha1 gets a reference to the given bool and assigns it to the EcdheEcdsaAes128Sha1 field.
func (o *AcceptableCipherSuites) SetEcdheEcdsaAes128Sha1(v bool) {
	o.EcdheEcdsaAes128Sha1 = &v
}

// GetEcdheEcdsaAes256GcmSha384 returns the EcdheEcdsaAes256GcmSha384 field value if set, zero value otherwise.
func (o *AcceptableCipherSuites) GetEcdheEcdsaAes256GcmSha384() bool {
	if o == nil || IsNil(o.EcdheEcdsaAes256GcmSha384) {
		var ret bool
		return ret
	}
	return *o.EcdheEcdsaAes256GcmSha384
}

// GetEcdheEcdsaAes256GcmSha384Ok returns a tuple with the EcdheEcdsaAes256GcmSha384 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AcceptableCipherSuites) GetEcdheEcdsaAes256GcmSha384Ok() (*bool, bool) {
	if o == nil || IsNil(o.EcdheEcdsaAes256GcmSha384) {
		return nil, false
	}
	return o.EcdheEcdsaAes256GcmSha384, true
}

// HasEcdheEcdsaAes256GcmSha384 returns a boolean if a field has been set.
func (o *AcceptableCipherSuites) HasEcdheEcdsaAes256GcmSha384() bool {
	if o != nil && !IsNil(o.EcdheEcdsaAes256GcmSha384) {
		return true
	}

	return false
}

// SetEcdheEcdsaAes256GcmSha384 gets a reference to the given bool and assigns it to the EcdheEcdsaAes256GcmSha384 field.
func (o *AcceptableCipherSuites) SetEcdheEcdsaAes256GcmSha384(v bool) {
	o.EcdheEcdsaAes256GcmSha384 = &v
}

// GetEcdheEcdsaAes256Sha1 returns the EcdheEcdsaAes256Sha1 field value if set, zero value otherwise.
func (o *AcceptableCipherSuites) GetEcdheEcdsaAes256Sha1() bool {
	if o == nil || IsNil(o.EcdheEcdsaAes256Sha1) {
		var ret bool
		return ret
	}
	return *o.EcdheEcdsaAes256Sha1
}

// GetEcdheEcdsaAes256Sha1Ok returns a tuple with the EcdheEcdsaAes256Sha1 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AcceptableCipherSuites) GetEcdheEcdsaAes256Sha1Ok() (*bool, bool) {
	if o == nil || IsNil(o.EcdheEcdsaAes256Sha1) {
		return nil, false
	}
	return o.EcdheEcdsaAes256Sha1, true
}

// HasEcdheEcdsaAes256Sha1 returns a boolean if a field has been set.
func (o *AcceptableCipherSuites) HasEcdheEcdsaAes256Sha1() bool {
	if o != nil && !IsNil(o.EcdheEcdsaAes256Sha1) {
		return true
	}

	return false
}

// SetEcdheEcdsaAes256Sha1 gets a reference to the given bool and assigns it to the EcdheEcdsaAes256Sha1 field.
func (o *AcceptableCipherSuites) SetEcdheEcdsaAes256Sha1(v bool) {
	o.EcdheEcdsaAes256Sha1 = &v
}

// GetEcdheRsaAes128GcmSha256 returns the EcdheRsaAes128GcmSha256 field value if set, zero value otherwise.
func (o *AcceptableCipherSuites) GetEcdheRsaAes128GcmSha256() bool {
	if o == nil || IsNil(o.EcdheRsaAes128GcmSha256) {
		var ret bool
		return ret
	}
	return *o.EcdheRsaAes128GcmSha256
}

// GetEcdheRsaAes128GcmSha256Ok returns a tuple with the EcdheRsaAes128GcmSha256 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AcceptableCipherSuites) GetEcdheRsaAes128GcmSha256Ok() (*bool, bool) {
	if o == nil || IsNil(o.EcdheRsaAes128GcmSha256) {
		return nil, false
	}
	return o.EcdheRsaAes128GcmSha256, true
}

// HasEcdheRsaAes128GcmSha256 returns a boolean if a field has been set.
func (o *AcceptableCipherSuites) HasEcdheRsaAes128GcmSha256() bool {
	if o != nil && !IsNil(o.EcdheRsaAes128GcmSha256) {
		return true
	}

	return false
}

// SetEcdheRsaAes128GcmSha256 gets a reference to the given bool and assigns it to the EcdheRsaAes128GcmSha256 field.
func (o *AcceptableCipherSuites) SetEcdheRsaAes128GcmSha256(v bool) {
	o.EcdheRsaAes128GcmSha256 = &v
}

// GetEcdheRsaAes128Sha1 returns the EcdheRsaAes128Sha1 field value if set, zero value otherwise.
func (o *AcceptableCipherSuites) GetEcdheRsaAes128Sha1() bool {
	if o == nil || IsNil(o.EcdheRsaAes128Sha1) {
		var ret bool
		return ret
	}
	return *o.EcdheRsaAes128Sha1
}

// GetEcdheRsaAes128Sha1Ok returns a tuple with the EcdheRsaAes128Sha1 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AcceptableCipherSuites) GetEcdheRsaAes128Sha1Ok() (*bool, bool) {
	if o == nil || IsNil(o.EcdheRsaAes128Sha1) {
		return nil, false
	}
	return o.EcdheRsaAes128Sha1, true
}

// HasEcdheRsaAes128Sha1 returns a boolean if a field has been set.
func (o *AcceptableCipherSuites) HasEcdheRsaAes128Sha1() bool {
	if o != nil && !IsNil(o.EcdheRsaAes128Sha1) {
		return true
	}

	return false
}

// SetEcdheRsaAes128Sha1 gets a reference to the given bool and assigns it to the EcdheRsaAes128Sha1 field.
func (o *AcceptableCipherSuites) SetEcdheRsaAes128Sha1(v bool) {
	o.EcdheRsaAes128Sha1 = &v
}

// GetEcdheRsaAes256GcmSha384 returns the EcdheRsaAes256GcmSha384 field value if set, zero value otherwise.
func (o *AcceptableCipherSuites) GetEcdheRsaAes256GcmSha384() bool {
	if o == nil || IsNil(o.EcdheRsaAes256GcmSha384) {
		var ret bool
		return ret
	}
	return *o.EcdheRsaAes256GcmSha384
}

// GetEcdheRsaAes256GcmSha384Ok returns a tuple with the EcdheRsaAes256GcmSha384 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AcceptableCipherSuites) GetEcdheRsaAes256GcmSha384Ok() (*bool, bool) {
	if o == nil || IsNil(o.EcdheRsaAes256GcmSha384) {
		return nil, false
	}
	return o.EcdheRsaAes256GcmSha384, true
}

// HasEcdheRsaAes256GcmSha384 returns a boolean if a field has been set.
func (o *AcceptableCipherSuites) HasEcdheRsaAes256GcmSha384() bool {
	if o != nil && !IsNil(o.EcdheRsaAes256GcmSha384) {
		return true
	}

	return false
}

// SetEcdheRsaAes256GcmSha384 gets a reference to the given bool and assigns it to the EcdheRsaAes256GcmSha384 field.
func (o *AcceptableCipherSuites) SetEcdheRsaAes256GcmSha384(v bool) {
	o.EcdheRsaAes256GcmSha384 = &v
}

// GetEcdheRsaAes256Sha1 returns the EcdheRsaAes256Sha1 field value if set, zero value otherwise.
func (o *AcceptableCipherSuites) GetEcdheRsaAes256Sha1() bool {
	if o == nil || IsNil(o.EcdheRsaAes256Sha1) {
		var ret bool
		return ret
	}
	return *o.EcdheRsaAes256Sha1
}

// GetEcdheRsaAes256Sha1Ok returns a tuple with the EcdheRsaAes256Sha1 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AcceptableCipherSuites) GetEcdheRsaAes256Sha1Ok() (*bool, bool) {
	if o == nil || IsNil(o.EcdheRsaAes256Sha1) {
		return nil, false
	}
	return o.EcdheRsaAes256Sha1, true
}

// HasEcdheRsaAes256Sha1 returns a boolean if a field has been set.
func (o *AcceptableCipherSuites) HasEcdheRsaAes256Sha1() bool {
	if o != nil && !IsNil(o.EcdheRsaAes256Sha1) {
		return true
	}

	return false
}

// SetEcdheRsaAes256Sha1 gets a reference to the given bool and assigns it to the EcdheRsaAes256Sha1 field.
func (o *AcceptableCipherSuites) SetEcdheRsaAes256Sha1(v bool) {
	o.EcdheRsaAes256Sha1 = &v
}

// GetEcdheEcdsaChacha20Poly1305 returns the EcdheEcdsaChacha20Poly1305 field value if set, zero value otherwise.
func (o *AcceptableCipherSuites) GetEcdheEcdsaChacha20Poly1305() bool {
	if o == nil || IsNil(o.EcdheEcdsaChacha20Poly1305) {
		var ret bool
		return ret
	}
	return *o.EcdheEcdsaChacha20Poly1305
}

// GetEcdheEcdsaChacha20Poly1305Ok returns a tuple with the EcdheEcdsaChacha20Poly1305 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AcceptableCipherSuites) GetEcdheEcdsaChacha20Poly1305Ok() (*bool, bool) {
	if o == nil || IsNil(o.EcdheEcdsaChacha20Poly1305) {
		return nil, false
	}
	return o.EcdheEcdsaChacha20Poly1305, true
}

// HasEcdheEcdsaChacha20Poly1305 returns a boolean if a field has been set.
func (o *AcceptableCipherSuites) HasEcdheEcdsaChacha20Poly1305() bool {
	if o != nil && !IsNil(o.EcdheEcdsaChacha20Poly1305) {
		return true
	}

	return false
}

// SetEcdheEcdsaChacha20Poly1305 gets a reference to the given bool and assigns it to the EcdheEcdsaChacha20Poly1305 field.
func (o *AcceptableCipherSuites) SetEcdheEcdsaChacha20Poly1305(v bool) {
	o.EcdheEcdsaChacha20Poly1305 = &v
}

// GetEcdheRsaChacha20Poly1305 returns the EcdheRsaChacha20Poly1305 field value if set, zero value otherwise.
func (o *AcceptableCipherSuites) GetEcdheRsaChacha20Poly1305() bool {
	if o == nil || IsNil(o.EcdheRsaChacha20Poly1305) {
		var ret bool
		return ret
	}
	return *o.EcdheRsaChacha20Poly1305
}

// GetEcdheRsaChacha20Poly1305Ok returns a tuple with the EcdheRsaChacha20Poly1305 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AcceptableCipherSuites) GetEcdheRsaChacha20Poly1305Ok() (*bool, bool) {
	if o == nil || IsNil(o.EcdheRsaChacha20Poly1305) {
		return nil, false
	}
	return o.EcdheRsaChacha20Poly1305, true
}

// HasEcdheRsaChacha20Poly1305 returns a boolean if a field has been set.
func (o *AcceptableCipherSuites) HasEcdheRsaChacha20Poly1305() bool {
	if o != nil && !IsNil(o.EcdheRsaChacha20Poly1305) {
		return true
	}

	return false
}

// SetEcdheRsaChacha20Poly1305 gets a reference to the given bool and assigns it to the EcdheRsaChacha20Poly1305 field.
func (o *AcceptableCipherSuites) SetEcdheRsaChacha20Poly1305(v bool) {
	o.EcdheRsaChacha20Poly1305 = &v
}

// GetDheRsaChacha20Poly1305 returns the DheRsaChacha20Poly1305 field value if set, zero value otherwise.
func (o *AcceptableCipherSuites) GetDheRsaChacha20Poly1305() bool {
	if o == nil || IsNil(o.DheRsaChacha20Poly1305) {
		var ret bool
		return ret
	}
	return *o.DheRsaChacha20Poly1305
}

// GetDheRsaChacha20Poly1305Ok returns a tuple with the DheRsaChacha20Poly1305 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AcceptableCipherSuites) GetDheRsaChacha20Poly1305Ok() (*bool, bool) {
	if o == nil || IsNil(o.DheRsaChacha20Poly1305) {
		return nil, false
	}
	return o.DheRsaChacha20Poly1305, true
}

// HasDheRsaChacha20Poly1305 returns a boolean if a field has been set.
func (o *AcceptableCipherSuites) HasDheRsaChacha20Poly1305() bool {
	if o != nil && !IsNil(o.DheRsaChacha20Poly1305) {
		return true
	}

	return false
}

// SetDheRsaChacha20Poly1305 gets a reference to the given bool and assigns it to the DheRsaChacha20Poly1305 field.
func (o *AcceptableCipherSuites) SetDheRsaChacha20Poly1305(v bool) {
	o.DheRsaChacha20Poly1305 = &v
}

// GetTlsAes256GcmSha384 returns the TlsAes256GcmSha384 field value if set, zero value otherwise.
func (o *AcceptableCipherSuites) GetTlsAes256GcmSha384() bool {
	if o == nil || IsNil(o.TlsAes256GcmSha384) {
		var ret bool
		return ret
	}
	return *o.TlsAes256GcmSha384
}

// GetTlsAes256GcmSha384Ok returns a tuple with the TlsAes256GcmSha384 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AcceptableCipherSuites) GetTlsAes256GcmSha384Ok() (*bool, bool) {
	if o == nil || IsNil(o.TlsAes256GcmSha384) {
		return nil, false
	}
	return o.TlsAes256GcmSha384, true
}

// HasTlsAes256GcmSha384 returns a boolean if a field has been set.
func (o *AcceptableCipherSuites) HasTlsAes256GcmSha384() bool {
	if o != nil && !IsNil(o.TlsAes256GcmSha384) {
		return true
	}

	return false
}

// SetTlsAes256GcmSha384 gets a reference to the given bool and assigns it to the TlsAes256GcmSha384 field.
func (o *AcceptableCipherSuites) SetTlsAes256GcmSha384(v bool) {
	o.TlsAes256GcmSha384 = &v
}

// GetTlsChacha20Poly1305Sha256 returns the TlsChacha20Poly1305Sha256 field value if set, zero value otherwise.
func (o *AcceptableCipherSuites) GetTlsChacha20Poly1305Sha256() bool {
	if o == nil || IsNil(o.TlsChacha20Poly1305Sha256) {
		var ret bool
		return ret
	}
	return *o.TlsChacha20Poly1305Sha256
}

// GetTlsChacha20Poly1305Sha256Ok returns a tuple with the TlsChacha20Poly1305Sha256 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AcceptableCipherSuites) GetTlsChacha20Poly1305Sha256Ok() (*bool, bool) {
	if o == nil || IsNil(o.TlsChacha20Poly1305Sha256) {
		return nil, false
	}
	return o.TlsChacha20Poly1305Sha256, true
}

// HasTlsChacha20Poly1305Sha256 returns a boolean if a field has been set.
func (o *AcceptableCipherSuites) HasTlsChacha20Poly1305Sha256() bool {
	if o != nil && !IsNil(o.TlsChacha20Poly1305Sha256) {
		return true
	}

	return false
}

// SetTlsChacha20Poly1305Sha256 gets a reference to the given bool and assigns it to the TlsChacha20Poly1305Sha256 field.
func (o *AcceptableCipherSuites) SetTlsChacha20Poly1305Sha256(v bool) {
	o.TlsChacha20Poly1305Sha256 = &v
}

// GetTlsAes128GcmSha256 returns the TlsAes128GcmSha256 field value if set, zero value otherwise.
func (o *AcceptableCipherSuites) GetTlsAes128GcmSha256() bool {
	if o == nil || IsNil(o.TlsAes128GcmSha256) {
		var ret bool
		return ret
	}
	return *o.TlsAes128GcmSha256
}

// GetTlsAes128GcmSha256Ok returns a tuple with the TlsAes128GcmSha256 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AcceptableCipherSuites) GetTlsAes128GcmSha256Ok() (*bool, bool) {
	if o == nil || IsNil(o.TlsAes128GcmSha256) {
		return nil, false
	}
	return o.TlsAes128GcmSha256, true
}

// HasTlsAes128GcmSha256 returns a boolean if a field has been set.
func (o *AcceptableCipherSuites) HasTlsAes128GcmSha256() bool {
	if o != nil && !IsNil(o.TlsAes128GcmSha256) {
		return true
	}

	return false
}

// SetTlsAes128GcmSha256 gets a reference to the given bool and assigns it to the TlsAes128GcmSha256 field.
func (o *AcceptableCipherSuites) SetTlsAes128GcmSha256(v bool) {
	o.TlsAes128GcmSha256 = &v
}

func (o AcceptableCipherSuites) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AcceptableCipherSuites) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Aes128GcmSha256) {
		toSerialize["aes128GcmSha256"] = o.Aes128GcmSha256
	}
	if !IsNil(o.Aes128Sha256) {
		toSerialize["aes128Sha256"] = o.Aes128Sha256
	}
	if !IsNil(o.Aes256GcmSha384) {
		toSerialize["aes256GcmSha384"] = o.Aes256GcmSha384
	}
	if !IsNil(o.Aes256Sha256) {
		toSerialize["aes256Sha256"] = o.Aes256Sha256
	}
	if !IsNil(o.DheRsaAes128GcmSha256) {
		toSerialize["dheRsaAes128GcmSha256"] = o.DheRsaAes128GcmSha256
	}
	if !IsNil(o.DheRsaAes128Sha256) {
		toSerialize["dheRsaAes128Sha256"] = o.DheRsaAes128Sha256
	}
	if !IsNil(o.DheRsaAes256GcmSha384) {
		toSerialize["dheRsaAes256GcmSha384"] = o.DheRsaAes256GcmSha384
	}
	if !IsNil(o.DheRsaAes256Sha256) {
		toSerialize["dheRsaAes256Sha256"] = o.DheRsaAes256Sha256
	}
	if !IsNil(o.EcdheEcdsaAes128GcmSha256) {
		toSerialize["ecdheEcdsaAes128GcmSha256"] = o.EcdheEcdsaAes128GcmSha256
	}
	if !IsNil(o.EcdheEcdsaAes128Sha1) {
		toSerialize["ecdheEcdsaAes128Sha1"] = o.EcdheEcdsaAes128Sha1
	}
	if !IsNil(o.EcdheEcdsaAes256GcmSha384) {
		toSerialize["ecdheEcdsaAes256GcmSha384"] = o.EcdheEcdsaAes256GcmSha384
	}
	if !IsNil(o.EcdheEcdsaAes256Sha1) {
		toSerialize["ecdheEcdsaAes256Sha1"] = o.EcdheEcdsaAes256Sha1
	}
	if !IsNil(o.EcdheRsaAes128GcmSha256) {
		toSerialize["ecdheRsaAes128GcmSha256"] = o.EcdheRsaAes128GcmSha256
	}
	if !IsNil(o.EcdheRsaAes128Sha1) {
		toSerialize["ecdheRsaAes128Sha1"] = o.EcdheRsaAes128Sha1
	}
	if !IsNil(o.EcdheRsaAes256GcmSha384) {
		toSerialize["ecdheRsaAes256GcmSha384"] = o.EcdheRsaAes256GcmSha384
	}
	if !IsNil(o.EcdheRsaAes256Sha1) {
		toSerialize["ecdheRsaAes256Sha1"] = o.EcdheRsaAes256Sha1
	}
	if !IsNil(o.EcdheEcdsaChacha20Poly1305) {
		toSerialize["ecdheEcdsaChacha20Poly1305"] = o.EcdheEcdsaChacha20Poly1305
	}
	if !IsNil(o.EcdheRsaChacha20Poly1305) {
		toSerialize["ecdheRsaChacha20Poly1305"] = o.EcdheRsaChacha20Poly1305
	}
	if !IsNil(o.DheRsaChacha20Poly1305) {
		toSerialize["dheRsaChacha20Poly1305"] = o.DheRsaChacha20Poly1305
	}
	if !IsNil(o.TlsAes256GcmSha384) {
		toSerialize["tlsAes256GcmSha384"] = o.TlsAes256GcmSha384
	}
	if !IsNil(o.TlsChacha20Poly1305Sha256) {
		toSerialize["tlsChacha20Poly1305Sha256"] = o.TlsChacha20Poly1305Sha256
	}
	if !IsNil(o.TlsAes128GcmSha256) {
		toSerialize["tlsAes128GcmSha256"] = o.TlsAes128GcmSha256
	}
	return toSerialize, nil
}

type NullableAcceptableCipherSuites struct {
	value *AcceptableCipherSuites
	isSet bool
}

func (v NullableAcceptableCipherSuites) Get() *AcceptableCipherSuites {
	return v.value
}

func (v *NullableAcceptableCipherSuites) Set(val *AcceptableCipherSuites) {
	v.value = val
	v.isSet = true
}

func (v NullableAcceptableCipherSuites) IsSet() bool {
	return v.isSet
}

func (v *NullableAcceptableCipherSuites) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAcceptableCipherSuites(val *AcceptableCipherSuites) *NullableAcceptableCipherSuites {
	return &NullableAcceptableCipherSuites{value: val, isSet: true}
}

func (v NullableAcceptableCipherSuites) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAcceptableCipherSuites) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


