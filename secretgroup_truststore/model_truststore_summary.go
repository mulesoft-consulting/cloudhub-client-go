/*
Secret Group Truststore API

Secret Group Truststore API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package secretgroup_truststore

import (
	"encoding/json"
)

// checks if the TruststoreSummary type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TruststoreSummary{}

// TruststoreSummary struct for TruststoreSummary
type TruststoreSummary struct {
	Name *string `json:"name,omitempty"`
	Meta *Meta `json:"meta,omitempty"`
	ExpirationDate *string `json:"expirationDate,omitempty"`
	Type *string `json:"type,omitempty"`
}

// NewTruststoreSummary instantiates a new TruststoreSummary object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTruststoreSummary() *TruststoreSummary {
	this := TruststoreSummary{}
	return &this
}

// NewTruststoreSummaryWithDefaults instantiates a new TruststoreSummary object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTruststoreSummaryWithDefaults() *TruststoreSummary {
	this := TruststoreSummary{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *TruststoreSummary) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TruststoreSummary) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *TruststoreSummary) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *TruststoreSummary) SetName(v string) {
	o.Name = &v
}

// GetMeta returns the Meta field value if set, zero value otherwise.
func (o *TruststoreSummary) GetMeta() Meta {
	if o == nil || IsNil(o.Meta) {
		var ret Meta
		return ret
	}
	return *o.Meta
}

// GetMetaOk returns a tuple with the Meta field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TruststoreSummary) GetMetaOk() (*Meta, bool) {
	if o == nil || IsNil(o.Meta) {
		return nil, false
	}
	return o.Meta, true
}

// HasMeta returns a boolean if a field has been set.
func (o *TruststoreSummary) HasMeta() bool {
	if o != nil && !IsNil(o.Meta) {
		return true
	}

	return false
}

// SetMeta gets a reference to the given Meta and assigns it to the Meta field.
func (o *TruststoreSummary) SetMeta(v Meta) {
	o.Meta = &v
}

// GetExpirationDate returns the ExpirationDate field value if set, zero value otherwise.
func (o *TruststoreSummary) GetExpirationDate() string {
	if o == nil || IsNil(o.ExpirationDate) {
		var ret string
		return ret
	}
	return *o.ExpirationDate
}

// GetExpirationDateOk returns a tuple with the ExpirationDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TruststoreSummary) GetExpirationDateOk() (*string, bool) {
	if o == nil || IsNil(o.ExpirationDate) {
		return nil, false
	}
	return o.ExpirationDate, true
}

// HasExpirationDate returns a boolean if a field has been set.
func (o *TruststoreSummary) HasExpirationDate() bool {
	if o != nil && !IsNil(o.ExpirationDate) {
		return true
	}

	return false
}

// SetExpirationDate gets a reference to the given string and assigns it to the ExpirationDate field.
func (o *TruststoreSummary) SetExpirationDate(v string) {
	o.ExpirationDate = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *TruststoreSummary) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TruststoreSummary) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *TruststoreSummary) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *TruststoreSummary) SetType(v string) {
	o.Type = &v
}

func (o TruststoreSummary) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TruststoreSummary) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Meta) {
		toSerialize["meta"] = o.Meta
	}
	if !IsNil(o.ExpirationDate) {
		toSerialize["expirationDate"] = o.ExpirationDate
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	return toSerialize, nil
}

type NullableTruststoreSummary struct {
	value *TruststoreSummary
	isSet bool
}

func (v NullableTruststoreSummary) Get() *TruststoreSummary {
	return v.value
}

func (v *NullableTruststoreSummary) Set(val *TruststoreSummary) {
	v.value = val
	v.isSet = true
}

func (v NullableTruststoreSummary) IsSet() bool {
	return v.isSet
}

func (v *NullableTruststoreSummary) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTruststoreSummary(val *TruststoreSummary) *NullableTruststoreSummary {
	return &NullableTruststoreSummary{value: val, isSet: true}
}

func (v NullableTruststoreSummary) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTruststoreSummary) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


