openapi: 3.0.0
info:
  description: Anypoint MQ API specification
  title: Anypoint MQ specfication
  version: 1.0.0
servers:
- description: Anypoint Cloudhub
  url: https://anypoint.mulesoft.com/mq/admin/api/v1/
- description: Anypoint Cloudhub EU
  url: https://eu1.anypoint.mulesoft.com/mq/admin/api/v1/
- description: Anypoint Cloudhub GOV
  url: https://gov.anypoint.mulesoft.com/mq/admin/api/v1/
security:
- bearerAuth: []
paths:
  /organizations/{orgId}/environments/{envId}/regions/{regionId}/destinations:
    get:
      description: Get a list of queues in a region
      operationId: GetAMQList
      parameters:
      - description: The organization Id
        explode: false
        in: path
        name: orgId
        required: true
        schema:
          type: string
        style: simple
      - description: The environment id
        explode: false
        in: path
        name: envId
        required: true
        schema:
          type: string
        style: simple
      - description: The region id for MQ
        explode: false
        in: path
        name: regionId
        required: true
        schema:
          type: string
        style: simple
      - description: Defines what to fetch
        explode: true
        in: query
        name: inclusion
        required: false
        schema:
          enum:
          - all
          - minimal
          type: string
        style: form
      - description: Defines what to fetch
        explode: true
        in: query
        name: destinationType
        required: false
        schema:
          enum:
          - all
          - queue
          - exchange
          type: string
        style: form
      - description: Skip over a number of elements by specifying an offset value
          for the query.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          default: 0
          type: integer
        style: form
      - description: Limit the number of elements in the response.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 20
          type: integer
        style: form
      - description: Searchs the field from the left using the passed string.
        explode: true
        in: query
        name: startsWith
        required: false
        schema:
          type: string
        style: form
      - description: Includes only results with the given Ids.
        explode: true
        in: query
        name: destinationIds
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "401":
          description: Access token is missing or invalid
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/queue'
                title: alerts from GET
                type: array
          description: Success response
  /organizations/{orgId}/environments/{envId}/regions/{regionId}/destinations/queues/{queueId}:
    delete:
      description: Delete queue
      operationId: DeleteAMQ
      parameters:
      - description: The organization Id
        explode: false
        in: path
        name: orgId
        required: true
        schema:
          type: string
        style: simple
      - description: The environment id
        explode: false
        in: path
        name: envId
        required: true
        schema:
          type: string
        style: simple
      - description: The region id
        explode: false
        in: path
        name: regionId
        required: true
        schema:
          type: string
        style: simple
      - description: The id of a specific queue
        explode: false
        in: path
        name: queueId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "401":
          description: Access token is missing or invalid
        "204":
          description: Success response
    get:
      description: Get details about a queue
      operationId: GetAMQ
      parameters:
      - description: The organization Id
        explode: false
        in: path
        name: orgId
        required: true
        schema:
          type: string
        style: simple
      - description: The environment id
        explode: false
        in: path
        name: envId
        required: true
        schema:
          type: string
        style: simple
      - description: The region id
        explode: false
        in: path
        name: regionId
        required: true
        schema:
          type: string
        style: simple
      - description: The id of a specific queue
        explode: false
        in: path
        name: queueId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "401":
          description: Access token is missing or invalid
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/queue'
          description: Success response
    patch:
      description: Modify a queue's properties
      operationId: UpdateAMQ
      parameters:
      - description: The organization Id
        explode: false
        in: path
        name: orgId
        required: true
        schema:
          type: string
        style: simple
      - description: The environment id
        explode: false
        in: path
        name: envId
        required: true
        schema:
          type: string
        style: simple
      - description: The region id
        explode: false
        in: path
        name: regionId
        required: true
        schema:
          type: string
        style: simple
      - description: The id of a specific queue
        explode: false
        in: path
        name: queueId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/queueBody'
      responses:
        "401":
          description: Access token is missing or invalid
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateAMQ_404_response'
          description: Queue not found
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/queue'
          description: Success response
    put:
      description: Create queue
      operationId: CreateAMQ
      parameters:
      - description: The organization Id
        explode: false
        in: path
        name: orgId
        required: true
        schema:
          type: string
        style: simple
      - description: The environment id
        explode: false
        in: path
        name: envId
        required: true
        schema:
          type: string
        style: simple
      - description: The region id
        explode: false
        in: path
        name: regionId
        required: true
        schema:
          type: string
        style: simple
      - description: The id of a specific queue
        explode: false
        in: path
        name: queueId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/queueBody'
      responses:
        "401":
          description: Access token is missing or invalid
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/queue'
          description: Success response
components:
  responses:
    UnauthorizedError:
      description: Access token is missing or invalid
    BadRequestError:
      content:
        application/json:
          schema:
            properties:
              status:
                default: 400
                title: the response status code
                type: integer
              message:
                example: api error message
                title: the error message
                type: string
            type: object
      description: Bad request response
    NotFound:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateAMQ_404_response'
      description: Queue not found
    SuccessGetQueues:
      content:
        application/json:
          schema:
            items:
              $ref: '#/components/schemas/queue'
            title: alerts from GET
            type: array
      description: Success response
    SuccessGetQueue:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/queue'
      description: Success response
    SuccessCreateQueue:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/queue'
      description: Successfully created queue
    SuccessDeleteQueue:
      description: Success response
  schemas:
    queue:
      example:
        exchangeId: exchangeId
        queueId: queueId
        fifo: true
        defaultLockTtl: 6
        encrypted: true
        defaultTtl: 0
        defaultDeliveryDelay: 1
        maxDeliveries: 5
        type: type
        deadLetterQueueId: deadLetterQueueId
      properties:
        queueId:
          title: queueId
          type: string
        exchangeId:
          title: exchangeId
          type: string
        defaultTtl:
          title: defaultTtl
          type: integer
        defaultLockTtl:
          title: defaultLockTtl
          type: integer
        type:
          title: type
          type: string
        encrypted:
          title: encrypted
          type: boolean
        defaultDeliveryDelay:
          title: defaultDeliveryDelay
          type: integer
        deadLetterQueueId:
          title: deadLetterQueueId
          type: string
        maxDeliveries:
          title: maxDeliveries
          type: integer
        fifo:
          title: fifo
          type: boolean
      title: queue
      type: object
    queueBody:
      properties:
        defaultTtl:
          nullable: true
          title: defaultTtl
          type: integer
        defaultLockTtl:
          nullable: true
          title: defaultLockTtl
          type: integer
        type:
          nullable: true
          title: type
          type: string
        encrypted:
          nullable: true
          title: encrypted
          type: boolean
        defaultDeliveryDelay:
          nullable: true
          title: defaultDeliveryDelay
          type: integer
        deadLetterQueueId:
          nullable: true
          title: deadLetterQueueId
          type: string
        maxDeliveries:
          nullable: true
          title: maxDeliveries
          type: integer
        fifo:
          nullable: true
          title: fifo
          type: boolean
      title: queueBody
      type: object
    UpdateAMQ_404_response:
      properties:
        status:
          default: 404
          title: the response status code
          type: integer
        message:
          example: api error message
          title: the error message
          type: string
      type: object
  securitySchemes:
    bearerAuth:
      bearerFormat: JWT
      scheme: bearer
      type: http
