/*
API Manager Policy API

API Manager Policy API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package apim_policy

import (
	"encoding/json"
)

// checks if the AutomatedPolicyRuleOfApplication type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AutomatedPolicyRuleOfApplication{}

// AutomatedPolicyRuleOfApplication struct for AutomatedPolicyRuleOfApplication
type AutomatedPolicyRuleOfApplication struct {
	EnvironmentId *string `json:"environmentId,omitempty"`
	OrganizationId *string `json:"organizationId,omitempty"`
}

// NewAutomatedPolicyRuleOfApplication instantiates a new AutomatedPolicyRuleOfApplication object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAutomatedPolicyRuleOfApplication() *AutomatedPolicyRuleOfApplication {
	this := AutomatedPolicyRuleOfApplication{}
	return &this
}

// NewAutomatedPolicyRuleOfApplicationWithDefaults instantiates a new AutomatedPolicyRuleOfApplication object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAutomatedPolicyRuleOfApplicationWithDefaults() *AutomatedPolicyRuleOfApplication {
	this := AutomatedPolicyRuleOfApplication{}
	return &this
}

// GetEnvironmentId returns the EnvironmentId field value if set, zero value otherwise.
func (o *AutomatedPolicyRuleOfApplication) GetEnvironmentId() string {
	if o == nil || IsNil(o.EnvironmentId) {
		var ret string
		return ret
	}
	return *o.EnvironmentId
}

// GetEnvironmentIdOk returns a tuple with the EnvironmentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AutomatedPolicyRuleOfApplication) GetEnvironmentIdOk() (*string, bool) {
	if o == nil || IsNil(o.EnvironmentId) {
		return nil, false
	}
	return o.EnvironmentId, true
}

// HasEnvironmentId returns a boolean if a field has been set.
func (o *AutomatedPolicyRuleOfApplication) HasEnvironmentId() bool {
	if o != nil && !IsNil(o.EnvironmentId) {
		return true
	}

	return false
}

// SetEnvironmentId gets a reference to the given string and assigns it to the EnvironmentId field.
func (o *AutomatedPolicyRuleOfApplication) SetEnvironmentId(v string) {
	o.EnvironmentId = &v
}

// GetOrganizationId returns the OrganizationId field value if set, zero value otherwise.
func (o *AutomatedPolicyRuleOfApplication) GetOrganizationId() string {
	if o == nil || IsNil(o.OrganizationId) {
		var ret string
		return ret
	}
	return *o.OrganizationId
}

// GetOrganizationIdOk returns a tuple with the OrganizationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AutomatedPolicyRuleOfApplication) GetOrganizationIdOk() (*string, bool) {
	if o == nil || IsNil(o.OrganizationId) {
		return nil, false
	}
	return o.OrganizationId, true
}

// HasOrganizationId returns a boolean if a field has been set.
func (o *AutomatedPolicyRuleOfApplication) HasOrganizationId() bool {
	if o != nil && !IsNil(o.OrganizationId) {
		return true
	}

	return false
}

// SetOrganizationId gets a reference to the given string and assigns it to the OrganizationId field.
func (o *AutomatedPolicyRuleOfApplication) SetOrganizationId(v string) {
	o.OrganizationId = &v
}

func (o AutomatedPolicyRuleOfApplication) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AutomatedPolicyRuleOfApplication) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.EnvironmentId) {
		toSerialize["environmentId"] = o.EnvironmentId
	}
	if !IsNil(o.OrganizationId) {
		toSerialize["organizationId"] = o.OrganizationId
	}
	return toSerialize, nil
}

type NullableAutomatedPolicyRuleOfApplication struct {
	value *AutomatedPolicyRuleOfApplication
	isSet bool
}

func (v NullableAutomatedPolicyRuleOfApplication) Get() *AutomatedPolicyRuleOfApplication {
	return v.value
}

func (v *NullableAutomatedPolicyRuleOfApplication) Set(val *AutomatedPolicyRuleOfApplication) {
	v.value = val
	v.isSet = true
}

func (v NullableAutomatedPolicyRuleOfApplication) IsSet() bool {
	return v.isSet
}

func (v *NullableAutomatedPolicyRuleOfApplication) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAutomatedPolicyRuleOfApplication(val *AutomatedPolicyRuleOfApplication) *NullableAutomatedPolicyRuleOfApplication {
	return &NullableAutomatedPolicyRuleOfApplication{value: val, isSet: true}
}

func (v NullableAutomatedPolicyRuleOfApplication) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAutomatedPolicyRuleOfApplication) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


