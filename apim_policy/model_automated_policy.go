/*
API Manager Policy API

API Manager Policy API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package apim_policy

import (
	"encoding/json"
)

// checks if the AutomatedPolicy type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AutomatedPolicy{}

// AutomatedPolicy struct for AutomatedPolicy
type AutomatedPolicy struct {
	Audit *Audit `json:"audit,omitempty"`
	Id *int32 `json:"id,omitempty"`
	RuleOfApplication *AutomatedPolicyRuleOfApplication `json:"ruleOfApplication,omitempty"`
	GroupId *string `json:"groupId,omitempty"`
	AssetId *string `json:"assetId,omitempty"`
	AssetVersion *string `json:"assetVersion,omitempty"`
	ConfigurationData map[string]interface{} `json:"configurationData,omitempty"`
	PointcutData []PointcutDataItem `json:"pointcutData,omitempty"`
	Order *int32 `json:"order,omitempty"`
	Disabled *bool `json:"disabled,omitempty"`
	ImplementationAssets []ImplementationAsset `json:"implementationAssets,omitempty"`
}

// NewAutomatedPolicy instantiates a new AutomatedPolicy object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAutomatedPolicy() *AutomatedPolicy {
	this := AutomatedPolicy{}
	return &this
}

// NewAutomatedPolicyWithDefaults instantiates a new AutomatedPolicy object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAutomatedPolicyWithDefaults() *AutomatedPolicy {
	this := AutomatedPolicy{}
	return &this
}

// GetAudit returns the Audit field value if set, zero value otherwise.
func (o *AutomatedPolicy) GetAudit() Audit {
	if o == nil || IsNil(o.Audit) {
		var ret Audit
		return ret
	}
	return *o.Audit
}

// GetAuditOk returns a tuple with the Audit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AutomatedPolicy) GetAuditOk() (*Audit, bool) {
	if o == nil || IsNil(o.Audit) {
		return nil, false
	}
	return o.Audit, true
}

// HasAudit returns a boolean if a field has been set.
func (o *AutomatedPolicy) HasAudit() bool {
	if o != nil && !IsNil(o.Audit) {
		return true
	}

	return false
}

// SetAudit gets a reference to the given Audit and assigns it to the Audit field.
func (o *AutomatedPolicy) SetAudit(v Audit) {
	o.Audit = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *AutomatedPolicy) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AutomatedPolicy) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *AutomatedPolicy) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *AutomatedPolicy) SetId(v int32) {
	o.Id = &v
}

// GetRuleOfApplication returns the RuleOfApplication field value if set, zero value otherwise.
func (o *AutomatedPolicy) GetRuleOfApplication() AutomatedPolicyRuleOfApplication {
	if o == nil || IsNil(o.RuleOfApplication) {
		var ret AutomatedPolicyRuleOfApplication
		return ret
	}
	return *o.RuleOfApplication
}

// GetRuleOfApplicationOk returns a tuple with the RuleOfApplication field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AutomatedPolicy) GetRuleOfApplicationOk() (*AutomatedPolicyRuleOfApplication, bool) {
	if o == nil || IsNil(o.RuleOfApplication) {
		return nil, false
	}
	return o.RuleOfApplication, true
}

// HasRuleOfApplication returns a boolean if a field has been set.
func (o *AutomatedPolicy) HasRuleOfApplication() bool {
	if o != nil && !IsNil(o.RuleOfApplication) {
		return true
	}

	return false
}

// SetRuleOfApplication gets a reference to the given AutomatedPolicyRuleOfApplication and assigns it to the RuleOfApplication field.
func (o *AutomatedPolicy) SetRuleOfApplication(v AutomatedPolicyRuleOfApplication) {
	o.RuleOfApplication = &v
}

// GetGroupId returns the GroupId field value if set, zero value otherwise.
func (o *AutomatedPolicy) GetGroupId() string {
	if o == nil || IsNil(o.GroupId) {
		var ret string
		return ret
	}
	return *o.GroupId
}

// GetGroupIdOk returns a tuple with the GroupId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AutomatedPolicy) GetGroupIdOk() (*string, bool) {
	if o == nil || IsNil(o.GroupId) {
		return nil, false
	}
	return o.GroupId, true
}

// HasGroupId returns a boolean if a field has been set.
func (o *AutomatedPolicy) HasGroupId() bool {
	if o != nil && !IsNil(o.GroupId) {
		return true
	}

	return false
}

// SetGroupId gets a reference to the given string and assigns it to the GroupId field.
func (o *AutomatedPolicy) SetGroupId(v string) {
	o.GroupId = &v
}

// GetAssetId returns the AssetId field value if set, zero value otherwise.
func (o *AutomatedPolicy) GetAssetId() string {
	if o == nil || IsNil(o.AssetId) {
		var ret string
		return ret
	}
	return *o.AssetId
}

// GetAssetIdOk returns a tuple with the AssetId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AutomatedPolicy) GetAssetIdOk() (*string, bool) {
	if o == nil || IsNil(o.AssetId) {
		return nil, false
	}
	return o.AssetId, true
}

// HasAssetId returns a boolean if a field has been set.
func (o *AutomatedPolicy) HasAssetId() bool {
	if o != nil && !IsNil(o.AssetId) {
		return true
	}

	return false
}

// SetAssetId gets a reference to the given string and assigns it to the AssetId field.
func (o *AutomatedPolicy) SetAssetId(v string) {
	o.AssetId = &v
}

// GetAssetVersion returns the AssetVersion field value if set, zero value otherwise.
func (o *AutomatedPolicy) GetAssetVersion() string {
	if o == nil || IsNil(o.AssetVersion) {
		var ret string
		return ret
	}
	return *o.AssetVersion
}

// GetAssetVersionOk returns a tuple with the AssetVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AutomatedPolicy) GetAssetVersionOk() (*string, bool) {
	if o == nil || IsNil(o.AssetVersion) {
		return nil, false
	}
	return o.AssetVersion, true
}

// HasAssetVersion returns a boolean if a field has been set.
func (o *AutomatedPolicy) HasAssetVersion() bool {
	if o != nil && !IsNil(o.AssetVersion) {
		return true
	}

	return false
}

// SetAssetVersion gets a reference to the given string and assigns it to the AssetVersion field.
func (o *AutomatedPolicy) SetAssetVersion(v string) {
	o.AssetVersion = &v
}

// GetConfigurationData returns the ConfigurationData field value if set, zero value otherwise.
func (o *AutomatedPolicy) GetConfigurationData() map[string]interface{} {
	if o == nil || IsNil(o.ConfigurationData) {
		var ret map[string]interface{}
		return ret
	}
	return o.ConfigurationData
}

// GetConfigurationDataOk returns a tuple with the ConfigurationData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AutomatedPolicy) GetConfigurationDataOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.ConfigurationData) {
		return map[string]interface{}{}, false
	}
	return o.ConfigurationData, true
}

// HasConfigurationData returns a boolean if a field has been set.
func (o *AutomatedPolicy) HasConfigurationData() bool {
	if o != nil && !IsNil(o.ConfigurationData) {
		return true
	}

	return false
}

// SetConfigurationData gets a reference to the given map[string]interface{} and assigns it to the ConfigurationData field.
func (o *AutomatedPolicy) SetConfigurationData(v map[string]interface{}) {
	o.ConfigurationData = v
}

// GetPointcutData returns the PointcutData field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AutomatedPolicy) GetPointcutData() []PointcutDataItem {
	if o == nil {
		var ret []PointcutDataItem
		return ret
	}
	return o.PointcutData
}

// GetPointcutDataOk returns a tuple with the PointcutData field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AutomatedPolicy) GetPointcutDataOk() ([]PointcutDataItem, bool) {
	if o == nil || IsNil(o.PointcutData) {
		return nil, false
	}
	return o.PointcutData, true
}

// HasPointcutData returns a boolean if a field has been set.
func (o *AutomatedPolicy) HasPointcutData() bool {
	if o != nil && IsNil(o.PointcutData) {
		return true
	}

	return false
}

// SetPointcutData gets a reference to the given []PointcutDataItem and assigns it to the PointcutData field.
func (o *AutomatedPolicy) SetPointcutData(v []PointcutDataItem) {
	o.PointcutData = v
}

// GetOrder returns the Order field value if set, zero value otherwise.
func (o *AutomatedPolicy) GetOrder() int32 {
	if o == nil || IsNil(o.Order) {
		var ret int32
		return ret
	}
	return *o.Order
}

// GetOrderOk returns a tuple with the Order field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AutomatedPolicy) GetOrderOk() (*int32, bool) {
	if o == nil || IsNil(o.Order) {
		return nil, false
	}
	return o.Order, true
}

// HasOrder returns a boolean if a field has been set.
func (o *AutomatedPolicy) HasOrder() bool {
	if o != nil && !IsNil(o.Order) {
		return true
	}

	return false
}

// SetOrder gets a reference to the given int32 and assigns it to the Order field.
func (o *AutomatedPolicy) SetOrder(v int32) {
	o.Order = &v
}

// GetDisabled returns the Disabled field value if set, zero value otherwise.
func (o *AutomatedPolicy) GetDisabled() bool {
	if o == nil || IsNil(o.Disabled) {
		var ret bool
		return ret
	}
	return *o.Disabled
}

// GetDisabledOk returns a tuple with the Disabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AutomatedPolicy) GetDisabledOk() (*bool, bool) {
	if o == nil || IsNil(o.Disabled) {
		return nil, false
	}
	return o.Disabled, true
}

// HasDisabled returns a boolean if a field has been set.
func (o *AutomatedPolicy) HasDisabled() bool {
	if o != nil && !IsNil(o.Disabled) {
		return true
	}

	return false
}

// SetDisabled gets a reference to the given bool and assigns it to the Disabled field.
func (o *AutomatedPolicy) SetDisabled(v bool) {
	o.Disabled = &v
}

// GetImplementationAssets returns the ImplementationAssets field value if set, zero value otherwise.
func (o *AutomatedPolicy) GetImplementationAssets() []ImplementationAsset {
	if o == nil || IsNil(o.ImplementationAssets) {
		var ret []ImplementationAsset
		return ret
	}
	return o.ImplementationAssets
}

// GetImplementationAssetsOk returns a tuple with the ImplementationAssets field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AutomatedPolicy) GetImplementationAssetsOk() ([]ImplementationAsset, bool) {
	if o == nil || IsNil(o.ImplementationAssets) {
		return nil, false
	}
	return o.ImplementationAssets, true
}

// HasImplementationAssets returns a boolean if a field has been set.
func (o *AutomatedPolicy) HasImplementationAssets() bool {
	if o != nil && !IsNil(o.ImplementationAssets) {
		return true
	}

	return false
}

// SetImplementationAssets gets a reference to the given []ImplementationAsset and assigns it to the ImplementationAssets field.
func (o *AutomatedPolicy) SetImplementationAssets(v []ImplementationAsset) {
	o.ImplementationAssets = v
}

func (o AutomatedPolicy) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AutomatedPolicy) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Audit) {
		toSerialize["audit"] = o.Audit
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.RuleOfApplication) {
		toSerialize["ruleOfApplication"] = o.RuleOfApplication
	}
	if !IsNil(o.GroupId) {
		toSerialize["groupId"] = o.GroupId
	}
	if !IsNil(o.AssetId) {
		toSerialize["assetId"] = o.AssetId
	}
	if !IsNil(o.AssetVersion) {
		toSerialize["assetVersion"] = o.AssetVersion
	}
	if !IsNil(o.ConfigurationData) {
		toSerialize["configurationData"] = o.ConfigurationData
	}
	if o.PointcutData != nil {
		toSerialize["pointcutData"] = o.PointcutData
	}
	if !IsNil(o.Order) {
		toSerialize["order"] = o.Order
	}
	if !IsNil(o.Disabled) {
		toSerialize["disabled"] = o.Disabled
	}
	if !IsNil(o.ImplementationAssets) {
		toSerialize["implementationAssets"] = o.ImplementationAssets
	}
	return toSerialize, nil
}

type NullableAutomatedPolicy struct {
	value *AutomatedPolicy
	isSet bool
}

func (v NullableAutomatedPolicy) Get() *AutomatedPolicy {
	return v.value
}

func (v *NullableAutomatedPolicy) Set(val *AutomatedPolicy) {
	v.value = val
	v.isSet = true
}

func (v NullableAutomatedPolicy) IsSet() bool {
	return v.isSet
}

func (v *NullableAutomatedPolicy) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAutomatedPolicy(val *AutomatedPolicy) *NullableAutomatedPolicy {
	return &NullableAutomatedPolicy{value: val, isSet: true}
}

func (v NullableAutomatedPolicy) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAutomatedPolicy) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


