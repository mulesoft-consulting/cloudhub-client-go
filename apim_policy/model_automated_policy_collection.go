/*
API Manager Policy API

API Manager Policy API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package apim_policy

import (
	"encoding/json"
)

// checks if the AutomatedPolicyCollection type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AutomatedPolicyCollection{}

// AutomatedPolicyCollection struct for AutomatedPolicyCollection
type AutomatedPolicyCollection struct {
	AutomatedPolicies []AutomatedPolicy `json:"automatedPolicies,omitempty"`
	Total *int32 `json:"total,omitempty"`
}

// NewAutomatedPolicyCollection instantiates a new AutomatedPolicyCollection object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAutomatedPolicyCollection() *AutomatedPolicyCollection {
	this := AutomatedPolicyCollection{}
	return &this
}

// NewAutomatedPolicyCollectionWithDefaults instantiates a new AutomatedPolicyCollection object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAutomatedPolicyCollectionWithDefaults() *AutomatedPolicyCollection {
	this := AutomatedPolicyCollection{}
	return &this
}

// GetAutomatedPolicies returns the AutomatedPolicies field value if set, zero value otherwise.
func (o *AutomatedPolicyCollection) GetAutomatedPolicies() []AutomatedPolicy {
	if o == nil || IsNil(o.AutomatedPolicies) {
		var ret []AutomatedPolicy
		return ret
	}
	return o.AutomatedPolicies
}

// GetAutomatedPoliciesOk returns a tuple with the AutomatedPolicies field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AutomatedPolicyCollection) GetAutomatedPoliciesOk() ([]AutomatedPolicy, bool) {
	if o == nil || IsNil(o.AutomatedPolicies) {
		return nil, false
	}
	return o.AutomatedPolicies, true
}

// HasAutomatedPolicies returns a boolean if a field has been set.
func (o *AutomatedPolicyCollection) HasAutomatedPolicies() bool {
	if o != nil && !IsNil(o.AutomatedPolicies) {
		return true
	}

	return false
}

// SetAutomatedPolicies gets a reference to the given []AutomatedPolicy and assigns it to the AutomatedPolicies field.
func (o *AutomatedPolicyCollection) SetAutomatedPolicies(v []AutomatedPolicy) {
	o.AutomatedPolicies = v
}

// GetTotal returns the Total field value if set, zero value otherwise.
func (o *AutomatedPolicyCollection) GetTotal() int32 {
	if o == nil || IsNil(o.Total) {
		var ret int32
		return ret
	}
	return *o.Total
}

// GetTotalOk returns a tuple with the Total field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AutomatedPolicyCollection) GetTotalOk() (*int32, bool) {
	if o == nil || IsNil(o.Total) {
		return nil, false
	}
	return o.Total, true
}

// HasTotal returns a boolean if a field has been set.
func (o *AutomatedPolicyCollection) HasTotal() bool {
	if o != nil && !IsNil(o.Total) {
		return true
	}

	return false
}

// SetTotal gets a reference to the given int32 and assigns it to the Total field.
func (o *AutomatedPolicyCollection) SetTotal(v int32) {
	o.Total = &v
}

func (o AutomatedPolicyCollection) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AutomatedPolicyCollection) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AutomatedPolicies) {
		toSerialize["automatedPolicies"] = o.AutomatedPolicies
	}
	if !IsNil(o.Total) {
		toSerialize["total"] = o.Total
	}
	return toSerialize, nil
}

type NullableAutomatedPolicyCollection struct {
	value *AutomatedPolicyCollection
	isSet bool
}

func (v NullableAutomatedPolicyCollection) Get() *AutomatedPolicyCollection {
	return v.value
}

func (v *NullableAutomatedPolicyCollection) Set(val *AutomatedPolicyCollection) {
	v.value = val
	v.isSet = true
}

func (v NullableAutomatedPolicyCollection) IsSet() bool {
	return v.isSet
}

func (v *NullableAutomatedPolicyCollection) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAutomatedPolicyCollection(val *AutomatedPolicyCollection) *NullableAutomatedPolicyCollection {
	return &NullableAutomatedPolicyCollection{value: val, isSet: true}
}

func (v NullableAutomatedPolicyCollection) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAutomatedPolicyCollection) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


