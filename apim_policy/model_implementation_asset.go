/*
API Manager Policy API

API Manager Policy API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package apim_policy

import (
	"encoding/json"
)

// checks if the ImplementationAsset type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ImplementationAsset{}

// ImplementationAsset struct for ImplementationAsset
type ImplementationAsset struct {
	Name *string `json:"name,omitempty"`
	AssetId *string `json:"assetId,omitempty"`
	GroupId *string `json:"groupId,omitempty"`
	Version *string `json:"version,omitempty"`
	Technology *string `json:"technology,omitempty"`
	ReleaseNotes *string `json:"releaseNotes,omitempty"`
	OrganizationId *string `json:"organizationId,omitempty"`
	MinRuntimeVersion *string `json:"minRuntimeVersion,omitempty"`
}

// NewImplementationAsset instantiates a new ImplementationAsset object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewImplementationAsset() *ImplementationAsset {
	this := ImplementationAsset{}
	return &this
}

// NewImplementationAssetWithDefaults instantiates a new ImplementationAsset object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewImplementationAssetWithDefaults() *ImplementationAsset {
	this := ImplementationAsset{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ImplementationAsset) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ImplementationAsset) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ImplementationAsset) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ImplementationAsset) SetName(v string) {
	o.Name = &v
}

// GetAssetId returns the AssetId field value if set, zero value otherwise.
func (o *ImplementationAsset) GetAssetId() string {
	if o == nil || IsNil(o.AssetId) {
		var ret string
		return ret
	}
	return *o.AssetId
}

// GetAssetIdOk returns a tuple with the AssetId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ImplementationAsset) GetAssetIdOk() (*string, bool) {
	if o == nil || IsNil(o.AssetId) {
		return nil, false
	}
	return o.AssetId, true
}

// HasAssetId returns a boolean if a field has been set.
func (o *ImplementationAsset) HasAssetId() bool {
	if o != nil && !IsNil(o.AssetId) {
		return true
	}

	return false
}

// SetAssetId gets a reference to the given string and assigns it to the AssetId field.
func (o *ImplementationAsset) SetAssetId(v string) {
	o.AssetId = &v
}

// GetGroupId returns the GroupId field value if set, zero value otherwise.
func (o *ImplementationAsset) GetGroupId() string {
	if o == nil || IsNil(o.GroupId) {
		var ret string
		return ret
	}
	return *o.GroupId
}

// GetGroupIdOk returns a tuple with the GroupId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ImplementationAsset) GetGroupIdOk() (*string, bool) {
	if o == nil || IsNil(o.GroupId) {
		return nil, false
	}
	return o.GroupId, true
}

// HasGroupId returns a boolean if a field has been set.
func (o *ImplementationAsset) HasGroupId() bool {
	if o != nil && !IsNil(o.GroupId) {
		return true
	}

	return false
}

// SetGroupId gets a reference to the given string and assigns it to the GroupId field.
func (o *ImplementationAsset) SetGroupId(v string) {
	o.GroupId = &v
}

// GetVersion returns the Version field value if set, zero value otherwise.
func (o *ImplementationAsset) GetVersion() string {
	if o == nil || IsNil(o.Version) {
		var ret string
		return ret
	}
	return *o.Version
}

// GetVersionOk returns a tuple with the Version field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ImplementationAsset) GetVersionOk() (*string, bool) {
	if o == nil || IsNil(o.Version) {
		return nil, false
	}
	return o.Version, true
}

// HasVersion returns a boolean if a field has been set.
func (o *ImplementationAsset) HasVersion() bool {
	if o != nil && !IsNil(o.Version) {
		return true
	}

	return false
}

// SetVersion gets a reference to the given string and assigns it to the Version field.
func (o *ImplementationAsset) SetVersion(v string) {
	o.Version = &v
}

// GetTechnology returns the Technology field value if set, zero value otherwise.
func (o *ImplementationAsset) GetTechnology() string {
	if o == nil || IsNil(o.Technology) {
		var ret string
		return ret
	}
	return *o.Technology
}

// GetTechnologyOk returns a tuple with the Technology field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ImplementationAsset) GetTechnologyOk() (*string, bool) {
	if o == nil || IsNil(o.Technology) {
		return nil, false
	}
	return o.Technology, true
}

// HasTechnology returns a boolean if a field has been set.
func (o *ImplementationAsset) HasTechnology() bool {
	if o != nil && !IsNil(o.Technology) {
		return true
	}

	return false
}

// SetTechnology gets a reference to the given string and assigns it to the Technology field.
func (o *ImplementationAsset) SetTechnology(v string) {
	o.Technology = &v
}

// GetReleaseNotes returns the ReleaseNotes field value if set, zero value otherwise.
func (o *ImplementationAsset) GetReleaseNotes() string {
	if o == nil || IsNil(o.ReleaseNotes) {
		var ret string
		return ret
	}
	return *o.ReleaseNotes
}

// GetReleaseNotesOk returns a tuple with the ReleaseNotes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ImplementationAsset) GetReleaseNotesOk() (*string, bool) {
	if o == nil || IsNil(o.ReleaseNotes) {
		return nil, false
	}
	return o.ReleaseNotes, true
}

// HasReleaseNotes returns a boolean if a field has been set.
func (o *ImplementationAsset) HasReleaseNotes() bool {
	if o != nil && !IsNil(o.ReleaseNotes) {
		return true
	}

	return false
}

// SetReleaseNotes gets a reference to the given string and assigns it to the ReleaseNotes field.
func (o *ImplementationAsset) SetReleaseNotes(v string) {
	o.ReleaseNotes = &v
}

// GetOrganizationId returns the OrganizationId field value if set, zero value otherwise.
func (o *ImplementationAsset) GetOrganizationId() string {
	if o == nil || IsNil(o.OrganizationId) {
		var ret string
		return ret
	}
	return *o.OrganizationId
}

// GetOrganizationIdOk returns a tuple with the OrganizationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ImplementationAsset) GetOrganizationIdOk() (*string, bool) {
	if o == nil || IsNil(o.OrganizationId) {
		return nil, false
	}
	return o.OrganizationId, true
}

// HasOrganizationId returns a boolean if a field has been set.
func (o *ImplementationAsset) HasOrganizationId() bool {
	if o != nil && !IsNil(o.OrganizationId) {
		return true
	}

	return false
}

// SetOrganizationId gets a reference to the given string and assigns it to the OrganizationId field.
func (o *ImplementationAsset) SetOrganizationId(v string) {
	o.OrganizationId = &v
}

// GetMinRuntimeVersion returns the MinRuntimeVersion field value if set, zero value otherwise.
func (o *ImplementationAsset) GetMinRuntimeVersion() string {
	if o == nil || IsNil(o.MinRuntimeVersion) {
		var ret string
		return ret
	}
	return *o.MinRuntimeVersion
}

// GetMinRuntimeVersionOk returns a tuple with the MinRuntimeVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ImplementationAsset) GetMinRuntimeVersionOk() (*string, bool) {
	if o == nil || IsNil(o.MinRuntimeVersion) {
		return nil, false
	}
	return o.MinRuntimeVersion, true
}

// HasMinRuntimeVersion returns a boolean if a field has been set.
func (o *ImplementationAsset) HasMinRuntimeVersion() bool {
	if o != nil && !IsNil(o.MinRuntimeVersion) {
		return true
	}

	return false
}

// SetMinRuntimeVersion gets a reference to the given string and assigns it to the MinRuntimeVersion field.
func (o *ImplementationAsset) SetMinRuntimeVersion(v string) {
	o.MinRuntimeVersion = &v
}

func (o ImplementationAsset) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ImplementationAsset) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.AssetId) {
		toSerialize["assetId"] = o.AssetId
	}
	if !IsNil(o.GroupId) {
		toSerialize["groupId"] = o.GroupId
	}
	if !IsNil(o.Version) {
		toSerialize["version"] = o.Version
	}
	if !IsNil(o.Technology) {
		toSerialize["technology"] = o.Technology
	}
	if !IsNil(o.ReleaseNotes) {
		toSerialize["releaseNotes"] = o.ReleaseNotes
	}
	if !IsNil(o.OrganizationId) {
		toSerialize["organizationId"] = o.OrganizationId
	}
	if !IsNil(o.MinRuntimeVersion) {
		toSerialize["minRuntimeVersion"] = o.MinRuntimeVersion
	}
	return toSerialize, nil
}

type NullableImplementationAsset struct {
	value *ImplementationAsset
	isSet bool
}

func (v NullableImplementationAsset) Get() *ImplementationAsset {
	return v.value
}

func (v *NullableImplementationAsset) Set(val *ImplementationAsset) {
	v.value = val
	v.isSet = true
}

func (v NullableImplementationAsset) IsSet() bool {
	return v.isSet
}

func (v *NullableImplementationAsset) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableImplementationAsset(val *ImplementationAsset) *NullableImplementationAsset {
	return &NullableImplementationAsset{value: val, isSet: true}
}

func (v NullableImplementationAsset) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableImplementationAsset) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


