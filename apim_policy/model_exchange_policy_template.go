/*
API Manager Policy API

API Manager Policy API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package apim_policy

import (
	"encoding/json"
)

// checks if the ExchangePolicyTemplate type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ExchangePolicyTemplate{}

// ExchangePolicyTemplate struct for ExchangePolicyTemplate
type ExchangePolicyTemplate struct {
	Audit *Audit `json:"audit,omitempty"`
	Id *int32 `json:"id,omitempty"`
	GroupId *string `json:"groupId,omitempty"`
	AssetId *string `json:"assetId,omitempty"`
	Version *string `json:"version,omitempty"`
	Name *string `json:"name,omitempty"`
	Description *string `json:"description,omitempty"`
	Type *string `json:"type,omitempty"`
	IsOOTB *bool `json:"isOOTB,omitempty"`
	Stage *string `json:"stage,omitempty"`
	Status *string `json:"status,omitempty"`
	YamlMd5 *string `json:"yamlMd5,omitempty"`
	JarMd5 *string `json:"jarMd5,omitempty"`
	OrgId *string `json:"orgId,omitempty"`
	MinMuleVersion *string `json:"minMuleVersion,omitempty"`
	SupportedPoliciesVersions *string `json:"supportedPoliciesVersions,omitempty"`
	Category *string `json:"category,omitempty"`
	ViolationCategory *string `json:"violationCategory,omitempty"`
	ResourceLevelSupported *bool `json:"resourceLevelSupported,omitempty"`
	EncryptionSupported *bool `json:"encryptionSupported,omitempty"`
	Standalone *bool `json:"standalone,omitempty"`
	RequiredCharacteristics []string `json:"requiredCharacteristics,omitempty"`
	IdentityManagement *ExchangePolicyTemplateIdentityManagement `json:"identityManagement,omitempty"`
	ProvidedCharacteristics []string `json:"providedCharacteristics,omitempty"`
	RamlSnippet *string `json:"ramlSnippet,omitempty"`
	RamlV1Snippet *string `json:"ramlV1Snippet,omitempty"`
	OasV2Snippet *string `json:"oasV2Snippet,omitempty"`
	OasV3Snippet *string `json:"oasV3Snippet,omitempty"`
	Applicable *bool `json:"applicable,omitempty"`
	Configuration []PolicyConfiguration `json:"configuration,omitempty"`
	AllVersions []ExchangePolicyTemplateAllVersionsInner `json:"allVersions,omitempty"`
}

// NewExchangePolicyTemplate instantiates a new ExchangePolicyTemplate object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewExchangePolicyTemplate() *ExchangePolicyTemplate {
	this := ExchangePolicyTemplate{}
	return &this
}

// NewExchangePolicyTemplateWithDefaults instantiates a new ExchangePolicyTemplate object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewExchangePolicyTemplateWithDefaults() *ExchangePolicyTemplate {
	this := ExchangePolicyTemplate{}
	return &this
}

// GetAudit returns the Audit field value if set, zero value otherwise.
func (o *ExchangePolicyTemplate) GetAudit() Audit {
	if o == nil || IsNil(o.Audit) {
		var ret Audit
		return ret
	}
	return *o.Audit
}

// GetAuditOk returns a tuple with the Audit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExchangePolicyTemplate) GetAuditOk() (*Audit, bool) {
	if o == nil || IsNil(o.Audit) {
		return nil, false
	}
	return o.Audit, true
}

// HasAudit returns a boolean if a field has been set.
func (o *ExchangePolicyTemplate) HasAudit() bool {
	if o != nil && !IsNil(o.Audit) {
		return true
	}

	return false
}

// SetAudit gets a reference to the given Audit and assigns it to the Audit field.
func (o *ExchangePolicyTemplate) SetAudit(v Audit) {
	o.Audit = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ExchangePolicyTemplate) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExchangePolicyTemplate) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ExchangePolicyTemplate) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *ExchangePolicyTemplate) SetId(v int32) {
	o.Id = &v
}

// GetGroupId returns the GroupId field value if set, zero value otherwise.
func (o *ExchangePolicyTemplate) GetGroupId() string {
	if o == nil || IsNil(o.GroupId) {
		var ret string
		return ret
	}
	return *o.GroupId
}

// GetGroupIdOk returns a tuple with the GroupId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExchangePolicyTemplate) GetGroupIdOk() (*string, bool) {
	if o == nil || IsNil(o.GroupId) {
		return nil, false
	}
	return o.GroupId, true
}

// HasGroupId returns a boolean if a field has been set.
func (o *ExchangePolicyTemplate) HasGroupId() bool {
	if o != nil && !IsNil(o.GroupId) {
		return true
	}

	return false
}

// SetGroupId gets a reference to the given string and assigns it to the GroupId field.
func (o *ExchangePolicyTemplate) SetGroupId(v string) {
	o.GroupId = &v
}

// GetAssetId returns the AssetId field value if set, zero value otherwise.
func (o *ExchangePolicyTemplate) GetAssetId() string {
	if o == nil || IsNil(o.AssetId) {
		var ret string
		return ret
	}
	return *o.AssetId
}

// GetAssetIdOk returns a tuple with the AssetId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExchangePolicyTemplate) GetAssetIdOk() (*string, bool) {
	if o == nil || IsNil(o.AssetId) {
		return nil, false
	}
	return o.AssetId, true
}

// HasAssetId returns a boolean if a field has been set.
func (o *ExchangePolicyTemplate) HasAssetId() bool {
	if o != nil && !IsNil(o.AssetId) {
		return true
	}

	return false
}

// SetAssetId gets a reference to the given string and assigns it to the AssetId field.
func (o *ExchangePolicyTemplate) SetAssetId(v string) {
	o.AssetId = &v
}

// GetVersion returns the Version field value if set, zero value otherwise.
func (o *ExchangePolicyTemplate) GetVersion() string {
	if o == nil || IsNil(o.Version) {
		var ret string
		return ret
	}
	return *o.Version
}

// GetVersionOk returns a tuple with the Version field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExchangePolicyTemplate) GetVersionOk() (*string, bool) {
	if o == nil || IsNil(o.Version) {
		return nil, false
	}
	return o.Version, true
}

// HasVersion returns a boolean if a field has been set.
func (o *ExchangePolicyTemplate) HasVersion() bool {
	if o != nil && !IsNil(o.Version) {
		return true
	}

	return false
}

// SetVersion gets a reference to the given string and assigns it to the Version field.
func (o *ExchangePolicyTemplate) SetVersion(v string) {
	o.Version = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ExchangePolicyTemplate) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExchangePolicyTemplate) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ExchangePolicyTemplate) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ExchangePolicyTemplate) SetName(v string) {
	o.Name = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *ExchangePolicyTemplate) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExchangePolicyTemplate) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *ExchangePolicyTemplate) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *ExchangePolicyTemplate) SetDescription(v string) {
	o.Description = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *ExchangePolicyTemplate) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExchangePolicyTemplate) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *ExchangePolicyTemplate) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *ExchangePolicyTemplate) SetType(v string) {
	o.Type = &v
}

// GetIsOOTB returns the IsOOTB field value if set, zero value otherwise.
func (o *ExchangePolicyTemplate) GetIsOOTB() bool {
	if o == nil || IsNil(o.IsOOTB) {
		var ret bool
		return ret
	}
	return *o.IsOOTB
}

// GetIsOOTBOk returns a tuple with the IsOOTB field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExchangePolicyTemplate) GetIsOOTBOk() (*bool, bool) {
	if o == nil || IsNil(o.IsOOTB) {
		return nil, false
	}
	return o.IsOOTB, true
}

// HasIsOOTB returns a boolean if a field has been set.
func (o *ExchangePolicyTemplate) HasIsOOTB() bool {
	if o != nil && !IsNil(o.IsOOTB) {
		return true
	}

	return false
}

// SetIsOOTB gets a reference to the given bool and assigns it to the IsOOTB field.
func (o *ExchangePolicyTemplate) SetIsOOTB(v bool) {
	o.IsOOTB = &v
}

// GetStage returns the Stage field value if set, zero value otherwise.
func (o *ExchangePolicyTemplate) GetStage() string {
	if o == nil || IsNil(o.Stage) {
		var ret string
		return ret
	}
	return *o.Stage
}

// GetStageOk returns a tuple with the Stage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExchangePolicyTemplate) GetStageOk() (*string, bool) {
	if o == nil || IsNil(o.Stage) {
		return nil, false
	}
	return o.Stage, true
}

// HasStage returns a boolean if a field has been set.
func (o *ExchangePolicyTemplate) HasStage() bool {
	if o != nil && !IsNil(o.Stage) {
		return true
	}

	return false
}

// SetStage gets a reference to the given string and assigns it to the Stage field.
func (o *ExchangePolicyTemplate) SetStage(v string) {
	o.Stage = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *ExchangePolicyTemplate) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExchangePolicyTemplate) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *ExchangePolicyTemplate) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *ExchangePolicyTemplate) SetStatus(v string) {
	o.Status = &v
}

// GetYamlMd5 returns the YamlMd5 field value if set, zero value otherwise.
func (o *ExchangePolicyTemplate) GetYamlMd5() string {
	if o == nil || IsNil(o.YamlMd5) {
		var ret string
		return ret
	}
	return *o.YamlMd5
}

// GetYamlMd5Ok returns a tuple with the YamlMd5 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExchangePolicyTemplate) GetYamlMd5Ok() (*string, bool) {
	if o == nil || IsNil(o.YamlMd5) {
		return nil, false
	}
	return o.YamlMd5, true
}

// HasYamlMd5 returns a boolean if a field has been set.
func (o *ExchangePolicyTemplate) HasYamlMd5() bool {
	if o != nil && !IsNil(o.YamlMd5) {
		return true
	}

	return false
}

// SetYamlMd5 gets a reference to the given string and assigns it to the YamlMd5 field.
func (o *ExchangePolicyTemplate) SetYamlMd5(v string) {
	o.YamlMd5 = &v
}

// GetJarMd5 returns the JarMd5 field value if set, zero value otherwise.
func (o *ExchangePolicyTemplate) GetJarMd5() string {
	if o == nil || IsNil(o.JarMd5) {
		var ret string
		return ret
	}
	return *o.JarMd5
}

// GetJarMd5Ok returns a tuple with the JarMd5 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExchangePolicyTemplate) GetJarMd5Ok() (*string, bool) {
	if o == nil || IsNil(o.JarMd5) {
		return nil, false
	}
	return o.JarMd5, true
}

// HasJarMd5 returns a boolean if a field has been set.
func (o *ExchangePolicyTemplate) HasJarMd5() bool {
	if o != nil && !IsNil(o.JarMd5) {
		return true
	}

	return false
}

// SetJarMd5 gets a reference to the given string and assigns it to the JarMd5 field.
func (o *ExchangePolicyTemplate) SetJarMd5(v string) {
	o.JarMd5 = &v
}

// GetOrgId returns the OrgId field value if set, zero value otherwise.
func (o *ExchangePolicyTemplate) GetOrgId() string {
	if o == nil || IsNil(o.OrgId) {
		var ret string
		return ret
	}
	return *o.OrgId
}

// GetOrgIdOk returns a tuple with the OrgId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExchangePolicyTemplate) GetOrgIdOk() (*string, bool) {
	if o == nil || IsNil(o.OrgId) {
		return nil, false
	}
	return o.OrgId, true
}

// HasOrgId returns a boolean if a field has been set.
func (o *ExchangePolicyTemplate) HasOrgId() bool {
	if o != nil && !IsNil(o.OrgId) {
		return true
	}

	return false
}

// SetOrgId gets a reference to the given string and assigns it to the OrgId field.
func (o *ExchangePolicyTemplate) SetOrgId(v string) {
	o.OrgId = &v
}

// GetMinMuleVersion returns the MinMuleVersion field value if set, zero value otherwise.
func (o *ExchangePolicyTemplate) GetMinMuleVersion() string {
	if o == nil || IsNil(o.MinMuleVersion) {
		var ret string
		return ret
	}
	return *o.MinMuleVersion
}

// GetMinMuleVersionOk returns a tuple with the MinMuleVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExchangePolicyTemplate) GetMinMuleVersionOk() (*string, bool) {
	if o == nil || IsNil(o.MinMuleVersion) {
		return nil, false
	}
	return o.MinMuleVersion, true
}

// HasMinMuleVersion returns a boolean if a field has been set.
func (o *ExchangePolicyTemplate) HasMinMuleVersion() bool {
	if o != nil && !IsNil(o.MinMuleVersion) {
		return true
	}

	return false
}

// SetMinMuleVersion gets a reference to the given string and assigns it to the MinMuleVersion field.
func (o *ExchangePolicyTemplate) SetMinMuleVersion(v string) {
	o.MinMuleVersion = &v
}

// GetSupportedPoliciesVersions returns the SupportedPoliciesVersions field value if set, zero value otherwise.
func (o *ExchangePolicyTemplate) GetSupportedPoliciesVersions() string {
	if o == nil || IsNil(o.SupportedPoliciesVersions) {
		var ret string
		return ret
	}
	return *o.SupportedPoliciesVersions
}

// GetSupportedPoliciesVersionsOk returns a tuple with the SupportedPoliciesVersions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExchangePolicyTemplate) GetSupportedPoliciesVersionsOk() (*string, bool) {
	if o == nil || IsNil(o.SupportedPoliciesVersions) {
		return nil, false
	}
	return o.SupportedPoliciesVersions, true
}

// HasSupportedPoliciesVersions returns a boolean if a field has been set.
func (o *ExchangePolicyTemplate) HasSupportedPoliciesVersions() bool {
	if o != nil && !IsNil(o.SupportedPoliciesVersions) {
		return true
	}

	return false
}

// SetSupportedPoliciesVersions gets a reference to the given string and assigns it to the SupportedPoliciesVersions field.
func (o *ExchangePolicyTemplate) SetSupportedPoliciesVersions(v string) {
	o.SupportedPoliciesVersions = &v
}

// GetCategory returns the Category field value if set, zero value otherwise.
func (o *ExchangePolicyTemplate) GetCategory() string {
	if o == nil || IsNil(o.Category) {
		var ret string
		return ret
	}
	return *o.Category
}

// GetCategoryOk returns a tuple with the Category field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExchangePolicyTemplate) GetCategoryOk() (*string, bool) {
	if o == nil || IsNil(o.Category) {
		return nil, false
	}
	return o.Category, true
}

// HasCategory returns a boolean if a field has been set.
func (o *ExchangePolicyTemplate) HasCategory() bool {
	if o != nil && !IsNil(o.Category) {
		return true
	}

	return false
}

// SetCategory gets a reference to the given string and assigns it to the Category field.
func (o *ExchangePolicyTemplate) SetCategory(v string) {
	o.Category = &v
}

// GetViolationCategory returns the ViolationCategory field value if set, zero value otherwise.
func (o *ExchangePolicyTemplate) GetViolationCategory() string {
	if o == nil || IsNil(o.ViolationCategory) {
		var ret string
		return ret
	}
	return *o.ViolationCategory
}

// GetViolationCategoryOk returns a tuple with the ViolationCategory field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExchangePolicyTemplate) GetViolationCategoryOk() (*string, bool) {
	if o == nil || IsNil(o.ViolationCategory) {
		return nil, false
	}
	return o.ViolationCategory, true
}

// HasViolationCategory returns a boolean if a field has been set.
func (o *ExchangePolicyTemplate) HasViolationCategory() bool {
	if o != nil && !IsNil(o.ViolationCategory) {
		return true
	}

	return false
}

// SetViolationCategory gets a reference to the given string and assigns it to the ViolationCategory field.
func (o *ExchangePolicyTemplate) SetViolationCategory(v string) {
	o.ViolationCategory = &v
}

// GetResourceLevelSupported returns the ResourceLevelSupported field value if set, zero value otherwise.
func (o *ExchangePolicyTemplate) GetResourceLevelSupported() bool {
	if o == nil || IsNil(o.ResourceLevelSupported) {
		var ret bool
		return ret
	}
	return *o.ResourceLevelSupported
}

// GetResourceLevelSupportedOk returns a tuple with the ResourceLevelSupported field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExchangePolicyTemplate) GetResourceLevelSupportedOk() (*bool, bool) {
	if o == nil || IsNil(o.ResourceLevelSupported) {
		return nil, false
	}
	return o.ResourceLevelSupported, true
}

// HasResourceLevelSupported returns a boolean if a field has been set.
func (o *ExchangePolicyTemplate) HasResourceLevelSupported() bool {
	if o != nil && !IsNil(o.ResourceLevelSupported) {
		return true
	}

	return false
}

// SetResourceLevelSupported gets a reference to the given bool and assigns it to the ResourceLevelSupported field.
func (o *ExchangePolicyTemplate) SetResourceLevelSupported(v bool) {
	o.ResourceLevelSupported = &v
}

// GetEncryptionSupported returns the EncryptionSupported field value if set, zero value otherwise.
func (o *ExchangePolicyTemplate) GetEncryptionSupported() bool {
	if o == nil || IsNil(o.EncryptionSupported) {
		var ret bool
		return ret
	}
	return *o.EncryptionSupported
}

// GetEncryptionSupportedOk returns a tuple with the EncryptionSupported field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExchangePolicyTemplate) GetEncryptionSupportedOk() (*bool, bool) {
	if o == nil || IsNil(o.EncryptionSupported) {
		return nil, false
	}
	return o.EncryptionSupported, true
}

// HasEncryptionSupported returns a boolean if a field has been set.
func (o *ExchangePolicyTemplate) HasEncryptionSupported() bool {
	if o != nil && !IsNil(o.EncryptionSupported) {
		return true
	}

	return false
}

// SetEncryptionSupported gets a reference to the given bool and assigns it to the EncryptionSupported field.
func (o *ExchangePolicyTemplate) SetEncryptionSupported(v bool) {
	o.EncryptionSupported = &v
}

// GetStandalone returns the Standalone field value if set, zero value otherwise.
func (o *ExchangePolicyTemplate) GetStandalone() bool {
	if o == nil || IsNil(o.Standalone) {
		var ret bool
		return ret
	}
	return *o.Standalone
}

// GetStandaloneOk returns a tuple with the Standalone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExchangePolicyTemplate) GetStandaloneOk() (*bool, bool) {
	if o == nil || IsNil(o.Standalone) {
		return nil, false
	}
	return o.Standalone, true
}

// HasStandalone returns a boolean if a field has been set.
func (o *ExchangePolicyTemplate) HasStandalone() bool {
	if o != nil && !IsNil(o.Standalone) {
		return true
	}

	return false
}

// SetStandalone gets a reference to the given bool and assigns it to the Standalone field.
func (o *ExchangePolicyTemplate) SetStandalone(v bool) {
	o.Standalone = &v
}

// GetRequiredCharacteristics returns the RequiredCharacteristics field value if set, zero value otherwise.
func (o *ExchangePolicyTemplate) GetRequiredCharacteristics() []string {
	if o == nil || IsNil(o.RequiredCharacteristics) {
		var ret []string
		return ret
	}
	return o.RequiredCharacteristics
}

// GetRequiredCharacteristicsOk returns a tuple with the RequiredCharacteristics field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExchangePolicyTemplate) GetRequiredCharacteristicsOk() ([]string, bool) {
	if o == nil || IsNil(o.RequiredCharacteristics) {
		return nil, false
	}
	return o.RequiredCharacteristics, true
}

// HasRequiredCharacteristics returns a boolean if a field has been set.
func (o *ExchangePolicyTemplate) HasRequiredCharacteristics() bool {
	if o != nil && !IsNil(o.RequiredCharacteristics) {
		return true
	}

	return false
}

// SetRequiredCharacteristics gets a reference to the given []string and assigns it to the RequiredCharacteristics field.
func (o *ExchangePolicyTemplate) SetRequiredCharacteristics(v []string) {
	o.RequiredCharacteristics = v
}

// GetIdentityManagement returns the IdentityManagement field value if set, zero value otherwise.
func (o *ExchangePolicyTemplate) GetIdentityManagement() ExchangePolicyTemplateIdentityManagement {
	if o == nil || IsNil(o.IdentityManagement) {
		var ret ExchangePolicyTemplateIdentityManagement
		return ret
	}
	return *o.IdentityManagement
}

// GetIdentityManagementOk returns a tuple with the IdentityManagement field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExchangePolicyTemplate) GetIdentityManagementOk() (*ExchangePolicyTemplateIdentityManagement, bool) {
	if o == nil || IsNil(o.IdentityManagement) {
		return nil, false
	}
	return o.IdentityManagement, true
}

// HasIdentityManagement returns a boolean if a field has been set.
func (o *ExchangePolicyTemplate) HasIdentityManagement() bool {
	if o != nil && !IsNil(o.IdentityManagement) {
		return true
	}

	return false
}

// SetIdentityManagement gets a reference to the given ExchangePolicyTemplateIdentityManagement and assigns it to the IdentityManagement field.
func (o *ExchangePolicyTemplate) SetIdentityManagement(v ExchangePolicyTemplateIdentityManagement) {
	o.IdentityManagement = &v
}

// GetProvidedCharacteristics returns the ProvidedCharacteristics field value if set, zero value otherwise.
func (o *ExchangePolicyTemplate) GetProvidedCharacteristics() []string {
	if o == nil || IsNil(o.ProvidedCharacteristics) {
		var ret []string
		return ret
	}
	return o.ProvidedCharacteristics
}

// GetProvidedCharacteristicsOk returns a tuple with the ProvidedCharacteristics field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExchangePolicyTemplate) GetProvidedCharacteristicsOk() ([]string, bool) {
	if o == nil || IsNil(o.ProvidedCharacteristics) {
		return nil, false
	}
	return o.ProvidedCharacteristics, true
}

// HasProvidedCharacteristics returns a boolean if a field has been set.
func (o *ExchangePolicyTemplate) HasProvidedCharacteristics() bool {
	if o != nil && !IsNil(o.ProvidedCharacteristics) {
		return true
	}

	return false
}

// SetProvidedCharacteristics gets a reference to the given []string and assigns it to the ProvidedCharacteristics field.
func (o *ExchangePolicyTemplate) SetProvidedCharacteristics(v []string) {
	o.ProvidedCharacteristics = v
}

// GetRamlSnippet returns the RamlSnippet field value if set, zero value otherwise.
func (o *ExchangePolicyTemplate) GetRamlSnippet() string {
	if o == nil || IsNil(o.RamlSnippet) {
		var ret string
		return ret
	}
	return *o.RamlSnippet
}

// GetRamlSnippetOk returns a tuple with the RamlSnippet field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExchangePolicyTemplate) GetRamlSnippetOk() (*string, bool) {
	if o == nil || IsNil(o.RamlSnippet) {
		return nil, false
	}
	return o.RamlSnippet, true
}

// HasRamlSnippet returns a boolean if a field has been set.
func (o *ExchangePolicyTemplate) HasRamlSnippet() bool {
	if o != nil && !IsNil(o.RamlSnippet) {
		return true
	}

	return false
}

// SetRamlSnippet gets a reference to the given string and assigns it to the RamlSnippet field.
func (o *ExchangePolicyTemplate) SetRamlSnippet(v string) {
	o.RamlSnippet = &v
}

// GetRamlV1Snippet returns the RamlV1Snippet field value if set, zero value otherwise.
func (o *ExchangePolicyTemplate) GetRamlV1Snippet() string {
	if o == nil || IsNil(o.RamlV1Snippet) {
		var ret string
		return ret
	}
	return *o.RamlV1Snippet
}

// GetRamlV1SnippetOk returns a tuple with the RamlV1Snippet field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExchangePolicyTemplate) GetRamlV1SnippetOk() (*string, bool) {
	if o == nil || IsNil(o.RamlV1Snippet) {
		return nil, false
	}
	return o.RamlV1Snippet, true
}

// HasRamlV1Snippet returns a boolean if a field has been set.
func (o *ExchangePolicyTemplate) HasRamlV1Snippet() bool {
	if o != nil && !IsNil(o.RamlV1Snippet) {
		return true
	}

	return false
}

// SetRamlV1Snippet gets a reference to the given string and assigns it to the RamlV1Snippet field.
func (o *ExchangePolicyTemplate) SetRamlV1Snippet(v string) {
	o.RamlV1Snippet = &v
}

// GetOasV2Snippet returns the OasV2Snippet field value if set, zero value otherwise.
func (o *ExchangePolicyTemplate) GetOasV2Snippet() string {
	if o == nil || IsNil(o.OasV2Snippet) {
		var ret string
		return ret
	}
	return *o.OasV2Snippet
}

// GetOasV2SnippetOk returns a tuple with the OasV2Snippet field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExchangePolicyTemplate) GetOasV2SnippetOk() (*string, bool) {
	if o == nil || IsNil(o.OasV2Snippet) {
		return nil, false
	}
	return o.OasV2Snippet, true
}

// HasOasV2Snippet returns a boolean if a field has been set.
func (o *ExchangePolicyTemplate) HasOasV2Snippet() bool {
	if o != nil && !IsNil(o.OasV2Snippet) {
		return true
	}

	return false
}

// SetOasV2Snippet gets a reference to the given string and assigns it to the OasV2Snippet field.
func (o *ExchangePolicyTemplate) SetOasV2Snippet(v string) {
	o.OasV2Snippet = &v
}

// GetOasV3Snippet returns the OasV3Snippet field value if set, zero value otherwise.
func (o *ExchangePolicyTemplate) GetOasV3Snippet() string {
	if o == nil || IsNil(o.OasV3Snippet) {
		var ret string
		return ret
	}
	return *o.OasV3Snippet
}

// GetOasV3SnippetOk returns a tuple with the OasV3Snippet field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExchangePolicyTemplate) GetOasV3SnippetOk() (*string, bool) {
	if o == nil || IsNil(o.OasV3Snippet) {
		return nil, false
	}
	return o.OasV3Snippet, true
}

// HasOasV3Snippet returns a boolean if a field has been set.
func (o *ExchangePolicyTemplate) HasOasV3Snippet() bool {
	if o != nil && !IsNil(o.OasV3Snippet) {
		return true
	}

	return false
}

// SetOasV3Snippet gets a reference to the given string and assigns it to the OasV3Snippet field.
func (o *ExchangePolicyTemplate) SetOasV3Snippet(v string) {
	o.OasV3Snippet = &v
}

// GetApplicable returns the Applicable field value if set, zero value otherwise.
func (o *ExchangePolicyTemplate) GetApplicable() bool {
	if o == nil || IsNil(o.Applicable) {
		var ret bool
		return ret
	}
	return *o.Applicable
}

// GetApplicableOk returns a tuple with the Applicable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExchangePolicyTemplate) GetApplicableOk() (*bool, bool) {
	if o == nil || IsNil(o.Applicable) {
		return nil, false
	}
	return o.Applicable, true
}

// HasApplicable returns a boolean if a field has been set.
func (o *ExchangePolicyTemplate) HasApplicable() bool {
	if o != nil && !IsNil(o.Applicable) {
		return true
	}

	return false
}

// SetApplicable gets a reference to the given bool and assigns it to the Applicable field.
func (o *ExchangePolicyTemplate) SetApplicable(v bool) {
	o.Applicable = &v
}

// GetConfiguration returns the Configuration field value if set, zero value otherwise.
func (o *ExchangePolicyTemplate) GetConfiguration() []PolicyConfiguration {
	if o == nil || IsNil(o.Configuration) {
		var ret []PolicyConfiguration
		return ret
	}
	return o.Configuration
}

// GetConfigurationOk returns a tuple with the Configuration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExchangePolicyTemplate) GetConfigurationOk() ([]PolicyConfiguration, bool) {
	if o == nil || IsNil(o.Configuration) {
		return nil, false
	}
	return o.Configuration, true
}

// HasConfiguration returns a boolean if a field has been set.
func (o *ExchangePolicyTemplate) HasConfiguration() bool {
	if o != nil && !IsNil(o.Configuration) {
		return true
	}

	return false
}

// SetConfiguration gets a reference to the given []PolicyConfiguration and assigns it to the Configuration field.
func (o *ExchangePolicyTemplate) SetConfiguration(v []PolicyConfiguration) {
	o.Configuration = v
}

// GetAllVersions returns the AllVersions field value if set, zero value otherwise.
func (o *ExchangePolicyTemplate) GetAllVersions() []ExchangePolicyTemplateAllVersionsInner {
	if o == nil || IsNil(o.AllVersions) {
		var ret []ExchangePolicyTemplateAllVersionsInner
		return ret
	}
	return o.AllVersions
}

// GetAllVersionsOk returns a tuple with the AllVersions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExchangePolicyTemplate) GetAllVersionsOk() ([]ExchangePolicyTemplateAllVersionsInner, bool) {
	if o == nil || IsNil(o.AllVersions) {
		return nil, false
	}
	return o.AllVersions, true
}

// HasAllVersions returns a boolean if a field has been set.
func (o *ExchangePolicyTemplate) HasAllVersions() bool {
	if o != nil && !IsNil(o.AllVersions) {
		return true
	}

	return false
}

// SetAllVersions gets a reference to the given []ExchangePolicyTemplateAllVersionsInner and assigns it to the AllVersions field.
func (o *ExchangePolicyTemplate) SetAllVersions(v []ExchangePolicyTemplateAllVersionsInner) {
	o.AllVersions = v
}

func (o ExchangePolicyTemplate) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ExchangePolicyTemplate) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Audit) {
		toSerialize["audit"] = o.Audit
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.GroupId) {
		toSerialize["groupId"] = o.GroupId
	}
	if !IsNil(o.AssetId) {
		toSerialize["assetId"] = o.AssetId
	}
	if !IsNil(o.Version) {
		toSerialize["version"] = o.Version
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.IsOOTB) {
		toSerialize["isOOTB"] = o.IsOOTB
	}
	if !IsNil(o.Stage) {
		toSerialize["stage"] = o.Stage
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.YamlMd5) {
		toSerialize["yamlMd5"] = o.YamlMd5
	}
	if !IsNil(o.JarMd5) {
		toSerialize["jarMd5"] = o.JarMd5
	}
	if !IsNil(o.OrgId) {
		toSerialize["orgId"] = o.OrgId
	}
	if !IsNil(o.MinMuleVersion) {
		toSerialize["minMuleVersion"] = o.MinMuleVersion
	}
	if !IsNil(o.SupportedPoliciesVersions) {
		toSerialize["supportedPoliciesVersions"] = o.SupportedPoliciesVersions
	}
	if !IsNil(o.Category) {
		toSerialize["category"] = o.Category
	}
	if !IsNil(o.ViolationCategory) {
		toSerialize["violationCategory"] = o.ViolationCategory
	}
	if !IsNil(o.ResourceLevelSupported) {
		toSerialize["resourceLevelSupported"] = o.ResourceLevelSupported
	}
	if !IsNil(o.EncryptionSupported) {
		toSerialize["encryptionSupported"] = o.EncryptionSupported
	}
	if !IsNil(o.Standalone) {
		toSerialize["standalone"] = o.Standalone
	}
	if !IsNil(o.RequiredCharacteristics) {
		toSerialize["requiredCharacteristics"] = o.RequiredCharacteristics
	}
	if !IsNil(o.IdentityManagement) {
		toSerialize["identityManagement"] = o.IdentityManagement
	}
	if !IsNil(o.ProvidedCharacteristics) {
		toSerialize["providedCharacteristics"] = o.ProvidedCharacteristics
	}
	if !IsNil(o.RamlSnippet) {
		toSerialize["ramlSnippet"] = o.RamlSnippet
	}
	if !IsNil(o.RamlV1Snippet) {
		toSerialize["ramlV1Snippet"] = o.RamlV1Snippet
	}
	if !IsNil(o.OasV2Snippet) {
		toSerialize["oasV2Snippet"] = o.OasV2Snippet
	}
	if !IsNil(o.OasV3Snippet) {
		toSerialize["oasV3Snippet"] = o.OasV3Snippet
	}
	if !IsNil(o.Applicable) {
		toSerialize["applicable"] = o.Applicable
	}
	if !IsNil(o.Configuration) {
		toSerialize["configuration"] = o.Configuration
	}
	if !IsNil(o.AllVersions) {
		toSerialize["allVersions"] = o.AllVersions
	}
	return toSerialize, nil
}

type NullableExchangePolicyTemplate struct {
	value *ExchangePolicyTemplate
	isSet bool
}

func (v NullableExchangePolicyTemplate) Get() *ExchangePolicyTemplate {
	return v.value
}

func (v *NullableExchangePolicyTemplate) Set(val *ExchangePolicyTemplate) {
	v.value = val
	v.isSet = true
}

func (v NullableExchangePolicyTemplate) IsSet() bool {
	return v.isSet
}

func (v *NullableExchangePolicyTemplate) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableExchangePolicyTemplate(val *ExchangePolicyTemplate) *NullableExchangePolicyTemplate {
	return &NullableExchangePolicyTemplate{value: val, isSet: true}
}

func (v NullableExchangePolicyTemplate) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableExchangePolicyTemplate) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


