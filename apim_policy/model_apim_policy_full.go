/*
API Manager Policy API

API Manager Policy API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package apim_policy

import (
	"encoding/json"
)

// checks if the ApimPolicyFull type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApimPolicyFull{}

// ApimPolicyFull struct for ApimPolicyFull
type ApimPolicyFull struct {
	PolicyTemplateId *string `json:"policyTemplateId,omitempty"`
	Type *string `json:"type,omitempty"`
	PolicyId *int32 `json:"policyId,omitempty"`
	Version *int32 `json:"version,omitempty"`
	Order *int32 `json:"order,omitempty"`
	PointcutData []PointcutDataItem `json:"pointcutData,omitempty"`
	Configuration map[string]interface{} `json:"configuration,omitempty"`
	Template *ApimPolicyFullTemplate `json:"template,omitempty"`
}

// NewApimPolicyFull instantiates a new ApimPolicyFull object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApimPolicyFull() *ApimPolicyFull {
	this := ApimPolicyFull{}
	return &this
}

// NewApimPolicyFullWithDefaults instantiates a new ApimPolicyFull object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApimPolicyFullWithDefaults() *ApimPolicyFull {
	this := ApimPolicyFull{}
	return &this
}

// GetPolicyTemplateId returns the PolicyTemplateId field value if set, zero value otherwise.
func (o *ApimPolicyFull) GetPolicyTemplateId() string {
	if o == nil || IsNil(o.PolicyTemplateId) {
		var ret string
		return ret
	}
	return *o.PolicyTemplateId
}

// GetPolicyTemplateIdOk returns a tuple with the PolicyTemplateId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApimPolicyFull) GetPolicyTemplateIdOk() (*string, bool) {
	if o == nil || IsNil(o.PolicyTemplateId) {
		return nil, false
	}
	return o.PolicyTemplateId, true
}

// HasPolicyTemplateId returns a boolean if a field has been set.
func (o *ApimPolicyFull) HasPolicyTemplateId() bool {
	if o != nil && !IsNil(o.PolicyTemplateId) {
		return true
	}

	return false
}

// SetPolicyTemplateId gets a reference to the given string and assigns it to the PolicyTemplateId field.
func (o *ApimPolicyFull) SetPolicyTemplateId(v string) {
	o.PolicyTemplateId = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *ApimPolicyFull) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApimPolicyFull) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *ApimPolicyFull) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *ApimPolicyFull) SetType(v string) {
	o.Type = &v
}

// GetPolicyId returns the PolicyId field value if set, zero value otherwise.
func (o *ApimPolicyFull) GetPolicyId() int32 {
	if o == nil || IsNil(o.PolicyId) {
		var ret int32
		return ret
	}
	return *o.PolicyId
}

// GetPolicyIdOk returns a tuple with the PolicyId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApimPolicyFull) GetPolicyIdOk() (*int32, bool) {
	if o == nil || IsNil(o.PolicyId) {
		return nil, false
	}
	return o.PolicyId, true
}

// HasPolicyId returns a boolean if a field has been set.
func (o *ApimPolicyFull) HasPolicyId() bool {
	if o != nil && !IsNil(o.PolicyId) {
		return true
	}

	return false
}

// SetPolicyId gets a reference to the given int32 and assigns it to the PolicyId field.
func (o *ApimPolicyFull) SetPolicyId(v int32) {
	o.PolicyId = &v
}

// GetVersion returns the Version field value if set, zero value otherwise.
func (o *ApimPolicyFull) GetVersion() int32 {
	if o == nil || IsNil(o.Version) {
		var ret int32
		return ret
	}
	return *o.Version
}

// GetVersionOk returns a tuple with the Version field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApimPolicyFull) GetVersionOk() (*int32, bool) {
	if o == nil || IsNil(o.Version) {
		return nil, false
	}
	return o.Version, true
}

// HasVersion returns a boolean if a field has been set.
func (o *ApimPolicyFull) HasVersion() bool {
	if o != nil && !IsNil(o.Version) {
		return true
	}

	return false
}

// SetVersion gets a reference to the given int32 and assigns it to the Version field.
func (o *ApimPolicyFull) SetVersion(v int32) {
	o.Version = &v
}

// GetOrder returns the Order field value if set, zero value otherwise.
func (o *ApimPolicyFull) GetOrder() int32 {
	if o == nil || IsNil(o.Order) {
		var ret int32
		return ret
	}
	return *o.Order
}

// GetOrderOk returns a tuple with the Order field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApimPolicyFull) GetOrderOk() (*int32, bool) {
	if o == nil || IsNil(o.Order) {
		return nil, false
	}
	return o.Order, true
}

// HasOrder returns a boolean if a field has been set.
func (o *ApimPolicyFull) HasOrder() bool {
	if o != nil && !IsNil(o.Order) {
		return true
	}

	return false
}

// SetOrder gets a reference to the given int32 and assigns it to the Order field.
func (o *ApimPolicyFull) SetOrder(v int32) {
	o.Order = &v
}

// GetPointcutData returns the PointcutData field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApimPolicyFull) GetPointcutData() []PointcutDataItem {
	if o == nil {
		var ret []PointcutDataItem
		return ret
	}
	return o.PointcutData
}

// GetPointcutDataOk returns a tuple with the PointcutData field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApimPolicyFull) GetPointcutDataOk() ([]PointcutDataItem, bool) {
	if o == nil || IsNil(o.PointcutData) {
		return nil, false
	}
	return o.PointcutData, true
}

// HasPointcutData returns a boolean if a field has been set.
func (o *ApimPolicyFull) HasPointcutData() bool {
	if o != nil && IsNil(o.PointcutData) {
		return true
	}

	return false
}

// SetPointcutData gets a reference to the given []PointcutDataItem and assigns it to the PointcutData field.
func (o *ApimPolicyFull) SetPointcutData(v []PointcutDataItem) {
	o.PointcutData = v
}

// GetConfiguration returns the Configuration field value if set, zero value otherwise.
func (o *ApimPolicyFull) GetConfiguration() map[string]interface{} {
	if o == nil || IsNil(o.Configuration) {
		var ret map[string]interface{}
		return ret
	}
	return o.Configuration
}

// GetConfigurationOk returns a tuple with the Configuration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApimPolicyFull) GetConfigurationOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Configuration) {
		return map[string]interface{}{}, false
	}
	return o.Configuration, true
}

// HasConfiguration returns a boolean if a field has been set.
func (o *ApimPolicyFull) HasConfiguration() bool {
	if o != nil && !IsNil(o.Configuration) {
		return true
	}

	return false
}

// SetConfiguration gets a reference to the given map[string]interface{} and assigns it to the Configuration field.
func (o *ApimPolicyFull) SetConfiguration(v map[string]interface{}) {
	o.Configuration = v
}

// GetTemplate returns the Template field value if set, zero value otherwise.
func (o *ApimPolicyFull) GetTemplate() ApimPolicyFullTemplate {
	if o == nil || IsNil(o.Template) {
		var ret ApimPolicyFullTemplate
		return ret
	}
	return *o.Template
}

// GetTemplateOk returns a tuple with the Template field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApimPolicyFull) GetTemplateOk() (*ApimPolicyFullTemplate, bool) {
	if o == nil || IsNil(o.Template) {
		return nil, false
	}
	return o.Template, true
}

// HasTemplate returns a boolean if a field has been set.
func (o *ApimPolicyFull) HasTemplate() bool {
	if o != nil && !IsNil(o.Template) {
		return true
	}

	return false
}

// SetTemplate gets a reference to the given ApimPolicyFullTemplate and assigns it to the Template field.
func (o *ApimPolicyFull) SetTemplate(v ApimPolicyFullTemplate) {
	o.Template = &v
}

func (o ApimPolicyFull) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApimPolicyFull) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.PolicyTemplateId) {
		toSerialize["policyTemplateId"] = o.PolicyTemplateId
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.PolicyId) {
		toSerialize["policyId"] = o.PolicyId
	}
	if !IsNil(o.Version) {
		toSerialize["version"] = o.Version
	}
	if !IsNil(o.Order) {
		toSerialize["order"] = o.Order
	}
	if o.PointcutData != nil {
		toSerialize["pointcutData"] = o.PointcutData
	}
	if !IsNil(o.Configuration) {
		toSerialize["configuration"] = o.Configuration
	}
	if !IsNil(o.Template) {
		toSerialize["template"] = o.Template
	}
	return toSerialize, nil
}

type NullableApimPolicyFull struct {
	value *ApimPolicyFull
	isSet bool
}

func (v NullableApimPolicyFull) Get() *ApimPolicyFull {
	return v.value
}

func (v *NullableApimPolicyFull) Set(val *ApimPolicyFull) {
	v.value = val
	v.isSet = true
}

func (v NullableApimPolicyFull) IsSet() bool {
	return v.isSet
}

func (v *NullableApimPolicyFull) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApimPolicyFull(val *ApimPolicyFull) *NullableApimPolicyFull {
	return &NullableApimPolicyFull{value: val, isSet: true}
}

func (v NullableApimPolicyFull) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApimPolicyFull) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


