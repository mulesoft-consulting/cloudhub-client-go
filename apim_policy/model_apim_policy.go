/*
API Manager Policy API

API Manager Policy API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package apim_policy

import (
	"encoding/json"
)

// checks if the ApimPolicy type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApimPolicy{}

// ApimPolicy struct for ApimPolicy
type ApimPolicy struct {
	Audit *Audit `json:"audit,omitempty"`
	MasterOrganizationId *string `json:"masterOrganizationId,omitempty"`
	OrganizationId *string `json:"organizationId,omitempty"`
	Id *int32 `json:"id,omitempty"`
	PolicyTemplateId *string `json:"policyTemplateId,omitempty"`
	ConfigurationData map[string]interface{} `json:"configurationData,omitempty"`
	Order *int32 `json:"order,omitempty"`
	Disabled *bool `json:"disabled,omitempty"`
	PointcutData []PointcutDataItem `json:"pointcutData,omitempty"`
	GroupId *string `json:"groupId,omitempty"`
	AssetId *string `json:"assetId,omitempty"`
	AssetVersion *string `json:"assetVersion,omitempty"`
	Type *string `json:"type,omitempty"`
	ApiId *int32 `json:"apiId,omitempty"`
}

// NewApimPolicy instantiates a new ApimPolicy object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApimPolicy() *ApimPolicy {
	this := ApimPolicy{}
	return &this
}

// NewApimPolicyWithDefaults instantiates a new ApimPolicy object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApimPolicyWithDefaults() *ApimPolicy {
	this := ApimPolicy{}
	return &this
}

// GetAudit returns the Audit field value if set, zero value otherwise.
func (o *ApimPolicy) GetAudit() Audit {
	if o == nil || IsNil(o.Audit) {
		var ret Audit
		return ret
	}
	return *o.Audit
}

// GetAuditOk returns a tuple with the Audit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApimPolicy) GetAuditOk() (*Audit, bool) {
	if o == nil || IsNil(o.Audit) {
		return nil, false
	}
	return o.Audit, true
}

// HasAudit returns a boolean if a field has been set.
func (o *ApimPolicy) HasAudit() bool {
	if o != nil && !IsNil(o.Audit) {
		return true
	}

	return false
}

// SetAudit gets a reference to the given Audit and assigns it to the Audit field.
func (o *ApimPolicy) SetAudit(v Audit) {
	o.Audit = &v
}

// GetMasterOrganizationId returns the MasterOrganizationId field value if set, zero value otherwise.
func (o *ApimPolicy) GetMasterOrganizationId() string {
	if o == nil || IsNil(o.MasterOrganizationId) {
		var ret string
		return ret
	}
	return *o.MasterOrganizationId
}

// GetMasterOrganizationIdOk returns a tuple with the MasterOrganizationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApimPolicy) GetMasterOrganizationIdOk() (*string, bool) {
	if o == nil || IsNil(o.MasterOrganizationId) {
		return nil, false
	}
	return o.MasterOrganizationId, true
}

// HasMasterOrganizationId returns a boolean if a field has been set.
func (o *ApimPolicy) HasMasterOrganizationId() bool {
	if o != nil && !IsNil(o.MasterOrganizationId) {
		return true
	}

	return false
}

// SetMasterOrganizationId gets a reference to the given string and assigns it to the MasterOrganizationId field.
func (o *ApimPolicy) SetMasterOrganizationId(v string) {
	o.MasterOrganizationId = &v
}

// GetOrganizationId returns the OrganizationId field value if set, zero value otherwise.
func (o *ApimPolicy) GetOrganizationId() string {
	if o == nil || IsNil(o.OrganizationId) {
		var ret string
		return ret
	}
	return *o.OrganizationId
}

// GetOrganizationIdOk returns a tuple with the OrganizationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApimPolicy) GetOrganizationIdOk() (*string, bool) {
	if o == nil || IsNil(o.OrganizationId) {
		return nil, false
	}
	return o.OrganizationId, true
}

// HasOrganizationId returns a boolean if a field has been set.
func (o *ApimPolicy) HasOrganizationId() bool {
	if o != nil && !IsNil(o.OrganizationId) {
		return true
	}

	return false
}

// SetOrganizationId gets a reference to the given string and assigns it to the OrganizationId field.
func (o *ApimPolicy) SetOrganizationId(v string) {
	o.OrganizationId = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ApimPolicy) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApimPolicy) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ApimPolicy) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *ApimPolicy) SetId(v int32) {
	o.Id = &v
}

// GetPolicyTemplateId returns the PolicyTemplateId field value if set, zero value otherwise.
func (o *ApimPolicy) GetPolicyTemplateId() string {
	if o == nil || IsNil(o.PolicyTemplateId) {
		var ret string
		return ret
	}
	return *o.PolicyTemplateId
}

// GetPolicyTemplateIdOk returns a tuple with the PolicyTemplateId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApimPolicy) GetPolicyTemplateIdOk() (*string, bool) {
	if o == nil || IsNil(o.PolicyTemplateId) {
		return nil, false
	}
	return o.PolicyTemplateId, true
}

// HasPolicyTemplateId returns a boolean if a field has been set.
func (o *ApimPolicy) HasPolicyTemplateId() bool {
	if o != nil && !IsNil(o.PolicyTemplateId) {
		return true
	}

	return false
}

// SetPolicyTemplateId gets a reference to the given string and assigns it to the PolicyTemplateId field.
func (o *ApimPolicy) SetPolicyTemplateId(v string) {
	o.PolicyTemplateId = &v
}

// GetConfigurationData returns the ConfigurationData field value if set, zero value otherwise.
func (o *ApimPolicy) GetConfigurationData() map[string]interface{} {
	if o == nil || IsNil(o.ConfigurationData) {
		var ret map[string]interface{}
		return ret
	}
	return o.ConfigurationData
}

// GetConfigurationDataOk returns a tuple with the ConfigurationData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApimPolicy) GetConfigurationDataOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.ConfigurationData) {
		return map[string]interface{}{}, false
	}
	return o.ConfigurationData, true
}

// HasConfigurationData returns a boolean if a field has been set.
func (o *ApimPolicy) HasConfigurationData() bool {
	if o != nil && !IsNil(o.ConfigurationData) {
		return true
	}

	return false
}

// SetConfigurationData gets a reference to the given map[string]interface{} and assigns it to the ConfigurationData field.
func (o *ApimPolicy) SetConfigurationData(v map[string]interface{}) {
	o.ConfigurationData = v
}

// GetOrder returns the Order field value if set, zero value otherwise.
func (o *ApimPolicy) GetOrder() int32 {
	if o == nil || IsNil(o.Order) {
		var ret int32
		return ret
	}
	return *o.Order
}

// GetOrderOk returns a tuple with the Order field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApimPolicy) GetOrderOk() (*int32, bool) {
	if o == nil || IsNil(o.Order) {
		return nil, false
	}
	return o.Order, true
}

// HasOrder returns a boolean if a field has been set.
func (o *ApimPolicy) HasOrder() bool {
	if o != nil && !IsNil(o.Order) {
		return true
	}

	return false
}

// SetOrder gets a reference to the given int32 and assigns it to the Order field.
func (o *ApimPolicy) SetOrder(v int32) {
	o.Order = &v
}

// GetDisabled returns the Disabled field value if set, zero value otherwise.
func (o *ApimPolicy) GetDisabled() bool {
	if o == nil || IsNil(o.Disabled) {
		var ret bool
		return ret
	}
	return *o.Disabled
}

// GetDisabledOk returns a tuple with the Disabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApimPolicy) GetDisabledOk() (*bool, bool) {
	if o == nil || IsNil(o.Disabled) {
		return nil, false
	}
	return o.Disabled, true
}

// HasDisabled returns a boolean if a field has been set.
func (o *ApimPolicy) HasDisabled() bool {
	if o != nil && !IsNil(o.Disabled) {
		return true
	}

	return false
}

// SetDisabled gets a reference to the given bool and assigns it to the Disabled field.
func (o *ApimPolicy) SetDisabled(v bool) {
	o.Disabled = &v
}

// GetPointcutData returns the PointcutData field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApimPolicy) GetPointcutData() []PointcutDataItem {
	if o == nil {
		var ret []PointcutDataItem
		return ret
	}
	return o.PointcutData
}

// GetPointcutDataOk returns a tuple with the PointcutData field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApimPolicy) GetPointcutDataOk() ([]PointcutDataItem, bool) {
	if o == nil || IsNil(o.PointcutData) {
		return nil, false
	}
	return o.PointcutData, true
}

// HasPointcutData returns a boolean if a field has been set.
func (o *ApimPolicy) HasPointcutData() bool {
	if o != nil && IsNil(o.PointcutData) {
		return true
	}

	return false
}

// SetPointcutData gets a reference to the given []PointcutDataItem and assigns it to the PointcutData field.
func (o *ApimPolicy) SetPointcutData(v []PointcutDataItem) {
	o.PointcutData = v
}

// GetGroupId returns the GroupId field value if set, zero value otherwise.
func (o *ApimPolicy) GetGroupId() string {
	if o == nil || IsNil(o.GroupId) {
		var ret string
		return ret
	}
	return *o.GroupId
}

// GetGroupIdOk returns a tuple with the GroupId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApimPolicy) GetGroupIdOk() (*string, bool) {
	if o == nil || IsNil(o.GroupId) {
		return nil, false
	}
	return o.GroupId, true
}

// HasGroupId returns a boolean if a field has been set.
func (o *ApimPolicy) HasGroupId() bool {
	if o != nil && !IsNil(o.GroupId) {
		return true
	}

	return false
}

// SetGroupId gets a reference to the given string and assigns it to the GroupId field.
func (o *ApimPolicy) SetGroupId(v string) {
	o.GroupId = &v
}

// GetAssetId returns the AssetId field value if set, zero value otherwise.
func (o *ApimPolicy) GetAssetId() string {
	if o == nil || IsNil(o.AssetId) {
		var ret string
		return ret
	}
	return *o.AssetId
}

// GetAssetIdOk returns a tuple with the AssetId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApimPolicy) GetAssetIdOk() (*string, bool) {
	if o == nil || IsNil(o.AssetId) {
		return nil, false
	}
	return o.AssetId, true
}

// HasAssetId returns a boolean if a field has been set.
func (o *ApimPolicy) HasAssetId() bool {
	if o != nil && !IsNil(o.AssetId) {
		return true
	}

	return false
}

// SetAssetId gets a reference to the given string and assigns it to the AssetId field.
func (o *ApimPolicy) SetAssetId(v string) {
	o.AssetId = &v
}

// GetAssetVersion returns the AssetVersion field value if set, zero value otherwise.
func (o *ApimPolicy) GetAssetVersion() string {
	if o == nil || IsNil(o.AssetVersion) {
		var ret string
		return ret
	}
	return *o.AssetVersion
}

// GetAssetVersionOk returns a tuple with the AssetVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApimPolicy) GetAssetVersionOk() (*string, bool) {
	if o == nil || IsNil(o.AssetVersion) {
		return nil, false
	}
	return o.AssetVersion, true
}

// HasAssetVersion returns a boolean if a field has been set.
func (o *ApimPolicy) HasAssetVersion() bool {
	if o != nil && !IsNil(o.AssetVersion) {
		return true
	}

	return false
}

// SetAssetVersion gets a reference to the given string and assigns it to the AssetVersion field.
func (o *ApimPolicy) SetAssetVersion(v string) {
	o.AssetVersion = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *ApimPolicy) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApimPolicy) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *ApimPolicy) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *ApimPolicy) SetType(v string) {
	o.Type = &v
}

// GetApiId returns the ApiId field value if set, zero value otherwise.
func (o *ApimPolicy) GetApiId() int32 {
	if o == nil || IsNil(o.ApiId) {
		var ret int32
		return ret
	}
	return *o.ApiId
}

// GetApiIdOk returns a tuple with the ApiId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApimPolicy) GetApiIdOk() (*int32, bool) {
	if o == nil || IsNil(o.ApiId) {
		return nil, false
	}
	return o.ApiId, true
}

// HasApiId returns a boolean if a field has been set.
func (o *ApimPolicy) HasApiId() bool {
	if o != nil && !IsNil(o.ApiId) {
		return true
	}

	return false
}

// SetApiId gets a reference to the given int32 and assigns it to the ApiId field.
func (o *ApimPolicy) SetApiId(v int32) {
	o.ApiId = &v
}

func (o ApimPolicy) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApimPolicy) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Audit) {
		toSerialize["audit"] = o.Audit
	}
	if !IsNil(o.MasterOrganizationId) {
		toSerialize["masterOrganizationId"] = o.MasterOrganizationId
	}
	if !IsNil(o.OrganizationId) {
		toSerialize["organizationId"] = o.OrganizationId
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.PolicyTemplateId) {
		toSerialize["policyTemplateId"] = o.PolicyTemplateId
	}
	if !IsNil(o.ConfigurationData) {
		toSerialize["configurationData"] = o.ConfigurationData
	}
	if !IsNil(o.Order) {
		toSerialize["order"] = o.Order
	}
	if !IsNil(o.Disabled) {
		toSerialize["disabled"] = o.Disabled
	}
	if o.PointcutData != nil {
		toSerialize["pointcutData"] = o.PointcutData
	}
	if !IsNil(o.GroupId) {
		toSerialize["groupId"] = o.GroupId
	}
	if !IsNil(o.AssetId) {
		toSerialize["assetId"] = o.AssetId
	}
	if !IsNil(o.AssetVersion) {
		toSerialize["assetVersion"] = o.AssetVersion
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.ApiId) {
		toSerialize["apiId"] = o.ApiId
	}
	return toSerialize, nil
}

type NullableApimPolicy struct {
	value *ApimPolicy
	isSet bool
}

func (v NullableApimPolicy) Get() *ApimPolicy {
	return v.value
}

func (v *NullableApimPolicy) Set(val *ApimPolicy) {
	v.value = val
	v.isSet = true
}

func (v NullableApimPolicy) IsSet() bool {
	return v.isSet
}

func (v *NullableApimPolicy) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApimPolicy(val *ApimPolicy) *NullableApimPolicy {
	return &NullableApimPolicy{value: val, isSet: true}
}

func (v NullableApimPolicy) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApimPolicy) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


