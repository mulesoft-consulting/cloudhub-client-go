/*
API Manager Policy API

API Manager Policy API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package apim_policy

import (
	"encoding/json"
)

// checks if the PolicyConfigurationConfigurationInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PolicyConfigurationConfigurationInner{}

// PolicyConfigurationConfigurationInner struct for PolicyConfigurationConfigurationInner
type PolicyConfigurationConfigurationInner struct {
	PropertyName *string `json:"propertyName,omitempty"`
	Type *string `json:"type,omitempty"`
}

// NewPolicyConfigurationConfigurationInner instantiates a new PolicyConfigurationConfigurationInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPolicyConfigurationConfigurationInner() *PolicyConfigurationConfigurationInner {
	this := PolicyConfigurationConfigurationInner{}
	return &this
}

// NewPolicyConfigurationConfigurationInnerWithDefaults instantiates a new PolicyConfigurationConfigurationInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPolicyConfigurationConfigurationInnerWithDefaults() *PolicyConfigurationConfigurationInner {
	this := PolicyConfigurationConfigurationInner{}
	return &this
}

// GetPropertyName returns the PropertyName field value if set, zero value otherwise.
func (o *PolicyConfigurationConfigurationInner) GetPropertyName() string {
	if o == nil || IsNil(o.PropertyName) {
		var ret string
		return ret
	}
	return *o.PropertyName
}

// GetPropertyNameOk returns a tuple with the PropertyName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PolicyConfigurationConfigurationInner) GetPropertyNameOk() (*string, bool) {
	if o == nil || IsNil(o.PropertyName) {
		return nil, false
	}
	return o.PropertyName, true
}

// HasPropertyName returns a boolean if a field has been set.
func (o *PolicyConfigurationConfigurationInner) HasPropertyName() bool {
	if o != nil && !IsNil(o.PropertyName) {
		return true
	}

	return false
}

// SetPropertyName gets a reference to the given string and assigns it to the PropertyName field.
func (o *PolicyConfigurationConfigurationInner) SetPropertyName(v string) {
	o.PropertyName = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *PolicyConfigurationConfigurationInner) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PolicyConfigurationConfigurationInner) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *PolicyConfigurationConfigurationInner) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *PolicyConfigurationConfigurationInner) SetType(v string) {
	o.Type = &v
}

func (o PolicyConfigurationConfigurationInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PolicyConfigurationConfigurationInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.PropertyName) {
		toSerialize["propertyName"] = o.PropertyName
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	return toSerialize, nil
}

type NullablePolicyConfigurationConfigurationInner struct {
	value *PolicyConfigurationConfigurationInner
	isSet bool
}

func (v NullablePolicyConfigurationConfigurationInner) Get() *PolicyConfigurationConfigurationInner {
	return v.value
}

func (v *NullablePolicyConfigurationConfigurationInner) Set(val *PolicyConfigurationConfigurationInner) {
	v.value = val
	v.isSet = true
}

func (v NullablePolicyConfigurationConfigurationInner) IsSet() bool {
	return v.isSet
}

func (v *NullablePolicyConfigurationConfigurationInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePolicyConfigurationConfigurationInner(val *PolicyConfigurationConfigurationInner) *NullablePolicyConfigurationConfigurationInner {
	return &NullablePolicyConfigurationConfigurationInner{value: val, isSet: true}
}

func (v NullablePolicyConfigurationConfigurationInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePolicyConfigurationConfigurationInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


