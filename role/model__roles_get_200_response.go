/*
Role API

Description of the Role API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package role

import (
	"encoding/json"
)

// checks if the RolesGet200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RolesGet200Response{}

// RolesGet200Response struct for RolesGet200Response
type RolesGet200Response struct {
	Data []Role `json:"data,omitempty"`
	Total *int32 `json:"total,omitempty"`
}

// NewRolesGet200Response instantiates a new RolesGet200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRolesGet200Response() *RolesGet200Response {
	this := RolesGet200Response{}
	return &this
}

// NewRolesGet200ResponseWithDefaults instantiates a new RolesGet200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRolesGet200ResponseWithDefaults() *RolesGet200Response {
	this := RolesGet200Response{}
	return &this
}

// GetData returns the Data field value if set, zero value otherwise.
func (o *RolesGet200Response) GetData() []Role {
	if o == nil || IsNil(o.Data) {
		var ret []Role
		return ret
	}
	return o.Data
}

// GetDataOk returns a tuple with the Data field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RolesGet200Response) GetDataOk() ([]Role, bool) {
	if o == nil || IsNil(o.Data) {
		return nil, false
	}
	return o.Data, true
}

// HasData returns a boolean if a field has been set.
func (o *RolesGet200Response) HasData() bool {
	if o != nil && !IsNil(o.Data) {
		return true
	}

	return false
}

// SetData gets a reference to the given []Role and assigns it to the Data field.
func (o *RolesGet200Response) SetData(v []Role) {
	o.Data = v
}

// GetTotal returns the Total field value if set, zero value otherwise.
func (o *RolesGet200Response) GetTotal() int32 {
	if o == nil || IsNil(o.Total) {
		var ret int32
		return ret
	}
	return *o.Total
}

// GetTotalOk returns a tuple with the Total field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RolesGet200Response) GetTotalOk() (*int32, bool) {
	if o == nil || IsNil(o.Total) {
		return nil, false
	}
	return o.Total, true
}

// HasTotal returns a boolean if a field has been set.
func (o *RolesGet200Response) HasTotal() bool {
	if o != nil && !IsNil(o.Total) {
		return true
	}

	return false
}

// SetTotal gets a reference to the given int32 and assigns it to the Total field.
func (o *RolesGet200Response) SetTotal(v int32) {
	o.Total = &v
}

func (o RolesGet200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RolesGet200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Data) {
		toSerialize["data"] = o.Data
	}
	if !IsNil(o.Total) {
		toSerialize["total"] = o.Total
	}
	return toSerialize, nil
}

type NullableRolesGet200Response struct {
	value *RolesGet200Response
	isSet bool
}

func (v NullableRolesGet200Response) Get() *RolesGet200Response {
	return v.value
}

func (v *NullableRolesGet200Response) Set(val *RolesGet200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableRolesGet200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableRolesGet200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRolesGet200Response(val *RolesGet200Response) *NullableRolesGet200Response {
	return &NullableRolesGet200Response{value: val, isSet: true}
}

func (v NullableRolesGet200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRolesGet200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


