/*
Deployment

The Application Manager API exists to provide Mule Application management operations from Anypoint Control Planes to any Runtime Plane, with capabilities that include:   - Deploying a Mule Application or API to a Mule Runtime   - Scaling up or down a running application   - Managing application settings (ie: properties)   - Deleting a Mule Application Deployment   - Changing artifact version or configurations of a deployment   - Starting, Stopping or Restarting applications   - etc. This API currently supports deployments to Runtime Fabric and CloudHub 2.0 targets only. 

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package application_manager_v2

import (
	"encoding/json"
)

// checks if the MuleAgentSchedulingService type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MuleAgentSchedulingService{}

// MuleAgentSchedulingService struct for MuleAgentSchedulingService
type MuleAgentSchedulingService struct {
	ApplicationName *string `json:"applicationName,omitempty"`
	Schedulers []Scheduler `json:"schedulers,omitempty"`
}

// NewMuleAgentSchedulingService instantiates a new MuleAgentSchedulingService object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMuleAgentSchedulingService() *MuleAgentSchedulingService {
	this := MuleAgentSchedulingService{}
	return &this
}

// NewMuleAgentSchedulingServiceWithDefaults instantiates a new MuleAgentSchedulingService object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMuleAgentSchedulingServiceWithDefaults() *MuleAgentSchedulingService {
	this := MuleAgentSchedulingService{}
	return &this
}

// GetApplicationName returns the ApplicationName field value if set, zero value otherwise.
func (o *MuleAgentSchedulingService) GetApplicationName() string {
	if o == nil || IsNil(o.ApplicationName) {
		var ret string
		return ret
	}
	return *o.ApplicationName
}

// GetApplicationNameOk returns a tuple with the ApplicationName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MuleAgentSchedulingService) GetApplicationNameOk() (*string, bool) {
	if o == nil || IsNil(o.ApplicationName) {
		return nil, false
	}
	return o.ApplicationName, true
}

// HasApplicationName returns a boolean if a field has been set.
func (o *MuleAgentSchedulingService) HasApplicationName() bool {
	if o != nil && !IsNil(o.ApplicationName) {
		return true
	}

	return false
}

// SetApplicationName gets a reference to the given string and assigns it to the ApplicationName field.
func (o *MuleAgentSchedulingService) SetApplicationName(v string) {
	o.ApplicationName = &v
}

// GetSchedulers returns the Schedulers field value if set, zero value otherwise.
func (o *MuleAgentSchedulingService) GetSchedulers() []Scheduler {
	if o == nil || IsNil(o.Schedulers) {
		var ret []Scheduler
		return ret
	}
	return o.Schedulers
}

// GetSchedulersOk returns a tuple with the Schedulers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MuleAgentSchedulingService) GetSchedulersOk() ([]Scheduler, bool) {
	if o == nil || IsNil(o.Schedulers) {
		return nil, false
	}
	return o.Schedulers, true
}

// HasSchedulers returns a boolean if a field has been set.
func (o *MuleAgentSchedulingService) HasSchedulers() bool {
	if o != nil && !IsNil(o.Schedulers) {
		return true
	}

	return false
}

// SetSchedulers gets a reference to the given []Scheduler and assigns it to the Schedulers field.
func (o *MuleAgentSchedulingService) SetSchedulers(v []Scheduler) {
	o.Schedulers = v
}

func (o MuleAgentSchedulingService) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MuleAgentSchedulingService) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ApplicationName) {
		toSerialize["applicationName"] = o.ApplicationName
	}
	if !IsNil(o.Schedulers) {
		toSerialize["schedulers"] = o.Schedulers
	}
	return toSerialize, nil
}

type NullableMuleAgentSchedulingService struct {
	value *MuleAgentSchedulingService
	isSet bool
}

func (v NullableMuleAgentSchedulingService) Get() *MuleAgentSchedulingService {
	return v.value
}

func (v *NullableMuleAgentSchedulingService) Set(val *MuleAgentSchedulingService) {
	v.value = val
	v.isSet = true
}

func (v NullableMuleAgentSchedulingService) IsSet() bool {
	return v.isSet
}

func (v *NullableMuleAgentSchedulingService) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMuleAgentSchedulingService(val *MuleAgentSchedulingService) *NullableMuleAgentSchedulingService {
	return &NullableMuleAgentSchedulingService{value: val, isSet: true}
}

func (v NullableMuleAgentSchedulingService) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMuleAgentSchedulingService) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


