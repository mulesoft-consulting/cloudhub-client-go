/*
Deployment

The Application Manager API exists to provide Mule Application management operations from Anypoint Control Planes to any Runtime Plane, with capabilities that include:   - Deploying a Mule Application or API to a Mule Runtime   - Scaling up or down a running application   - Managing application settings (ie: properties)   - Deleting a Mule Application Deployment   - Changing artifact version or configurations of a deployment   - Starting, Stopping or Restarting applications   - etc. This API currently supports deployments to Runtime Fabric and CloudHub 2.0 targets only. 

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package application_manager_v2

import (
	"encoding/json"
)

// checks if the AppConfiguration type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AppConfiguration{}

// AppConfiguration The configuration of the application.
type AppConfiguration struct {
	MuleAgentApplicationPropertiesService *MuleAgentAppPropService `json:"mule.agent.application.properties.service,omitempty"`
	MuleAgentLoggingService *MuleAgentLoggingService `json:"mule.agent.logging.service,omitempty"`
	MuleAgentSchedulingService *MuleAgentSchedulingService `json:"mule.agent.scheduling.service,omitempty"`
}

// NewAppConfiguration instantiates a new AppConfiguration object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAppConfiguration() *AppConfiguration {
	this := AppConfiguration{}
	return &this
}

// NewAppConfigurationWithDefaults instantiates a new AppConfiguration object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAppConfigurationWithDefaults() *AppConfiguration {
	this := AppConfiguration{}
	return &this
}

// GetMuleAgentApplicationPropertiesService returns the MuleAgentApplicationPropertiesService field value if set, zero value otherwise.
func (o *AppConfiguration) GetMuleAgentApplicationPropertiesService() MuleAgentAppPropService {
	if o == nil || IsNil(o.MuleAgentApplicationPropertiesService) {
		var ret MuleAgentAppPropService
		return ret
	}
	return *o.MuleAgentApplicationPropertiesService
}

// GetMuleAgentApplicationPropertiesServiceOk returns a tuple with the MuleAgentApplicationPropertiesService field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppConfiguration) GetMuleAgentApplicationPropertiesServiceOk() (*MuleAgentAppPropService, bool) {
	if o == nil || IsNil(o.MuleAgentApplicationPropertiesService) {
		return nil, false
	}
	return o.MuleAgentApplicationPropertiesService, true
}

// HasMuleAgentApplicationPropertiesService returns a boolean if a field has been set.
func (o *AppConfiguration) HasMuleAgentApplicationPropertiesService() bool {
	if o != nil && !IsNil(o.MuleAgentApplicationPropertiesService) {
		return true
	}

	return false
}

// SetMuleAgentApplicationPropertiesService gets a reference to the given MuleAgentAppPropService and assigns it to the MuleAgentApplicationPropertiesService field.
func (o *AppConfiguration) SetMuleAgentApplicationPropertiesService(v MuleAgentAppPropService) {
	o.MuleAgentApplicationPropertiesService = &v
}

// GetMuleAgentLoggingService returns the MuleAgentLoggingService field value if set, zero value otherwise.
func (o *AppConfiguration) GetMuleAgentLoggingService() MuleAgentLoggingService {
	if o == nil || IsNil(o.MuleAgentLoggingService) {
		var ret MuleAgentLoggingService
		return ret
	}
	return *o.MuleAgentLoggingService
}

// GetMuleAgentLoggingServiceOk returns a tuple with the MuleAgentLoggingService field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppConfiguration) GetMuleAgentLoggingServiceOk() (*MuleAgentLoggingService, bool) {
	if o == nil || IsNil(o.MuleAgentLoggingService) {
		return nil, false
	}
	return o.MuleAgentLoggingService, true
}

// HasMuleAgentLoggingService returns a boolean if a field has been set.
func (o *AppConfiguration) HasMuleAgentLoggingService() bool {
	if o != nil && !IsNil(o.MuleAgentLoggingService) {
		return true
	}

	return false
}

// SetMuleAgentLoggingService gets a reference to the given MuleAgentLoggingService and assigns it to the MuleAgentLoggingService field.
func (o *AppConfiguration) SetMuleAgentLoggingService(v MuleAgentLoggingService) {
	o.MuleAgentLoggingService = &v
}

// GetMuleAgentSchedulingService returns the MuleAgentSchedulingService field value if set, zero value otherwise.
func (o *AppConfiguration) GetMuleAgentSchedulingService() MuleAgentSchedulingService {
	if o == nil || IsNil(o.MuleAgentSchedulingService) {
		var ret MuleAgentSchedulingService
		return ret
	}
	return *o.MuleAgentSchedulingService
}

// GetMuleAgentSchedulingServiceOk returns a tuple with the MuleAgentSchedulingService field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppConfiguration) GetMuleAgentSchedulingServiceOk() (*MuleAgentSchedulingService, bool) {
	if o == nil || IsNil(o.MuleAgentSchedulingService) {
		return nil, false
	}
	return o.MuleAgentSchedulingService, true
}

// HasMuleAgentSchedulingService returns a boolean if a field has been set.
func (o *AppConfiguration) HasMuleAgentSchedulingService() bool {
	if o != nil && !IsNil(o.MuleAgentSchedulingService) {
		return true
	}

	return false
}

// SetMuleAgentSchedulingService gets a reference to the given MuleAgentSchedulingService and assigns it to the MuleAgentSchedulingService field.
func (o *AppConfiguration) SetMuleAgentSchedulingService(v MuleAgentSchedulingService) {
	o.MuleAgentSchedulingService = &v
}

func (o AppConfiguration) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AppConfiguration) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.MuleAgentApplicationPropertiesService) {
		toSerialize["mule.agent.application.properties.service"] = o.MuleAgentApplicationPropertiesService
	}
	if !IsNil(o.MuleAgentLoggingService) {
		toSerialize["mule.agent.logging.service"] = o.MuleAgentLoggingService
	}
	if !IsNil(o.MuleAgentSchedulingService) {
		toSerialize["mule.agent.scheduling.service"] = o.MuleAgentSchedulingService
	}
	return toSerialize, nil
}

type NullableAppConfiguration struct {
	value *AppConfiguration
	isSet bool
}

func (v NullableAppConfiguration) Get() *AppConfiguration {
	return v.value
}

func (v *NullableAppConfiguration) Set(val *AppConfiguration) {
	v.value = val
	v.isSet = true
}

func (v NullableAppConfiguration) IsSet() bool {
	return v.isSet
}

func (v *NullableAppConfiguration) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAppConfiguration(val *AppConfiguration) *NullableAppConfiguration {
	return &NullableAppConfiguration{value: val, isSet: true}
}

func (v NullableAppConfiguration) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAppConfiguration) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


