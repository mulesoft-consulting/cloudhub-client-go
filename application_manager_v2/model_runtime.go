/*
Deployment

The Application Manager API exists to provide Mule Application management operations from Anypoint Control Planes to any Runtime Plane, with capabilities that include:   - Deploying a Mule Application or API to a Mule Runtime   - Scaling up or down a running application   - Managing application settings (ie: properties)   - Deleting a Mule Application Deployment   - Changing artifact version or configurations of a deployment   - Starting, Stopping or Restarting applications   - etc. This API currently supports deployments to Runtime Fabric and CloudHub 2.0 targets only. 

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package application_manager_v2

import (
	"encoding/json"
)

// checks if the Runtime type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Runtime{}

// Runtime On deployment operations use this object to pick the runtime version. All fields are optional.    * On new deployment operations, if not provided, the default values will be used.   * On re-deployment operations, if not provided, the current version of the deployment will be used. 
type Runtime struct {
	// On deployment operations it can be set to:   * a full image version with tag (i.e \"4.6.0:40e-java17\"),   * a base version with a partial tag not indicating the java version (i.e. \"4.6.0:40\")   * or only a base version (i.e. \"4.6.0\"). Defaults to the latest image version. This field has precedence over the legacy 'target.deploymentSettings.runtimeVersion' 
	Version *string `json:"version,omitempty"`
	// On deployment operations it can be set to one of:   * \"LTS\"   * \"EDGE\"   * \"LEGACY\". Defaults to \"EDGE\". This field has precedence over the legacy 'target.deploymentSettings.runtimeReleaseChannel'. Learn more on release channels at https://docs.mulesoft.com/release-notes/mule-runtime/lts-edge-release-cadence. 
	ReleaseChannel *string `json:"releaseChannel,omitempty"`
	// On deployment operations it can be set to one of:   * \"8\"   * \"17\" Defaults to \"8\". Learn more about Java support at https://docs.mulesoft.com/general/java-support. 
	Java *string `json:"java,omitempty"`
}

// NewRuntime instantiates a new Runtime object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRuntime() *Runtime {
	this := Runtime{}
	return &this
}

// NewRuntimeWithDefaults instantiates a new Runtime object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRuntimeWithDefaults() *Runtime {
	this := Runtime{}
	return &this
}

// GetVersion returns the Version field value if set, zero value otherwise.
func (o *Runtime) GetVersion() string {
	if o == nil || IsNil(o.Version) {
		var ret string
		return ret
	}
	return *o.Version
}

// GetVersionOk returns a tuple with the Version field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Runtime) GetVersionOk() (*string, bool) {
	if o == nil || IsNil(o.Version) {
		return nil, false
	}
	return o.Version, true
}

// HasVersion returns a boolean if a field has been set.
func (o *Runtime) HasVersion() bool {
	if o != nil && !IsNil(o.Version) {
		return true
	}

	return false
}

// SetVersion gets a reference to the given string and assigns it to the Version field.
func (o *Runtime) SetVersion(v string) {
	o.Version = &v
}

// GetReleaseChannel returns the ReleaseChannel field value if set, zero value otherwise.
func (o *Runtime) GetReleaseChannel() string {
	if o == nil || IsNil(o.ReleaseChannel) {
		var ret string
		return ret
	}
	return *o.ReleaseChannel
}

// GetReleaseChannelOk returns a tuple with the ReleaseChannel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Runtime) GetReleaseChannelOk() (*string, bool) {
	if o == nil || IsNil(o.ReleaseChannel) {
		return nil, false
	}
	return o.ReleaseChannel, true
}

// HasReleaseChannel returns a boolean if a field has been set.
func (o *Runtime) HasReleaseChannel() bool {
	if o != nil && !IsNil(o.ReleaseChannel) {
		return true
	}

	return false
}

// SetReleaseChannel gets a reference to the given string and assigns it to the ReleaseChannel field.
func (o *Runtime) SetReleaseChannel(v string) {
	o.ReleaseChannel = &v
}

// GetJava returns the Java field value if set, zero value otherwise.
func (o *Runtime) GetJava() string {
	if o == nil || IsNil(o.Java) {
		var ret string
		return ret
	}
	return *o.Java
}

// GetJavaOk returns a tuple with the Java field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Runtime) GetJavaOk() (*string, bool) {
	if o == nil || IsNil(o.Java) {
		return nil, false
	}
	return o.Java, true
}

// HasJava returns a boolean if a field has been set.
func (o *Runtime) HasJava() bool {
	if o != nil && !IsNil(o.Java) {
		return true
	}

	return false
}

// SetJava gets a reference to the given string and assigns it to the Java field.
func (o *Runtime) SetJava(v string) {
	o.Java = &v
}

func (o Runtime) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Runtime) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Version) {
		toSerialize["version"] = o.Version
	}
	if !IsNil(o.ReleaseChannel) {
		toSerialize["releaseChannel"] = o.ReleaseChannel
	}
	if !IsNil(o.Java) {
		toSerialize["java"] = o.Java
	}
	return toSerialize, nil
}

type NullableRuntime struct {
	value *Runtime
	isSet bool
}

func (v NullableRuntime) Get() *Runtime {
	return v.value
}

func (v *NullableRuntime) Set(val *Runtime) {
	v.value = val
	v.isSet = true
}

func (v NullableRuntime) IsSet() bool {
	return v.isSet
}

func (v *NullableRuntime) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRuntime(val *Runtime) *NullableRuntime {
	return &NullableRuntime{value: val, isSet: true}
}

func (v NullableRuntime) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRuntime) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


