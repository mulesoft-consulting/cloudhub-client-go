/*
Deployment

The Application Manager API exists to provide Mule Application management operations from Anypoint Control Planes to any Runtime Plane, with capabilities that include:   - Deploying a Mule Application or API to a Mule Runtime   - Scaling up or down a running application   - Managing application settings (ie: properties)   - Deleting a Mule Application Deployment   - Changing artifact version or configurations of a deployment   - Starting, Stopping or Restarting applications   - etc. This API currently supports deployments to Runtime Fabric and CloudHub 2.0 targets only. 

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package application_manager_v2

import (
	"encoding/json"
)

// checks if the DeploymentItem type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DeploymentItem{}

// DeploymentItem struct for DeploymentItem
type DeploymentItem struct {
	// deployment id
	Id *string `json:"id,omitempty"`
	// the name of deployment
	Name *string `json:"name,omitempty"`
	CreationDate *int64 `json:"creationDate,omitempty"`
	LastModifiedDate *int64 `json:"lastModifiedDate,omitempty"`
	Target *DeploymentItemTarget `json:"target,omitempty"`
	Status *string `json:"status,omitempty"`
	Application *DeploymentItemApplication `json:"application,omitempty"`
	CurrentRuntimeVersion *string `json:"currentRuntimeVersion,omitempty"`
	LastSuccessfulRuntimeVersion *string `json:"lastSuccessfulRuntimeVersion,omitempty"`
}

// NewDeploymentItem instantiates a new DeploymentItem object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDeploymentItem() *DeploymentItem {
	this := DeploymentItem{}
	return &this
}

// NewDeploymentItemWithDefaults instantiates a new DeploymentItem object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDeploymentItemWithDefaults() *DeploymentItem {
	this := DeploymentItem{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *DeploymentItem) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeploymentItem) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *DeploymentItem) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *DeploymentItem) SetId(v string) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *DeploymentItem) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeploymentItem) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *DeploymentItem) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *DeploymentItem) SetName(v string) {
	o.Name = &v
}

// GetCreationDate returns the CreationDate field value if set, zero value otherwise.
func (o *DeploymentItem) GetCreationDate() int64 {
	if o == nil || IsNil(o.CreationDate) {
		var ret int64
		return ret
	}
	return *o.CreationDate
}

// GetCreationDateOk returns a tuple with the CreationDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeploymentItem) GetCreationDateOk() (*int64, bool) {
	if o == nil || IsNil(o.CreationDate) {
		return nil, false
	}
	return o.CreationDate, true
}

// HasCreationDate returns a boolean if a field has been set.
func (o *DeploymentItem) HasCreationDate() bool {
	if o != nil && !IsNil(o.CreationDate) {
		return true
	}

	return false
}

// SetCreationDate gets a reference to the given int64 and assigns it to the CreationDate field.
func (o *DeploymentItem) SetCreationDate(v int64) {
	o.CreationDate = &v
}

// GetLastModifiedDate returns the LastModifiedDate field value if set, zero value otherwise.
func (o *DeploymentItem) GetLastModifiedDate() int64 {
	if o == nil || IsNil(o.LastModifiedDate) {
		var ret int64
		return ret
	}
	return *o.LastModifiedDate
}

// GetLastModifiedDateOk returns a tuple with the LastModifiedDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeploymentItem) GetLastModifiedDateOk() (*int64, bool) {
	if o == nil || IsNil(o.LastModifiedDate) {
		return nil, false
	}
	return o.LastModifiedDate, true
}

// HasLastModifiedDate returns a boolean if a field has been set.
func (o *DeploymentItem) HasLastModifiedDate() bool {
	if o != nil && !IsNil(o.LastModifiedDate) {
		return true
	}

	return false
}

// SetLastModifiedDate gets a reference to the given int64 and assigns it to the LastModifiedDate field.
func (o *DeploymentItem) SetLastModifiedDate(v int64) {
	o.LastModifiedDate = &v
}

// GetTarget returns the Target field value if set, zero value otherwise.
func (o *DeploymentItem) GetTarget() DeploymentItemTarget {
	if o == nil || IsNil(o.Target) {
		var ret DeploymentItemTarget
		return ret
	}
	return *o.Target
}

// GetTargetOk returns a tuple with the Target field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeploymentItem) GetTargetOk() (*DeploymentItemTarget, bool) {
	if o == nil || IsNil(o.Target) {
		return nil, false
	}
	return o.Target, true
}

// HasTarget returns a boolean if a field has been set.
func (o *DeploymentItem) HasTarget() bool {
	if o != nil && !IsNil(o.Target) {
		return true
	}

	return false
}

// SetTarget gets a reference to the given DeploymentItemTarget and assigns it to the Target field.
func (o *DeploymentItem) SetTarget(v DeploymentItemTarget) {
	o.Target = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *DeploymentItem) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeploymentItem) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *DeploymentItem) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *DeploymentItem) SetStatus(v string) {
	o.Status = &v
}

// GetApplication returns the Application field value if set, zero value otherwise.
func (o *DeploymentItem) GetApplication() DeploymentItemApplication {
	if o == nil || IsNil(o.Application) {
		var ret DeploymentItemApplication
		return ret
	}
	return *o.Application
}

// GetApplicationOk returns a tuple with the Application field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeploymentItem) GetApplicationOk() (*DeploymentItemApplication, bool) {
	if o == nil || IsNil(o.Application) {
		return nil, false
	}
	return o.Application, true
}

// HasApplication returns a boolean if a field has been set.
func (o *DeploymentItem) HasApplication() bool {
	if o != nil && !IsNil(o.Application) {
		return true
	}

	return false
}

// SetApplication gets a reference to the given DeploymentItemApplication and assigns it to the Application field.
func (o *DeploymentItem) SetApplication(v DeploymentItemApplication) {
	o.Application = &v
}

// GetCurrentRuntimeVersion returns the CurrentRuntimeVersion field value if set, zero value otherwise.
func (o *DeploymentItem) GetCurrentRuntimeVersion() string {
	if o == nil || IsNil(o.CurrentRuntimeVersion) {
		var ret string
		return ret
	}
	return *o.CurrentRuntimeVersion
}

// GetCurrentRuntimeVersionOk returns a tuple with the CurrentRuntimeVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeploymentItem) GetCurrentRuntimeVersionOk() (*string, bool) {
	if o == nil || IsNil(o.CurrentRuntimeVersion) {
		return nil, false
	}
	return o.CurrentRuntimeVersion, true
}

// HasCurrentRuntimeVersion returns a boolean if a field has been set.
func (o *DeploymentItem) HasCurrentRuntimeVersion() bool {
	if o != nil && !IsNil(o.CurrentRuntimeVersion) {
		return true
	}

	return false
}

// SetCurrentRuntimeVersion gets a reference to the given string and assigns it to the CurrentRuntimeVersion field.
func (o *DeploymentItem) SetCurrentRuntimeVersion(v string) {
	o.CurrentRuntimeVersion = &v
}

// GetLastSuccessfulRuntimeVersion returns the LastSuccessfulRuntimeVersion field value if set, zero value otherwise.
func (o *DeploymentItem) GetLastSuccessfulRuntimeVersion() string {
	if o == nil || IsNil(o.LastSuccessfulRuntimeVersion) {
		var ret string
		return ret
	}
	return *o.LastSuccessfulRuntimeVersion
}

// GetLastSuccessfulRuntimeVersionOk returns a tuple with the LastSuccessfulRuntimeVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeploymentItem) GetLastSuccessfulRuntimeVersionOk() (*string, bool) {
	if o == nil || IsNil(o.LastSuccessfulRuntimeVersion) {
		return nil, false
	}
	return o.LastSuccessfulRuntimeVersion, true
}

// HasLastSuccessfulRuntimeVersion returns a boolean if a field has been set.
func (o *DeploymentItem) HasLastSuccessfulRuntimeVersion() bool {
	if o != nil && !IsNil(o.LastSuccessfulRuntimeVersion) {
		return true
	}

	return false
}

// SetLastSuccessfulRuntimeVersion gets a reference to the given string and assigns it to the LastSuccessfulRuntimeVersion field.
func (o *DeploymentItem) SetLastSuccessfulRuntimeVersion(v string) {
	o.LastSuccessfulRuntimeVersion = &v
}

func (o DeploymentItem) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DeploymentItem) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.CreationDate) {
		toSerialize["creationDate"] = o.CreationDate
	}
	if !IsNil(o.LastModifiedDate) {
		toSerialize["lastModifiedDate"] = o.LastModifiedDate
	}
	if !IsNil(o.Target) {
		toSerialize["target"] = o.Target
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.Application) {
		toSerialize["application"] = o.Application
	}
	if !IsNil(o.CurrentRuntimeVersion) {
		toSerialize["currentRuntimeVersion"] = o.CurrentRuntimeVersion
	}
	if !IsNil(o.LastSuccessfulRuntimeVersion) {
		toSerialize["lastSuccessfulRuntimeVersion"] = o.LastSuccessfulRuntimeVersion
	}
	return toSerialize, nil
}

type NullableDeploymentItem struct {
	value *DeploymentItem
	isSet bool
}

func (v NullableDeploymentItem) Get() *DeploymentItem {
	return v.value
}

func (v *NullableDeploymentItem) Set(val *DeploymentItem) {
	v.value = val
	v.isSet = true
}

func (v NullableDeploymentItem) IsSet() bool {
	return v.isSet
}

func (v *NullableDeploymentItem) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeploymentItem(val *DeploymentItem) *NullableDeploymentItem {
	return &NullableDeploymentItem{value: val, isSet: true}
}

func (v NullableDeploymentItem) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeploymentItem) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


