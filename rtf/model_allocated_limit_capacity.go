/*
Runtime Fabrics API

Runtime Fabrics API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package rtf

import (
	"encoding/json"
)

// checks if the AllocatedLimitCapacity type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AllocatedLimitCapacity{}

// AllocatedLimitCapacity struct for AllocatedLimitCapacity
type AllocatedLimitCapacity struct {
	Cpu *int32 `json:"cpu,omitempty"`
	CpuMillis *int32 `json:"cpuMillis,omitempty"`
	Memory *string `json:"memory,omitempty"`
	MemoryMi *int32 `json:"memoryMi,omitempty"`
	Pods *int32 `json:"pods,omitempty"`
}

// NewAllocatedLimitCapacity instantiates a new AllocatedLimitCapacity object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAllocatedLimitCapacity() *AllocatedLimitCapacity {
	this := AllocatedLimitCapacity{}
	return &this
}

// NewAllocatedLimitCapacityWithDefaults instantiates a new AllocatedLimitCapacity object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAllocatedLimitCapacityWithDefaults() *AllocatedLimitCapacity {
	this := AllocatedLimitCapacity{}
	return &this
}

// GetCpu returns the Cpu field value if set, zero value otherwise.
func (o *AllocatedLimitCapacity) GetCpu() int32 {
	if o == nil || IsNil(o.Cpu) {
		var ret int32
		return ret
	}
	return *o.Cpu
}

// GetCpuOk returns a tuple with the Cpu field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AllocatedLimitCapacity) GetCpuOk() (*int32, bool) {
	if o == nil || IsNil(o.Cpu) {
		return nil, false
	}
	return o.Cpu, true
}

// HasCpu returns a boolean if a field has been set.
func (o *AllocatedLimitCapacity) HasCpu() bool {
	if o != nil && !IsNil(o.Cpu) {
		return true
	}

	return false
}

// SetCpu gets a reference to the given int32 and assigns it to the Cpu field.
func (o *AllocatedLimitCapacity) SetCpu(v int32) {
	o.Cpu = &v
}

// GetCpuMillis returns the CpuMillis field value if set, zero value otherwise.
func (o *AllocatedLimitCapacity) GetCpuMillis() int32 {
	if o == nil || IsNil(o.CpuMillis) {
		var ret int32
		return ret
	}
	return *o.CpuMillis
}

// GetCpuMillisOk returns a tuple with the CpuMillis field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AllocatedLimitCapacity) GetCpuMillisOk() (*int32, bool) {
	if o == nil || IsNil(o.CpuMillis) {
		return nil, false
	}
	return o.CpuMillis, true
}

// HasCpuMillis returns a boolean if a field has been set.
func (o *AllocatedLimitCapacity) HasCpuMillis() bool {
	if o != nil && !IsNil(o.CpuMillis) {
		return true
	}

	return false
}

// SetCpuMillis gets a reference to the given int32 and assigns it to the CpuMillis field.
func (o *AllocatedLimitCapacity) SetCpuMillis(v int32) {
	o.CpuMillis = &v
}

// GetMemory returns the Memory field value if set, zero value otherwise.
func (o *AllocatedLimitCapacity) GetMemory() string {
	if o == nil || IsNil(o.Memory) {
		var ret string
		return ret
	}
	return *o.Memory
}

// GetMemoryOk returns a tuple with the Memory field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AllocatedLimitCapacity) GetMemoryOk() (*string, bool) {
	if o == nil || IsNil(o.Memory) {
		return nil, false
	}
	return o.Memory, true
}

// HasMemory returns a boolean if a field has been set.
func (o *AllocatedLimitCapacity) HasMemory() bool {
	if o != nil && !IsNil(o.Memory) {
		return true
	}

	return false
}

// SetMemory gets a reference to the given string and assigns it to the Memory field.
func (o *AllocatedLimitCapacity) SetMemory(v string) {
	o.Memory = &v
}

// GetMemoryMi returns the MemoryMi field value if set, zero value otherwise.
func (o *AllocatedLimitCapacity) GetMemoryMi() int32 {
	if o == nil || IsNil(o.MemoryMi) {
		var ret int32
		return ret
	}
	return *o.MemoryMi
}

// GetMemoryMiOk returns a tuple with the MemoryMi field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AllocatedLimitCapacity) GetMemoryMiOk() (*int32, bool) {
	if o == nil || IsNil(o.MemoryMi) {
		return nil, false
	}
	return o.MemoryMi, true
}

// HasMemoryMi returns a boolean if a field has been set.
func (o *AllocatedLimitCapacity) HasMemoryMi() bool {
	if o != nil && !IsNil(o.MemoryMi) {
		return true
	}

	return false
}

// SetMemoryMi gets a reference to the given int32 and assigns it to the MemoryMi field.
func (o *AllocatedLimitCapacity) SetMemoryMi(v int32) {
	o.MemoryMi = &v
}

// GetPods returns the Pods field value if set, zero value otherwise.
func (o *AllocatedLimitCapacity) GetPods() int32 {
	if o == nil || IsNil(o.Pods) {
		var ret int32
		return ret
	}
	return *o.Pods
}

// GetPodsOk returns a tuple with the Pods field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AllocatedLimitCapacity) GetPodsOk() (*int32, bool) {
	if o == nil || IsNil(o.Pods) {
		return nil, false
	}
	return o.Pods, true
}

// HasPods returns a boolean if a field has been set.
func (o *AllocatedLimitCapacity) HasPods() bool {
	if o != nil && !IsNil(o.Pods) {
		return true
	}

	return false
}

// SetPods gets a reference to the given int32 and assigns it to the Pods field.
func (o *AllocatedLimitCapacity) SetPods(v int32) {
	o.Pods = &v
}

func (o AllocatedLimitCapacity) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AllocatedLimitCapacity) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Cpu) {
		toSerialize["cpu"] = o.Cpu
	}
	if !IsNil(o.CpuMillis) {
		toSerialize["cpuMillis"] = o.CpuMillis
	}
	if !IsNil(o.Memory) {
		toSerialize["memory"] = o.Memory
	}
	if !IsNil(o.MemoryMi) {
		toSerialize["memoryMi"] = o.MemoryMi
	}
	if !IsNil(o.Pods) {
		toSerialize["pods"] = o.Pods
	}
	return toSerialize, nil
}

type NullableAllocatedLimitCapacity struct {
	value *AllocatedLimitCapacity
	isSet bool
}

func (v NullableAllocatedLimitCapacity) Get() *AllocatedLimitCapacity {
	return v.value
}

func (v *NullableAllocatedLimitCapacity) Set(val *AllocatedLimitCapacity) {
	v.value = val
	v.isSet = true
}

func (v NullableAllocatedLimitCapacity) IsSet() bool {
	return v.isSet
}

func (v *NullableAllocatedLimitCapacity) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAllocatedLimitCapacity(val *AllocatedLimitCapacity) *NullableAllocatedLimitCapacity {
	return &NullableAllocatedLimitCapacity{value: val, isSet: true}
}

func (v NullableAllocatedLimitCapacity) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAllocatedLimitCapacity) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


