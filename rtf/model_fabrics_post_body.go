/*
Runtime Fabrics API

Runtime Fabrics API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package rtf

import (
	"encoding/json"
)

// checks if the FabricsPostBody type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FabricsPostBody{}

// FabricsPostBody struct for FabricsPostBody
type FabricsPostBody struct {
	Name *string `json:"name,omitempty"`
	Vendor *string `json:"vendor,omitempty"`
	Region *string `json:"region,omitempty"`
}

// NewFabricsPostBody instantiates a new FabricsPostBody object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFabricsPostBody() *FabricsPostBody {
	this := FabricsPostBody{}
	return &this
}

// NewFabricsPostBodyWithDefaults instantiates a new FabricsPostBody object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFabricsPostBodyWithDefaults() *FabricsPostBody {
	this := FabricsPostBody{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *FabricsPostBody) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FabricsPostBody) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *FabricsPostBody) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *FabricsPostBody) SetName(v string) {
	o.Name = &v
}

// GetVendor returns the Vendor field value if set, zero value otherwise.
func (o *FabricsPostBody) GetVendor() string {
	if o == nil || IsNil(o.Vendor) {
		var ret string
		return ret
	}
	return *o.Vendor
}

// GetVendorOk returns a tuple with the Vendor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FabricsPostBody) GetVendorOk() (*string, bool) {
	if o == nil || IsNil(o.Vendor) {
		return nil, false
	}
	return o.Vendor, true
}

// HasVendor returns a boolean if a field has been set.
func (o *FabricsPostBody) HasVendor() bool {
	if o != nil && !IsNil(o.Vendor) {
		return true
	}

	return false
}

// SetVendor gets a reference to the given string and assigns it to the Vendor field.
func (o *FabricsPostBody) SetVendor(v string) {
	o.Vendor = &v
}

// GetRegion returns the Region field value if set, zero value otherwise.
func (o *FabricsPostBody) GetRegion() string {
	if o == nil || IsNil(o.Region) {
		var ret string
		return ret
	}
	return *o.Region
}

// GetRegionOk returns a tuple with the Region field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FabricsPostBody) GetRegionOk() (*string, bool) {
	if o == nil || IsNil(o.Region) {
		return nil, false
	}
	return o.Region, true
}

// HasRegion returns a boolean if a field has been set.
func (o *FabricsPostBody) HasRegion() bool {
	if o != nil && !IsNil(o.Region) {
		return true
	}

	return false
}

// SetRegion gets a reference to the given string and assigns it to the Region field.
func (o *FabricsPostBody) SetRegion(v string) {
	o.Region = &v
}

func (o FabricsPostBody) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FabricsPostBody) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Vendor) {
		toSerialize["vendor"] = o.Vendor
	}
	if !IsNil(o.Region) {
		toSerialize["region"] = o.Region
	}
	return toSerialize, nil
}

type NullableFabricsPostBody struct {
	value *FabricsPostBody
	isSet bool
}

func (v NullableFabricsPostBody) Get() *FabricsPostBody {
	return v.value
}

func (v *NullableFabricsPostBody) Set(val *FabricsPostBody) {
	v.value = val
	v.isSet = true
}

func (v NullableFabricsPostBody) IsSet() bool {
	return v.isSet
}

func (v *NullableFabricsPostBody) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFabricsPostBody(val *FabricsPostBody) *NullableFabricsPostBody {
	return &NullableFabricsPostBody{value: val, isSet: true}
}

func (v NullableFabricsPostBody) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFabricsPostBody) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


