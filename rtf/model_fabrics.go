/*
Runtime Fabrics API

Runtime Fabrics API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package rtf

import (
	"encoding/json"
)

// checks if the Fabrics type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Fabrics{}

// Fabrics struct for Fabrics
type Fabrics struct {
	Id *string `json:"id,omitempty"`
	Name *string `json:"name,omitempty"`
	Region *string `json:"region,omitempty"`
	Vendor *string `json:"vendor,omitempty"`
	VendorMetadata map[string]interface{} `json:"vendorMetadata,omitempty"`
	OrganizationId *string `json:"organizationId,omitempty"`
	Version *string `json:"version,omitempty"`
	Status *string `json:"status,omitempty"`
	DesiredVersion *string `json:"desiredVersion,omitempty"`
	AvailableUpgradeVersion *string `json:"availableUpgradeVersion,omitempty"`
	CreatedAt *int64 `json:"createdAt,omitempty"`
	Upgrade *FabricsUpgrade `json:"upgrade,omitempty"`
	Nodes []FabricsNode `json:"nodes,omitempty"`
	ActivationData *string `json:"activationData,omitempty"`
	SecondsSinceHeartbeat *int32 `json:"secondsSinceHeartbeat,omitempty"`
	KubernetesVersion *string `json:"kubernetesVersion,omitempty"`
	Namespace *string `json:"namespace,omitempty"`
	LicenseExpiryDate *int64 `json:"licenseExpiryDate,omitempty"`
	IsManaged *bool `json:"isManaged,omitempty"`
	IsHelmManaged *bool `json:"isHelmManaged,omitempty"`
	AppScopedLogForwarding *bool `json:"appScopedLogForwarding,omitempty"`
	ClusterConfigurationLevel *string `json:"clusterConfigurationLevel,omitempty"`
	Features *Features `json:"features,omitempty"`
	Ingress *Ingress `json:"ingress,omitempty"`
}

// NewFabrics instantiates a new Fabrics object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFabrics() *Fabrics {
	this := Fabrics{}
	return &this
}

// NewFabricsWithDefaults instantiates a new Fabrics object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFabricsWithDefaults() *Fabrics {
	this := Fabrics{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *Fabrics) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Fabrics) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *Fabrics) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *Fabrics) SetId(v string) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *Fabrics) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Fabrics) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *Fabrics) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *Fabrics) SetName(v string) {
	o.Name = &v
}

// GetRegion returns the Region field value if set, zero value otherwise.
func (o *Fabrics) GetRegion() string {
	if o == nil || IsNil(o.Region) {
		var ret string
		return ret
	}
	return *o.Region
}

// GetRegionOk returns a tuple with the Region field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Fabrics) GetRegionOk() (*string, bool) {
	if o == nil || IsNil(o.Region) {
		return nil, false
	}
	return o.Region, true
}

// HasRegion returns a boolean if a field has been set.
func (o *Fabrics) HasRegion() bool {
	if o != nil && !IsNil(o.Region) {
		return true
	}

	return false
}

// SetRegion gets a reference to the given string and assigns it to the Region field.
func (o *Fabrics) SetRegion(v string) {
	o.Region = &v
}

// GetVendor returns the Vendor field value if set, zero value otherwise.
func (o *Fabrics) GetVendor() string {
	if o == nil || IsNil(o.Vendor) {
		var ret string
		return ret
	}
	return *o.Vendor
}

// GetVendorOk returns a tuple with the Vendor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Fabrics) GetVendorOk() (*string, bool) {
	if o == nil || IsNil(o.Vendor) {
		return nil, false
	}
	return o.Vendor, true
}

// HasVendor returns a boolean if a field has been set.
func (o *Fabrics) HasVendor() bool {
	if o != nil && !IsNil(o.Vendor) {
		return true
	}

	return false
}

// SetVendor gets a reference to the given string and assigns it to the Vendor field.
func (o *Fabrics) SetVendor(v string) {
	o.Vendor = &v
}

// GetVendorMetadata returns the VendorMetadata field value if set, zero value otherwise.
func (o *Fabrics) GetVendorMetadata() map[string]interface{} {
	if o == nil || IsNil(o.VendorMetadata) {
		var ret map[string]interface{}
		return ret
	}
	return o.VendorMetadata
}

// GetVendorMetadataOk returns a tuple with the VendorMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Fabrics) GetVendorMetadataOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.VendorMetadata) {
		return map[string]interface{}{}, false
	}
	return o.VendorMetadata, true
}

// HasVendorMetadata returns a boolean if a field has been set.
func (o *Fabrics) HasVendorMetadata() bool {
	if o != nil && !IsNil(o.VendorMetadata) {
		return true
	}

	return false
}

// SetVendorMetadata gets a reference to the given map[string]interface{} and assigns it to the VendorMetadata field.
func (o *Fabrics) SetVendorMetadata(v map[string]interface{}) {
	o.VendorMetadata = v
}

// GetOrganizationId returns the OrganizationId field value if set, zero value otherwise.
func (o *Fabrics) GetOrganizationId() string {
	if o == nil || IsNil(o.OrganizationId) {
		var ret string
		return ret
	}
	return *o.OrganizationId
}

// GetOrganizationIdOk returns a tuple with the OrganizationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Fabrics) GetOrganizationIdOk() (*string, bool) {
	if o == nil || IsNil(o.OrganizationId) {
		return nil, false
	}
	return o.OrganizationId, true
}

// HasOrganizationId returns a boolean if a field has been set.
func (o *Fabrics) HasOrganizationId() bool {
	if o != nil && !IsNil(o.OrganizationId) {
		return true
	}

	return false
}

// SetOrganizationId gets a reference to the given string and assigns it to the OrganizationId field.
func (o *Fabrics) SetOrganizationId(v string) {
	o.OrganizationId = &v
}

// GetVersion returns the Version field value if set, zero value otherwise.
func (o *Fabrics) GetVersion() string {
	if o == nil || IsNil(o.Version) {
		var ret string
		return ret
	}
	return *o.Version
}

// GetVersionOk returns a tuple with the Version field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Fabrics) GetVersionOk() (*string, bool) {
	if o == nil || IsNil(o.Version) {
		return nil, false
	}
	return o.Version, true
}

// HasVersion returns a boolean if a field has been set.
func (o *Fabrics) HasVersion() bool {
	if o != nil && !IsNil(o.Version) {
		return true
	}

	return false
}

// SetVersion gets a reference to the given string and assigns it to the Version field.
func (o *Fabrics) SetVersion(v string) {
	o.Version = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *Fabrics) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Fabrics) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *Fabrics) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *Fabrics) SetStatus(v string) {
	o.Status = &v
}

// GetDesiredVersion returns the DesiredVersion field value if set, zero value otherwise.
func (o *Fabrics) GetDesiredVersion() string {
	if o == nil || IsNil(o.DesiredVersion) {
		var ret string
		return ret
	}
	return *o.DesiredVersion
}

// GetDesiredVersionOk returns a tuple with the DesiredVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Fabrics) GetDesiredVersionOk() (*string, bool) {
	if o == nil || IsNil(o.DesiredVersion) {
		return nil, false
	}
	return o.DesiredVersion, true
}

// HasDesiredVersion returns a boolean if a field has been set.
func (o *Fabrics) HasDesiredVersion() bool {
	if o != nil && !IsNil(o.DesiredVersion) {
		return true
	}

	return false
}

// SetDesiredVersion gets a reference to the given string and assigns it to the DesiredVersion field.
func (o *Fabrics) SetDesiredVersion(v string) {
	o.DesiredVersion = &v
}

// GetAvailableUpgradeVersion returns the AvailableUpgradeVersion field value if set, zero value otherwise.
func (o *Fabrics) GetAvailableUpgradeVersion() string {
	if o == nil || IsNil(o.AvailableUpgradeVersion) {
		var ret string
		return ret
	}
	return *o.AvailableUpgradeVersion
}

// GetAvailableUpgradeVersionOk returns a tuple with the AvailableUpgradeVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Fabrics) GetAvailableUpgradeVersionOk() (*string, bool) {
	if o == nil || IsNil(o.AvailableUpgradeVersion) {
		return nil, false
	}
	return o.AvailableUpgradeVersion, true
}

// HasAvailableUpgradeVersion returns a boolean if a field has been set.
func (o *Fabrics) HasAvailableUpgradeVersion() bool {
	if o != nil && !IsNil(o.AvailableUpgradeVersion) {
		return true
	}

	return false
}

// SetAvailableUpgradeVersion gets a reference to the given string and assigns it to the AvailableUpgradeVersion field.
func (o *Fabrics) SetAvailableUpgradeVersion(v string) {
	o.AvailableUpgradeVersion = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *Fabrics) GetCreatedAt() int64 {
	if o == nil || IsNil(o.CreatedAt) {
		var ret int64
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Fabrics) GetCreatedAtOk() (*int64, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *Fabrics) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given int64 and assigns it to the CreatedAt field.
func (o *Fabrics) SetCreatedAt(v int64) {
	o.CreatedAt = &v
}

// GetUpgrade returns the Upgrade field value if set, zero value otherwise.
func (o *Fabrics) GetUpgrade() FabricsUpgrade {
	if o == nil || IsNil(o.Upgrade) {
		var ret FabricsUpgrade
		return ret
	}
	return *o.Upgrade
}

// GetUpgradeOk returns a tuple with the Upgrade field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Fabrics) GetUpgradeOk() (*FabricsUpgrade, bool) {
	if o == nil || IsNil(o.Upgrade) {
		return nil, false
	}
	return o.Upgrade, true
}

// HasUpgrade returns a boolean if a field has been set.
func (o *Fabrics) HasUpgrade() bool {
	if o != nil && !IsNil(o.Upgrade) {
		return true
	}

	return false
}

// SetUpgrade gets a reference to the given FabricsUpgrade and assigns it to the Upgrade field.
func (o *Fabrics) SetUpgrade(v FabricsUpgrade) {
	o.Upgrade = &v
}

// GetNodes returns the Nodes field value if set, zero value otherwise.
func (o *Fabrics) GetNodes() []FabricsNode {
	if o == nil || IsNil(o.Nodes) {
		var ret []FabricsNode
		return ret
	}
	return o.Nodes
}

// GetNodesOk returns a tuple with the Nodes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Fabrics) GetNodesOk() ([]FabricsNode, bool) {
	if o == nil || IsNil(o.Nodes) {
		return nil, false
	}
	return o.Nodes, true
}

// HasNodes returns a boolean if a field has been set.
func (o *Fabrics) HasNodes() bool {
	if o != nil && !IsNil(o.Nodes) {
		return true
	}

	return false
}

// SetNodes gets a reference to the given []FabricsNode and assigns it to the Nodes field.
func (o *Fabrics) SetNodes(v []FabricsNode) {
	o.Nodes = v
}

// GetActivationData returns the ActivationData field value if set, zero value otherwise.
func (o *Fabrics) GetActivationData() string {
	if o == nil || IsNil(o.ActivationData) {
		var ret string
		return ret
	}
	return *o.ActivationData
}

// GetActivationDataOk returns a tuple with the ActivationData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Fabrics) GetActivationDataOk() (*string, bool) {
	if o == nil || IsNil(o.ActivationData) {
		return nil, false
	}
	return o.ActivationData, true
}

// HasActivationData returns a boolean if a field has been set.
func (o *Fabrics) HasActivationData() bool {
	if o != nil && !IsNil(o.ActivationData) {
		return true
	}

	return false
}

// SetActivationData gets a reference to the given string and assigns it to the ActivationData field.
func (o *Fabrics) SetActivationData(v string) {
	o.ActivationData = &v
}

// GetSecondsSinceHeartbeat returns the SecondsSinceHeartbeat field value if set, zero value otherwise.
func (o *Fabrics) GetSecondsSinceHeartbeat() int32 {
	if o == nil || IsNil(o.SecondsSinceHeartbeat) {
		var ret int32
		return ret
	}
	return *o.SecondsSinceHeartbeat
}

// GetSecondsSinceHeartbeatOk returns a tuple with the SecondsSinceHeartbeat field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Fabrics) GetSecondsSinceHeartbeatOk() (*int32, bool) {
	if o == nil || IsNil(o.SecondsSinceHeartbeat) {
		return nil, false
	}
	return o.SecondsSinceHeartbeat, true
}

// HasSecondsSinceHeartbeat returns a boolean if a field has been set.
func (o *Fabrics) HasSecondsSinceHeartbeat() bool {
	if o != nil && !IsNil(o.SecondsSinceHeartbeat) {
		return true
	}

	return false
}

// SetSecondsSinceHeartbeat gets a reference to the given int32 and assigns it to the SecondsSinceHeartbeat field.
func (o *Fabrics) SetSecondsSinceHeartbeat(v int32) {
	o.SecondsSinceHeartbeat = &v
}

// GetKubernetesVersion returns the KubernetesVersion field value if set, zero value otherwise.
func (o *Fabrics) GetKubernetesVersion() string {
	if o == nil || IsNil(o.KubernetesVersion) {
		var ret string
		return ret
	}
	return *o.KubernetesVersion
}

// GetKubernetesVersionOk returns a tuple with the KubernetesVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Fabrics) GetKubernetesVersionOk() (*string, bool) {
	if o == nil || IsNil(o.KubernetesVersion) {
		return nil, false
	}
	return o.KubernetesVersion, true
}

// HasKubernetesVersion returns a boolean if a field has been set.
func (o *Fabrics) HasKubernetesVersion() bool {
	if o != nil && !IsNil(o.KubernetesVersion) {
		return true
	}

	return false
}

// SetKubernetesVersion gets a reference to the given string and assigns it to the KubernetesVersion field.
func (o *Fabrics) SetKubernetesVersion(v string) {
	o.KubernetesVersion = &v
}

// GetNamespace returns the Namespace field value if set, zero value otherwise.
func (o *Fabrics) GetNamespace() string {
	if o == nil || IsNil(o.Namespace) {
		var ret string
		return ret
	}
	return *o.Namespace
}

// GetNamespaceOk returns a tuple with the Namespace field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Fabrics) GetNamespaceOk() (*string, bool) {
	if o == nil || IsNil(o.Namespace) {
		return nil, false
	}
	return o.Namespace, true
}

// HasNamespace returns a boolean if a field has been set.
func (o *Fabrics) HasNamespace() bool {
	if o != nil && !IsNil(o.Namespace) {
		return true
	}

	return false
}

// SetNamespace gets a reference to the given string and assigns it to the Namespace field.
func (o *Fabrics) SetNamespace(v string) {
	o.Namespace = &v
}

// GetLicenseExpiryDate returns the LicenseExpiryDate field value if set, zero value otherwise.
func (o *Fabrics) GetLicenseExpiryDate() int64 {
	if o == nil || IsNil(o.LicenseExpiryDate) {
		var ret int64
		return ret
	}
	return *o.LicenseExpiryDate
}

// GetLicenseExpiryDateOk returns a tuple with the LicenseExpiryDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Fabrics) GetLicenseExpiryDateOk() (*int64, bool) {
	if o == nil || IsNil(o.LicenseExpiryDate) {
		return nil, false
	}
	return o.LicenseExpiryDate, true
}

// HasLicenseExpiryDate returns a boolean if a field has been set.
func (o *Fabrics) HasLicenseExpiryDate() bool {
	if o != nil && !IsNil(o.LicenseExpiryDate) {
		return true
	}

	return false
}

// SetLicenseExpiryDate gets a reference to the given int64 and assigns it to the LicenseExpiryDate field.
func (o *Fabrics) SetLicenseExpiryDate(v int64) {
	o.LicenseExpiryDate = &v
}

// GetIsManaged returns the IsManaged field value if set, zero value otherwise.
func (o *Fabrics) GetIsManaged() bool {
	if o == nil || IsNil(o.IsManaged) {
		var ret bool
		return ret
	}
	return *o.IsManaged
}

// GetIsManagedOk returns a tuple with the IsManaged field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Fabrics) GetIsManagedOk() (*bool, bool) {
	if o == nil || IsNil(o.IsManaged) {
		return nil, false
	}
	return o.IsManaged, true
}

// HasIsManaged returns a boolean if a field has been set.
func (o *Fabrics) HasIsManaged() bool {
	if o != nil && !IsNil(o.IsManaged) {
		return true
	}

	return false
}

// SetIsManaged gets a reference to the given bool and assigns it to the IsManaged field.
func (o *Fabrics) SetIsManaged(v bool) {
	o.IsManaged = &v
}

// GetIsHelmManaged returns the IsHelmManaged field value if set, zero value otherwise.
func (o *Fabrics) GetIsHelmManaged() bool {
	if o == nil || IsNil(o.IsHelmManaged) {
		var ret bool
		return ret
	}
	return *o.IsHelmManaged
}

// GetIsHelmManagedOk returns a tuple with the IsHelmManaged field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Fabrics) GetIsHelmManagedOk() (*bool, bool) {
	if o == nil || IsNil(o.IsHelmManaged) {
		return nil, false
	}
	return o.IsHelmManaged, true
}

// HasIsHelmManaged returns a boolean if a field has been set.
func (o *Fabrics) HasIsHelmManaged() bool {
	if o != nil && !IsNil(o.IsHelmManaged) {
		return true
	}

	return false
}

// SetIsHelmManaged gets a reference to the given bool and assigns it to the IsHelmManaged field.
func (o *Fabrics) SetIsHelmManaged(v bool) {
	o.IsHelmManaged = &v
}

// GetAppScopedLogForwarding returns the AppScopedLogForwarding field value if set, zero value otherwise.
func (o *Fabrics) GetAppScopedLogForwarding() bool {
	if o == nil || IsNil(o.AppScopedLogForwarding) {
		var ret bool
		return ret
	}
	return *o.AppScopedLogForwarding
}

// GetAppScopedLogForwardingOk returns a tuple with the AppScopedLogForwarding field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Fabrics) GetAppScopedLogForwardingOk() (*bool, bool) {
	if o == nil || IsNil(o.AppScopedLogForwarding) {
		return nil, false
	}
	return o.AppScopedLogForwarding, true
}

// HasAppScopedLogForwarding returns a boolean if a field has been set.
func (o *Fabrics) HasAppScopedLogForwarding() bool {
	if o != nil && !IsNil(o.AppScopedLogForwarding) {
		return true
	}

	return false
}

// SetAppScopedLogForwarding gets a reference to the given bool and assigns it to the AppScopedLogForwarding field.
func (o *Fabrics) SetAppScopedLogForwarding(v bool) {
	o.AppScopedLogForwarding = &v
}

// GetClusterConfigurationLevel returns the ClusterConfigurationLevel field value if set, zero value otherwise.
func (o *Fabrics) GetClusterConfigurationLevel() string {
	if o == nil || IsNil(o.ClusterConfigurationLevel) {
		var ret string
		return ret
	}
	return *o.ClusterConfigurationLevel
}

// GetClusterConfigurationLevelOk returns a tuple with the ClusterConfigurationLevel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Fabrics) GetClusterConfigurationLevelOk() (*string, bool) {
	if o == nil || IsNil(o.ClusterConfigurationLevel) {
		return nil, false
	}
	return o.ClusterConfigurationLevel, true
}

// HasClusterConfigurationLevel returns a boolean if a field has been set.
func (o *Fabrics) HasClusterConfigurationLevel() bool {
	if o != nil && !IsNil(o.ClusterConfigurationLevel) {
		return true
	}

	return false
}

// SetClusterConfigurationLevel gets a reference to the given string and assigns it to the ClusterConfigurationLevel field.
func (o *Fabrics) SetClusterConfigurationLevel(v string) {
	o.ClusterConfigurationLevel = &v
}

// GetFeatures returns the Features field value if set, zero value otherwise.
func (o *Fabrics) GetFeatures() Features {
	if o == nil || IsNil(o.Features) {
		var ret Features
		return ret
	}
	return *o.Features
}

// GetFeaturesOk returns a tuple with the Features field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Fabrics) GetFeaturesOk() (*Features, bool) {
	if o == nil || IsNil(o.Features) {
		return nil, false
	}
	return o.Features, true
}

// HasFeatures returns a boolean if a field has been set.
func (o *Fabrics) HasFeatures() bool {
	if o != nil && !IsNil(o.Features) {
		return true
	}

	return false
}

// SetFeatures gets a reference to the given Features and assigns it to the Features field.
func (o *Fabrics) SetFeatures(v Features) {
	o.Features = &v
}

// GetIngress returns the Ingress field value if set, zero value otherwise.
func (o *Fabrics) GetIngress() Ingress {
	if o == nil || IsNil(o.Ingress) {
		var ret Ingress
		return ret
	}
	return *o.Ingress
}

// GetIngressOk returns a tuple with the Ingress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Fabrics) GetIngressOk() (*Ingress, bool) {
	if o == nil || IsNil(o.Ingress) {
		return nil, false
	}
	return o.Ingress, true
}

// HasIngress returns a boolean if a field has been set.
func (o *Fabrics) HasIngress() bool {
	if o != nil && !IsNil(o.Ingress) {
		return true
	}

	return false
}

// SetIngress gets a reference to the given Ingress and assigns it to the Ingress field.
func (o *Fabrics) SetIngress(v Ingress) {
	o.Ingress = &v
}

func (o Fabrics) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Fabrics) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Region) {
		toSerialize["region"] = o.Region
	}
	if !IsNil(o.Vendor) {
		toSerialize["vendor"] = o.Vendor
	}
	if !IsNil(o.VendorMetadata) {
		toSerialize["vendorMetadata"] = o.VendorMetadata
	}
	if !IsNil(o.OrganizationId) {
		toSerialize["organizationId"] = o.OrganizationId
	}
	if !IsNil(o.Version) {
		toSerialize["version"] = o.Version
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.DesiredVersion) {
		toSerialize["desiredVersion"] = o.DesiredVersion
	}
	if !IsNil(o.AvailableUpgradeVersion) {
		toSerialize["availableUpgradeVersion"] = o.AvailableUpgradeVersion
	}
	if !IsNil(o.CreatedAt) {
		toSerialize["createdAt"] = o.CreatedAt
	}
	if !IsNil(o.Upgrade) {
		toSerialize["upgrade"] = o.Upgrade
	}
	if !IsNil(o.Nodes) {
		toSerialize["nodes"] = o.Nodes
	}
	if !IsNil(o.ActivationData) {
		toSerialize["activationData"] = o.ActivationData
	}
	if !IsNil(o.SecondsSinceHeartbeat) {
		toSerialize["secondsSinceHeartbeat"] = o.SecondsSinceHeartbeat
	}
	if !IsNil(o.KubernetesVersion) {
		toSerialize["kubernetesVersion"] = o.KubernetesVersion
	}
	if !IsNil(o.Namespace) {
		toSerialize["namespace"] = o.Namespace
	}
	if !IsNil(o.LicenseExpiryDate) {
		toSerialize["licenseExpiryDate"] = o.LicenseExpiryDate
	}
	if !IsNil(o.IsManaged) {
		toSerialize["isManaged"] = o.IsManaged
	}
	if !IsNil(o.IsHelmManaged) {
		toSerialize["isHelmManaged"] = o.IsHelmManaged
	}
	if !IsNil(o.AppScopedLogForwarding) {
		toSerialize["appScopedLogForwarding"] = o.AppScopedLogForwarding
	}
	if !IsNil(o.ClusterConfigurationLevel) {
		toSerialize["clusterConfigurationLevel"] = o.ClusterConfigurationLevel
	}
	if !IsNil(o.Features) {
		toSerialize["features"] = o.Features
	}
	if !IsNil(o.Ingress) {
		toSerialize["ingress"] = o.Ingress
	}
	return toSerialize, nil
}

type NullableFabrics struct {
	value *Fabrics
	isSet bool
}

func (v NullableFabrics) Get() *Fabrics {
	return v.value
}

func (v *NullableFabrics) Set(val *Fabrics) {
	v.value = val
	v.isSet = true
}

func (v NullableFabrics) IsSet() bool {
	return v.isSet
}

func (v *NullableFabrics) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFabrics(val *Fabrics) *NullableFabrics {
	return &NullableFabrics{value: val, isSet: true}
}

func (v NullableFabrics) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFabrics) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


