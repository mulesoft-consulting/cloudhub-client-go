/*
Runtime Fabrics API

Runtime Fabrics API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package rtf

import (
	"encoding/json"
)

// checks if the FabricsAssociationsInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FabricsAssociationsInner{}

// FabricsAssociationsInner struct for FabricsAssociationsInner
type FabricsAssociationsInner struct {
	Id *string `json:"id,omitempty"`
	OrganizationId *string `json:"organizationId,omitempty"`
	EnvironmentId *string `json:"environmentId,omitempty"`
	Name *string `json:"name,omitempty"`
	DeploymentStatus *string `json:"deploymentStatus,omitempty"`
	ErrorMessage *string `json:"errorMessage,omitempty"`
}

// NewFabricsAssociationsInner instantiates a new FabricsAssociationsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFabricsAssociationsInner() *FabricsAssociationsInner {
	this := FabricsAssociationsInner{}
	return &this
}

// NewFabricsAssociationsInnerWithDefaults instantiates a new FabricsAssociationsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFabricsAssociationsInnerWithDefaults() *FabricsAssociationsInner {
	this := FabricsAssociationsInner{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *FabricsAssociationsInner) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FabricsAssociationsInner) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *FabricsAssociationsInner) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *FabricsAssociationsInner) SetId(v string) {
	o.Id = &v
}

// GetOrganizationId returns the OrganizationId field value if set, zero value otherwise.
func (o *FabricsAssociationsInner) GetOrganizationId() string {
	if o == nil || IsNil(o.OrganizationId) {
		var ret string
		return ret
	}
	return *o.OrganizationId
}

// GetOrganizationIdOk returns a tuple with the OrganizationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FabricsAssociationsInner) GetOrganizationIdOk() (*string, bool) {
	if o == nil || IsNil(o.OrganizationId) {
		return nil, false
	}
	return o.OrganizationId, true
}

// HasOrganizationId returns a boolean if a field has been set.
func (o *FabricsAssociationsInner) HasOrganizationId() bool {
	if o != nil && !IsNil(o.OrganizationId) {
		return true
	}

	return false
}

// SetOrganizationId gets a reference to the given string and assigns it to the OrganizationId field.
func (o *FabricsAssociationsInner) SetOrganizationId(v string) {
	o.OrganizationId = &v
}

// GetEnvironmentId returns the EnvironmentId field value if set, zero value otherwise.
func (o *FabricsAssociationsInner) GetEnvironmentId() string {
	if o == nil || IsNil(o.EnvironmentId) {
		var ret string
		return ret
	}
	return *o.EnvironmentId
}

// GetEnvironmentIdOk returns a tuple with the EnvironmentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FabricsAssociationsInner) GetEnvironmentIdOk() (*string, bool) {
	if o == nil || IsNil(o.EnvironmentId) {
		return nil, false
	}
	return o.EnvironmentId, true
}

// HasEnvironmentId returns a boolean if a field has been set.
func (o *FabricsAssociationsInner) HasEnvironmentId() bool {
	if o != nil && !IsNil(o.EnvironmentId) {
		return true
	}

	return false
}

// SetEnvironmentId gets a reference to the given string and assigns it to the EnvironmentId field.
func (o *FabricsAssociationsInner) SetEnvironmentId(v string) {
	o.EnvironmentId = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *FabricsAssociationsInner) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FabricsAssociationsInner) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *FabricsAssociationsInner) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *FabricsAssociationsInner) SetName(v string) {
	o.Name = &v
}

// GetDeploymentStatus returns the DeploymentStatus field value if set, zero value otherwise.
func (o *FabricsAssociationsInner) GetDeploymentStatus() string {
	if o == nil || IsNil(o.DeploymentStatus) {
		var ret string
		return ret
	}
	return *o.DeploymentStatus
}

// GetDeploymentStatusOk returns a tuple with the DeploymentStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FabricsAssociationsInner) GetDeploymentStatusOk() (*string, bool) {
	if o == nil || IsNil(o.DeploymentStatus) {
		return nil, false
	}
	return o.DeploymentStatus, true
}

// HasDeploymentStatus returns a boolean if a field has been set.
func (o *FabricsAssociationsInner) HasDeploymentStatus() bool {
	if o != nil && !IsNil(o.DeploymentStatus) {
		return true
	}

	return false
}

// SetDeploymentStatus gets a reference to the given string and assigns it to the DeploymentStatus field.
func (o *FabricsAssociationsInner) SetDeploymentStatus(v string) {
	o.DeploymentStatus = &v
}

// GetErrorMessage returns the ErrorMessage field value if set, zero value otherwise.
func (o *FabricsAssociationsInner) GetErrorMessage() string {
	if o == nil || IsNil(o.ErrorMessage) {
		var ret string
		return ret
	}
	return *o.ErrorMessage
}

// GetErrorMessageOk returns a tuple with the ErrorMessage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FabricsAssociationsInner) GetErrorMessageOk() (*string, bool) {
	if o == nil || IsNil(o.ErrorMessage) {
		return nil, false
	}
	return o.ErrorMessage, true
}

// HasErrorMessage returns a boolean if a field has been set.
func (o *FabricsAssociationsInner) HasErrorMessage() bool {
	if o != nil && !IsNil(o.ErrorMessage) {
		return true
	}

	return false
}

// SetErrorMessage gets a reference to the given string and assigns it to the ErrorMessage field.
func (o *FabricsAssociationsInner) SetErrorMessage(v string) {
	o.ErrorMessage = &v
}

func (o FabricsAssociationsInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FabricsAssociationsInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.OrganizationId) {
		toSerialize["organizationId"] = o.OrganizationId
	}
	if !IsNil(o.EnvironmentId) {
		toSerialize["environmentId"] = o.EnvironmentId
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.DeploymentStatus) {
		toSerialize["deploymentStatus"] = o.DeploymentStatus
	}
	if !IsNil(o.ErrorMessage) {
		toSerialize["errorMessage"] = o.ErrorMessage
	}
	return toSerialize, nil
}

type NullableFabricsAssociationsInner struct {
	value *FabricsAssociationsInner
	isSet bool
}

func (v NullableFabricsAssociationsInner) Get() *FabricsAssociationsInner {
	return v.value
}

func (v *NullableFabricsAssociationsInner) Set(val *FabricsAssociationsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableFabricsAssociationsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableFabricsAssociationsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFabricsAssociationsInner(val *FabricsAssociationsInner) *NullableFabricsAssociationsInner {
	return &NullableFabricsAssociationsInner{value: val, isSet: true}
}

func (v NullableFabricsAssociationsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFabricsAssociationsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


