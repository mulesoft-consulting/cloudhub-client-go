/*
Invite API

Description of the Invite API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package invite

import (
	"encoding/json"
)

// checks if the RoleGroups type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RoleGroups{}

// RoleGroups struct for RoleGroups
type RoleGroups struct {
	RoleGroupId *string `json:"role_group_id,omitempty"`
	Name *string `json:"name,omitempty"`
}

// NewRoleGroups instantiates a new RoleGroups object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRoleGroups() *RoleGroups {
	this := RoleGroups{}
	return &this
}

// NewRoleGroupsWithDefaults instantiates a new RoleGroups object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRoleGroupsWithDefaults() *RoleGroups {
	this := RoleGroups{}
	return &this
}

// GetRoleGroupId returns the RoleGroupId field value if set, zero value otherwise.
func (o *RoleGroups) GetRoleGroupId() string {
	if o == nil || IsNil(o.RoleGroupId) {
		var ret string
		return ret
	}
	return *o.RoleGroupId
}

// GetRoleGroupIdOk returns a tuple with the RoleGroupId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoleGroups) GetRoleGroupIdOk() (*string, bool) {
	if o == nil || IsNil(o.RoleGroupId) {
		return nil, false
	}
	return o.RoleGroupId, true
}

// HasRoleGroupId returns a boolean if a field has been set.
func (o *RoleGroups) HasRoleGroupId() bool {
	if o != nil && !IsNil(o.RoleGroupId) {
		return true
	}

	return false
}

// SetRoleGroupId gets a reference to the given string and assigns it to the RoleGroupId field.
func (o *RoleGroups) SetRoleGroupId(v string) {
	o.RoleGroupId = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *RoleGroups) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoleGroups) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *RoleGroups) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *RoleGroups) SetName(v string) {
	o.Name = &v
}

func (o RoleGroups) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RoleGroups) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.RoleGroupId) {
		toSerialize["role_group_id"] = o.RoleGroupId
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	return toSerialize, nil
}

type NullableRoleGroups struct {
	value *RoleGroups
	isSet bool
}

func (v NullableRoleGroups) Get() *RoleGroups {
	return v.value
}

func (v *NullableRoleGroups) Set(val *RoleGroups) {
	v.value = val
	v.isSet = true
}

func (v NullableRoleGroups) IsSet() bool {
	return v.isSet
}

func (v *NullableRoleGroups) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRoleGroups(val *RoleGroups) *NullableRoleGroups {
	return &NullableRoleGroups{value: val, isSet: true}
}

func (v NullableRoleGroups) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRoleGroups) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


