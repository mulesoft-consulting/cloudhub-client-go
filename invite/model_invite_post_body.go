/*
Invite API

Description of the Invite API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package invite

import (
	"encoding/json"
)

// checks if the InvitePostBody type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &InvitePostBody{}

// InvitePostBody struct for InvitePostBody
type InvitePostBody struct {
	Email *string `json:"email,omitempty"`
	RoleGroups *RoleGroups `json:"role_groups,omitempty"`
}

// NewInvitePostBody instantiates a new InvitePostBody object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInvitePostBody() *InvitePostBody {
	this := InvitePostBody{}
	return &this
}

// NewInvitePostBodyWithDefaults instantiates a new InvitePostBody object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInvitePostBodyWithDefaults() *InvitePostBody {
	this := InvitePostBody{}
	return &this
}

// GetEmail returns the Email field value if set, zero value otherwise.
func (o *InvitePostBody) GetEmail() string {
	if o == nil || IsNil(o.Email) {
		var ret string
		return ret
	}
	return *o.Email
}

// GetEmailOk returns a tuple with the Email field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvitePostBody) GetEmailOk() (*string, bool) {
	if o == nil || IsNil(o.Email) {
		return nil, false
	}
	return o.Email, true
}

// HasEmail returns a boolean if a field has been set.
func (o *InvitePostBody) HasEmail() bool {
	if o != nil && !IsNil(o.Email) {
		return true
	}

	return false
}

// SetEmail gets a reference to the given string and assigns it to the Email field.
func (o *InvitePostBody) SetEmail(v string) {
	o.Email = &v
}

// GetRoleGroups returns the RoleGroups field value if set, zero value otherwise.
func (o *InvitePostBody) GetRoleGroups() RoleGroups {
	if o == nil || IsNil(o.RoleGroups) {
		var ret RoleGroups
		return ret
	}
	return *o.RoleGroups
}

// GetRoleGroupsOk returns a tuple with the RoleGroups field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvitePostBody) GetRoleGroupsOk() (*RoleGroups, bool) {
	if o == nil || IsNil(o.RoleGroups) {
		return nil, false
	}
	return o.RoleGroups, true
}

// HasRoleGroups returns a boolean if a field has been set.
func (o *InvitePostBody) HasRoleGroups() bool {
	if o != nil && !IsNil(o.RoleGroups) {
		return true
	}

	return false
}

// SetRoleGroups gets a reference to the given RoleGroups and assigns it to the RoleGroups field.
func (o *InvitePostBody) SetRoleGroups(v RoleGroups) {
	o.RoleGroups = &v
}

func (o InvitePostBody) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o InvitePostBody) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Email) {
		toSerialize["email"] = o.Email
	}
	if !IsNil(o.RoleGroups) {
		toSerialize["role_groups"] = o.RoleGroups
	}
	return toSerialize, nil
}

type NullableInvitePostBody struct {
	value *InvitePostBody
	isSet bool
}

func (v NullableInvitePostBody) Get() *InvitePostBody {
	return v.value
}

func (v *NullableInvitePostBody) Set(val *InvitePostBody) {
	v.value = val
	v.isSet = true
}

func (v NullableInvitePostBody) IsSet() bool {
	return v.isSet
}

func (v *NullableInvitePostBody) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInvitePostBody(val *InvitePostBody) *NullableInvitePostBody {
	return &NullableInvitePostBody{value: val, isSet: true}
}

func (v NullableInvitePostBody) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInvitePostBody) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


