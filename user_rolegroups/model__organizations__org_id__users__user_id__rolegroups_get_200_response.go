/*
User RoleGroups API

Description of the User Group API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package user_rolegroups

import (
	"encoding/json"
)

// checks if the OrganizationsOrgIdUsersUserIdRolegroupsGet200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OrganizationsOrgIdUsersUserIdRolegroupsGet200Response{}

// OrganizationsOrgIdUsersUserIdRolegroupsGet200Response struct for OrganizationsOrgIdUsersUserIdRolegroupsGet200Response
type OrganizationsOrgIdUsersUserIdRolegroupsGet200Response struct {
	Data []Rolegroup `json:"data,omitempty"`
	Total *int32 `json:"total,omitempty"`
}

// NewOrganizationsOrgIdUsersUserIdRolegroupsGet200Response instantiates a new OrganizationsOrgIdUsersUserIdRolegroupsGet200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOrganizationsOrgIdUsersUserIdRolegroupsGet200Response() *OrganizationsOrgIdUsersUserIdRolegroupsGet200Response {
	this := OrganizationsOrgIdUsersUserIdRolegroupsGet200Response{}
	return &this
}

// NewOrganizationsOrgIdUsersUserIdRolegroupsGet200ResponseWithDefaults instantiates a new OrganizationsOrgIdUsersUserIdRolegroupsGet200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOrganizationsOrgIdUsersUserIdRolegroupsGet200ResponseWithDefaults() *OrganizationsOrgIdUsersUserIdRolegroupsGet200Response {
	this := OrganizationsOrgIdUsersUserIdRolegroupsGet200Response{}
	return &this
}

// GetData returns the Data field value if set, zero value otherwise.
func (o *OrganizationsOrgIdUsersUserIdRolegroupsGet200Response) GetData() []Rolegroup {
	if o == nil || IsNil(o.Data) {
		var ret []Rolegroup
		return ret
	}
	return o.Data
}

// GetDataOk returns a tuple with the Data field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganizationsOrgIdUsersUserIdRolegroupsGet200Response) GetDataOk() ([]Rolegroup, bool) {
	if o == nil || IsNil(o.Data) {
		return nil, false
	}
	return o.Data, true
}

// HasData returns a boolean if a field has been set.
func (o *OrganizationsOrgIdUsersUserIdRolegroupsGet200Response) HasData() bool {
	if o != nil && !IsNil(o.Data) {
		return true
	}

	return false
}

// SetData gets a reference to the given []Rolegroup and assigns it to the Data field.
func (o *OrganizationsOrgIdUsersUserIdRolegroupsGet200Response) SetData(v []Rolegroup) {
	o.Data = v
}

// GetTotal returns the Total field value if set, zero value otherwise.
func (o *OrganizationsOrgIdUsersUserIdRolegroupsGet200Response) GetTotal() int32 {
	if o == nil || IsNil(o.Total) {
		var ret int32
		return ret
	}
	return *o.Total
}

// GetTotalOk returns a tuple with the Total field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganizationsOrgIdUsersUserIdRolegroupsGet200Response) GetTotalOk() (*int32, bool) {
	if o == nil || IsNil(o.Total) {
		return nil, false
	}
	return o.Total, true
}

// HasTotal returns a boolean if a field has been set.
func (o *OrganizationsOrgIdUsersUserIdRolegroupsGet200Response) HasTotal() bool {
	if o != nil && !IsNil(o.Total) {
		return true
	}

	return false
}

// SetTotal gets a reference to the given int32 and assigns it to the Total field.
func (o *OrganizationsOrgIdUsersUserIdRolegroupsGet200Response) SetTotal(v int32) {
	o.Total = &v
}

func (o OrganizationsOrgIdUsersUserIdRolegroupsGet200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OrganizationsOrgIdUsersUserIdRolegroupsGet200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Data) {
		toSerialize["data"] = o.Data
	}
	if !IsNil(o.Total) {
		toSerialize["total"] = o.Total
	}
	return toSerialize, nil
}

type NullableOrganizationsOrgIdUsersUserIdRolegroupsGet200Response struct {
	value *OrganizationsOrgIdUsersUserIdRolegroupsGet200Response
	isSet bool
}

func (v NullableOrganizationsOrgIdUsersUserIdRolegroupsGet200Response) Get() *OrganizationsOrgIdUsersUserIdRolegroupsGet200Response {
	return v.value
}

func (v *NullableOrganizationsOrgIdUsersUserIdRolegroupsGet200Response) Set(val *OrganizationsOrgIdUsersUserIdRolegroupsGet200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableOrganizationsOrgIdUsersUserIdRolegroupsGet200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableOrganizationsOrgIdUsersUserIdRolegroupsGet200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOrganizationsOrgIdUsersUserIdRolegroupsGet200Response(val *OrganizationsOrgIdUsersUserIdRolegroupsGet200Response) *NullableOrganizationsOrgIdUsersUserIdRolegroupsGet200Response {
	return &NullableOrganizationsOrgIdUsersUserIdRolegroupsGet200Response{value: val, isSet: true}
}

func (v NullableOrganizationsOrgIdUsersUserIdRolegroupsGet200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOrganizationsOrgIdUsersUserIdRolegroupsGet200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


