openapi: 3.0.0
info:
  description: Description of the VPC API
  title: VPC API
  version: 1.0.1
servers:
- description: Anypoint Cloudhub
  url: https://anypoint.mulesoft.com/cloudhub/api/
- description: Anypoint Cloudhub EU
  url: https://eu1.anypoint.mulesoft.com/cloudhub/api/
- description: Anypoint Cloudhub GOV
  url: https://gov.anypoint.mulesoft.com/cloudhub/api/
security:
- bearerAuth: []
paths:
  /organizations/{orgId}/vpcs:
    get:
      description: Returns a list of VPCs for the given organization id
      parameters:
      - description: The organization Id
        explode: false
        in: path
        name: orgId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "401":
          description: Access token is missing or invalid
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_organizations__orgId__vpcs_get_200_response'
          description: Success response
      summary: Returns a list of vpcs.
    post:
      description: Creates a new VPC for the probided organization
      parameters:
      - description: The organization Id
        explode: false
        in: path
        name: orgId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/vpcCore'
        description: VPC Object don't
        required: true
      responses:
        "401":
          description: Access token is missing or invalid
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_organizations__orgId__vpcs_post_400_response'
          description: Bad request response
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/vpc'
          description: Success response
      summary: Creates a new VPC in the provided organization.
  /organizations/{orgId}/vpcs/{vpcId}:
    delete:
      description: Delete a VPC by its given id for the given organization id.
      parameters:
      - description: The organization Id
        explode: false
        in: path
        name: orgId
        required: true
        schema:
          type: string
        style: simple
      - description: The VPC Id
        explode: false
        in: path
        name: vpcId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "401":
          description: Access token is missing or invalid
        "204":
          description: Success response
      summary: Delete a VPC by its id.
    get:
      description: Returns the vpc with the given id in the given organization id
      parameters:
      - description: The organization Id
        explode: false
        in: path
        name: orgId
        required: true
        schema:
          type: string
        style: simple
      - description: The VPC Id
        explode: false
        in: path
        name: vpcId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "401":
          description: Access token is missing or invalid
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/vpc'
          description: Success response
      summary: Returns the vpc instance with the given id.
    put:
      description: "Changes the configuration of the VPC by overriding the values\
        \ of the properties passed in the JSON. ownerId, region and cidrBlock cannot\
        \ be overriden. Organizations that do not own the VPC can only update isDefault\
        \ and associatedEnvironments."
      parameters:
      - description: The organization Id
        explode: false
        in: path
        name: orgId
        required: true
        schema:
          type: string
        style: simple
      - description: The VPC Id
        explode: false
        in: path
        name: vpcId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/vpcCore'
        description: VPC Object don't
        required: true
      responses:
        "401":
          description: Access token is missing or invalid
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_organizations__orgId__vpcs_post_400_response'
          description: Bad request response
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/vpc'
          description: Success response
      summary: Update the VPC configuration
components:
  responses:
    UnauthorizedError:
      description: Access token is missing or invalid
    BadRequestError:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/_organizations__orgId__vpcs_post_400_response'
      description: Bad request response
    SuccessGetVPC:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/vpc'
      description: Success response
    SuccessPostVPC:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/vpc'
      description: Success response
    SuccessPutVPC:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/vpc'
      description: Success response
    SuccessDeleteVPC:
      description: Success response
    SuccessListVPCs:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/_organizations__orgId__vpcs_get_200_response'
      description: Success response
  schemas:
    vpc:
      allOf:
      - $ref: '#/components/schemas/vpcId'
      - $ref: '#/components/schemas/vpcCore'
      title: vpc
    vpcCore:
      properties:
        isDefault:
          default: false
          title: isDefault
          type: boolean
        name:
          example: myAwesomeVPC
          title: name
          type: string
        ownerId:
          example: 0000-1111-2222-3333-4444
          title: ownerId
          type: string
        region:
          example: us-east-1
          title: region
          type: string
        sharedWith:
          default: []
          example:
          - 0000000-1111-2222-3333-44444444444
          items:
            type: string
          title: sharedWith
          type: array
        associatedEnvironments:
          default: []
          example:
          - eeeeb145-6f79-402d-85fc-8c90905d2490
          items:
            description: Environment Id.
            title: associatedEnvironment
            type: string
          title: associatedEnvironments
          type: array
        cidrBlock:
          default: 10.0.0.0/20
          description: An explanation about the purpose of this instance.
          title: cidrBlock
          type: string
        firewallRules:
          default: []
          example:
          - cidrBlock: 0.0.0.0/0
            protocol: tcp
            fromPort: 8081
            toPort: 8082
          - cidrBlock: 192.168.1.0/24
            protocol: tcp
            fromPort: 8091
            toPort: 8092
          items:
            $ref: '#/components/schemas/firewallRule'
          title: firewallRules
          type: array
        internalDns:
          $ref: '#/components/schemas/internalDns'
        vpcRoutes:
          default: []
          example:
          - Next Hop: Local
            CIDR: 10.0.0.0/20
          - Next Hop: Internet Gateway
            CIDR: 0.0.0.0/0
          items:
            $ref: '#/components/schemas/vpcRoute'
          title: vpcRoutes
          type: array
      title: vpcCore
      type: object
    _organizations__orgId__vpcs_get_200_response:
      example:
        total: 0
        data:
        - null
        - null
      properties:
        data:
          items:
            $ref: '#/components/schemas/vpc'
          title: List of vpcs
          type: array
        total:
          title: Total number of results
          type: integer
      type: object
    _organizations__orgId__vpcs_post_400_response:
      properties:
        status:
          default: 400
          title: the response status code
          type: integer
        message:
          example: "vpcs limit has been reached (max=1, use=1) for the organization"
          title: the error message
          type: string
      type: object
    vpcId:
      properties:
        id:
          description: The vpc Id
          example: vpc-0b111d1a1ace2a12f
          title: id
          type: string
      required:
      - id
      title: vpcId
      type: object
      example: null
    firewallRule:
      properties:
        cidrBlock:
          default: ""
          description: An explanation about the purpose of this instance.
          title: cidrBlock schema
          type: string
        fromPort:
          default: 0
          description: An explanation about the purpose of this instance.
          title: fromPort schema
          type: integer
        protocol:
          default: ""
          description: An explanation about the purpose of this instance.
          title: protocol schema
          type: string
        toPort:
          default: 0
          description: An explanation about the purpose of this instance.
          title: toPort schema
          type: integer
      required:
      - cidrBlock
      - fromPort
      - protocol
      - toPort
      title: firewallRule
      type: object
    internalDns:
      default:
        dnsServers: []
        specialDomains: []
      properties:
        dnsServers:
          default: []
          items:
            type: string
          title: dnsServers
          type: array
        specialDomains:
          default: []
          items:
            type: string
          title: specialDomains
          type: array
      required:
      - dnsServers
      - specialDomains
      title: internalDns
      type: object
    vpcRoute:
      properties:
        CIDR:
          default: ""
          title: CIDR
          type: string
        Next Hop:
          default: ""
          title: NextHop
          type: string
      required:
      - CIDR
      - Next Hop
      title: vpcRoute
      type: object
  securitySchemes:
    bearerAuth:
      bearerFormat: JWT
      scheme: bearer
      type: http
