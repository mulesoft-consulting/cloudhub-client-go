/*
VPC API

Description of the VPC API

API version: 1.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vpc

import (
	"encoding/json"
)

// checks if the VpcCore type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &VpcCore{}

// VpcCore struct for VpcCore
type VpcCore struct {
	IsDefault *bool `json:"isDefault,omitempty"`
	Name *string `json:"name,omitempty"`
	OwnerId *string `json:"ownerId,omitempty"`
	Region *string `json:"region,omitempty"`
	SharedWith []string `json:"sharedWith,omitempty"`
	AssociatedEnvironments []string `json:"associatedEnvironments,omitempty"`
	// An explanation about the purpose of this instance.
	CidrBlock *string `json:"cidrBlock,omitempty"`
	FirewallRules []FirewallRule `json:"firewallRules,omitempty"`
	InternalDns *InternalDns `json:"internalDns,omitempty"`
	VpcRoutes []VpcRoute `json:"vpcRoutes,omitempty"`
}

// NewVpcCore instantiates a new VpcCore object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVpcCore() *VpcCore {
	this := VpcCore{}
	var isDefault bool = false
	this.IsDefault = &isDefault
	var cidrBlock string = "10.0.0.0/20"
	this.CidrBlock = &cidrBlock
	var internalDns InternalDns = {"dnsServers":[],"specialDomains":[]}
	this.InternalDns = &internalDns
	return &this
}

// NewVpcCoreWithDefaults instantiates a new VpcCore object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVpcCoreWithDefaults() *VpcCore {
	this := VpcCore{}
	var isDefault bool = false
	this.IsDefault = &isDefault
	var cidrBlock string = "10.0.0.0/20"
	this.CidrBlock = &cidrBlock
	var internalDns InternalDns = {"dnsServers":[],"specialDomains":[]}
	this.InternalDns = &internalDns
	return &this
}

// GetIsDefault returns the IsDefault field value if set, zero value otherwise.
func (o *VpcCore) GetIsDefault() bool {
	if o == nil || IsNil(o.IsDefault) {
		var ret bool
		return ret
	}
	return *o.IsDefault
}

// GetIsDefaultOk returns a tuple with the IsDefault field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VpcCore) GetIsDefaultOk() (*bool, bool) {
	if o == nil || IsNil(o.IsDefault) {
		return nil, false
	}
	return o.IsDefault, true
}

// HasIsDefault returns a boolean if a field has been set.
func (o *VpcCore) HasIsDefault() bool {
	if o != nil && !IsNil(o.IsDefault) {
		return true
	}

	return false
}

// SetIsDefault gets a reference to the given bool and assigns it to the IsDefault field.
func (o *VpcCore) SetIsDefault(v bool) {
	o.IsDefault = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *VpcCore) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VpcCore) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *VpcCore) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *VpcCore) SetName(v string) {
	o.Name = &v
}

// GetOwnerId returns the OwnerId field value if set, zero value otherwise.
func (o *VpcCore) GetOwnerId() string {
	if o == nil || IsNil(o.OwnerId) {
		var ret string
		return ret
	}
	return *o.OwnerId
}

// GetOwnerIdOk returns a tuple with the OwnerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VpcCore) GetOwnerIdOk() (*string, bool) {
	if o == nil || IsNil(o.OwnerId) {
		return nil, false
	}
	return o.OwnerId, true
}

// HasOwnerId returns a boolean if a field has been set.
func (o *VpcCore) HasOwnerId() bool {
	if o != nil && !IsNil(o.OwnerId) {
		return true
	}

	return false
}

// SetOwnerId gets a reference to the given string and assigns it to the OwnerId field.
func (o *VpcCore) SetOwnerId(v string) {
	o.OwnerId = &v
}

// GetRegion returns the Region field value if set, zero value otherwise.
func (o *VpcCore) GetRegion() string {
	if o == nil || IsNil(o.Region) {
		var ret string
		return ret
	}
	return *o.Region
}

// GetRegionOk returns a tuple with the Region field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VpcCore) GetRegionOk() (*string, bool) {
	if o == nil || IsNil(o.Region) {
		return nil, false
	}
	return o.Region, true
}

// HasRegion returns a boolean if a field has been set.
func (o *VpcCore) HasRegion() bool {
	if o != nil && !IsNil(o.Region) {
		return true
	}

	return false
}

// SetRegion gets a reference to the given string and assigns it to the Region field.
func (o *VpcCore) SetRegion(v string) {
	o.Region = &v
}

// GetSharedWith returns the SharedWith field value if set, zero value otherwise.
func (o *VpcCore) GetSharedWith() []string {
	if o == nil || IsNil(o.SharedWith) {
		var ret []string
		return ret
	}
	return o.SharedWith
}

// GetSharedWithOk returns a tuple with the SharedWith field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VpcCore) GetSharedWithOk() ([]string, bool) {
	if o == nil || IsNil(o.SharedWith) {
		return nil, false
	}
	return o.SharedWith, true
}

// HasSharedWith returns a boolean if a field has been set.
func (o *VpcCore) HasSharedWith() bool {
	if o != nil && !IsNil(o.SharedWith) {
		return true
	}

	return false
}

// SetSharedWith gets a reference to the given []string and assigns it to the SharedWith field.
func (o *VpcCore) SetSharedWith(v []string) {
	o.SharedWith = v
}

// GetAssociatedEnvironments returns the AssociatedEnvironments field value if set, zero value otherwise.
func (o *VpcCore) GetAssociatedEnvironments() []string {
	if o == nil || IsNil(o.AssociatedEnvironments) {
		var ret []string
		return ret
	}
	return o.AssociatedEnvironments
}

// GetAssociatedEnvironmentsOk returns a tuple with the AssociatedEnvironments field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VpcCore) GetAssociatedEnvironmentsOk() ([]string, bool) {
	if o == nil || IsNil(o.AssociatedEnvironments) {
		return nil, false
	}
	return o.AssociatedEnvironments, true
}

// HasAssociatedEnvironments returns a boolean if a field has been set.
func (o *VpcCore) HasAssociatedEnvironments() bool {
	if o != nil && !IsNil(o.AssociatedEnvironments) {
		return true
	}

	return false
}

// SetAssociatedEnvironments gets a reference to the given []string and assigns it to the AssociatedEnvironments field.
func (o *VpcCore) SetAssociatedEnvironments(v []string) {
	o.AssociatedEnvironments = v
}

// GetCidrBlock returns the CidrBlock field value if set, zero value otherwise.
func (o *VpcCore) GetCidrBlock() string {
	if o == nil || IsNil(o.CidrBlock) {
		var ret string
		return ret
	}
	return *o.CidrBlock
}

// GetCidrBlockOk returns a tuple with the CidrBlock field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VpcCore) GetCidrBlockOk() (*string, bool) {
	if o == nil || IsNil(o.CidrBlock) {
		return nil, false
	}
	return o.CidrBlock, true
}

// HasCidrBlock returns a boolean if a field has been set.
func (o *VpcCore) HasCidrBlock() bool {
	if o != nil && !IsNil(o.CidrBlock) {
		return true
	}

	return false
}

// SetCidrBlock gets a reference to the given string and assigns it to the CidrBlock field.
func (o *VpcCore) SetCidrBlock(v string) {
	o.CidrBlock = &v
}

// GetFirewallRules returns the FirewallRules field value if set, zero value otherwise.
func (o *VpcCore) GetFirewallRules() []FirewallRule {
	if o == nil || IsNil(o.FirewallRules) {
		var ret []FirewallRule
		return ret
	}
	return o.FirewallRules
}

// GetFirewallRulesOk returns a tuple with the FirewallRules field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VpcCore) GetFirewallRulesOk() ([]FirewallRule, bool) {
	if o == nil || IsNil(o.FirewallRules) {
		return nil, false
	}
	return o.FirewallRules, true
}

// HasFirewallRules returns a boolean if a field has been set.
func (o *VpcCore) HasFirewallRules() bool {
	if o != nil && !IsNil(o.FirewallRules) {
		return true
	}

	return false
}

// SetFirewallRules gets a reference to the given []FirewallRule and assigns it to the FirewallRules field.
func (o *VpcCore) SetFirewallRules(v []FirewallRule) {
	o.FirewallRules = v
}

// GetInternalDns returns the InternalDns field value if set, zero value otherwise.
func (o *VpcCore) GetInternalDns() InternalDns {
	if o == nil || IsNil(o.InternalDns) {
		var ret InternalDns
		return ret
	}
	return *o.InternalDns
}

// GetInternalDnsOk returns a tuple with the InternalDns field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VpcCore) GetInternalDnsOk() (*InternalDns, bool) {
	if o == nil || IsNil(o.InternalDns) {
		return nil, false
	}
	return o.InternalDns, true
}

// HasInternalDns returns a boolean if a field has been set.
func (o *VpcCore) HasInternalDns() bool {
	if o != nil && !IsNil(o.InternalDns) {
		return true
	}

	return false
}

// SetInternalDns gets a reference to the given InternalDns and assigns it to the InternalDns field.
func (o *VpcCore) SetInternalDns(v InternalDns) {
	o.InternalDns = &v
}

// GetVpcRoutes returns the VpcRoutes field value if set, zero value otherwise.
func (o *VpcCore) GetVpcRoutes() []VpcRoute {
	if o == nil || IsNil(o.VpcRoutes) {
		var ret []VpcRoute
		return ret
	}
	return o.VpcRoutes
}

// GetVpcRoutesOk returns a tuple with the VpcRoutes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VpcCore) GetVpcRoutesOk() ([]VpcRoute, bool) {
	if o == nil || IsNil(o.VpcRoutes) {
		return nil, false
	}
	return o.VpcRoutes, true
}

// HasVpcRoutes returns a boolean if a field has been set.
func (o *VpcCore) HasVpcRoutes() bool {
	if o != nil && !IsNil(o.VpcRoutes) {
		return true
	}

	return false
}

// SetVpcRoutes gets a reference to the given []VpcRoute and assigns it to the VpcRoutes field.
func (o *VpcCore) SetVpcRoutes(v []VpcRoute) {
	o.VpcRoutes = v
}

func (o VpcCore) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o VpcCore) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.IsDefault) {
		toSerialize["isDefault"] = o.IsDefault
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.OwnerId) {
		toSerialize["ownerId"] = o.OwnerId
	}
	if !IsNil(o.Region) {
		toSerialize["region"] = o.Region
	}
	if !IsNil(o.SharedWith) {
		toSerialize["sharedWith"] = o.SharedWith
	}
	if !IsNil(o.AssociatedEnvironments) {
		toSerialize["associatedEnvironments"] = o.AssociatedEnvironments
	}
	if !IsNil(o.CidrBlock) {
		toSerialize["cidrBlock"] = o.CidrBlock
	}
	if !IsNil(o.FirewallRules) {
		toSerialize["firewallRules"] = o.FirewallRules
	}
	if !IsNil(o.InternalDns) {
		toSerialize["internalDns"] = o.InternalDns
	}
	if !IsNil(o.VpcRoutes) {
		toSerialize["vpcRoutes"] = o.VpcRoutes
	}
	return toSerialize, nil
}

type NullableVpcCore struct {
	value *VpcCore
	isSet bool
}

func (v NullableVpcCore) Get() *VpcCore {
	return v.value
}

func (v *NullableVpcCore) Set(val *VpcCore) {
	v.value = val
	v.isSet = true
}

func (v NullableVpcCore) IsSet() bool {
	return v.isSet
}

func (v *NullableVpcCore) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVpcCore(val *VpcCore) *NullableVpcCore {
	return &NullableVpcCore{value: val, isSet: true}
}

func (v NullableVpcCore) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVpcCore) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


