/*
Authorization API

Description of the Authentication API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package authorization

import (
	"encoding/json"
)

// checks if the LoginPost200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &LoginPost200Response{}

// LoginPost200Response struct for LoginPost200Response
type LoginPost200Response struct {
	AccessToken *string `json:"access_token,omitempty"`
	RedirectUrl *string `json:"redirectUrl,omitempty"`
	TokenType *string `json:"token_type,omitempty"`
}

// NewLoginPost200Response instantiates a new LoginPost200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLoginPost200Response() *LoginPost200Response {
	this := LoginPost200Response{}
	return &this
}

// NewLoginPost200ResponseWithDefaults instantiates a new LoginPost200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLoginPost200ResponseWithDefaults() *LoginPost200Response {
	this := LoginPost200Response{}
	return &this
}

// GetAccessToken returns the AccessToken field value if set, zero value otherwise.
func (o *LoginPost200Response) GetAccessToken() string {
	if o == nil || IsNil(o.AccessToken) {
		var ret string
		return ret
	}
	return *o.AccessToken
}

// GetAccessTokenOk returns a tuple with the AccessToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LoginPost200Response) GetAccessTokenOk() (*string, bool) {
	if o == nil || IsNil(o.AccessToken) {
		return nil, false
	}
	return o.AccessToken, true
}

// HasAccessToken returns a boolean if a field has been set.
func (o *LoginPost200Response) HasAccessToken() bool {
	if o != nil && !IsNil(o.AccessToken) {
		return true
	}

	return false
}

// SetAccessToken gets a reference to the given string and assigns it to the AccessToken field.
func (o *LoginPost200Response) SetAccessToken(v string) {
	o.AccessToken = &v
}

// GetRedirectUrl returns the RedirectUrl field value if set, zero value otherwise.
func (o *LoginPost200Response) GetRedirectUrl() string {
	if o == nil || IsNil(o.RedirectUrl) {
		var ret string
		return ret
	}
	return *o.RedirectUrl
}

// GetRedirectUrlOk returns a tuple with the RedirectUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LoginPost200Response) GetRedirectUrlOk() (*string, bool) {
	if o == nil || IsNil(o.RedirectUrl) {
		return nil, false
	}
	return o.RedirectUrl, true
}

// HasRedirectUrl returns a boolean if a field has been set.
func (o *LoginPost200Response) HasRedirectUrl() bool {
	if o != nil && !IsNil(o.RedirectUrl) {
		return true
	}

	return false
}

// SetRedirectUrl gets a reference to the given string and assigns it to the RedirectUrl field.
func (o *LoginPost200Response) SetRedirectUrl(v string) {
	o.RedirectUrl = &v
}

// GetTokenType returns the TokenType field value if set, zero value otherwise.
func (o *LoginPost200Response) GetTokenType() string {
	if o == nil || IsNil(o.TokenType) {
		var ret string
		return ret
	}
	return *o.TokenType
}

// GetTokenTypeOk returns a tuple with the TokenType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LoginPost200Response) GetTokenTypeOk() (*string, bool) {
	if o == nil || IsNil(o.TokenType) {
		return nil, false
	}
	return o.TokenType, true
}

// HasTokenType returns a boolean if a field has been set.
func (o *LoginPost200Response) HasTokenType() bool {
	if o != nil && !IsNil(o.TokenType) {
		return true
	}

	return false
}

// SetTokenType gets a reference to the given string and assigns it to the TokenType field.
func (o *LoginPost200Response) SetTokenType(v string) {
	o.TokenType = &v
}

func (o LoginPost200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o LoginPost200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AccessToken) {
		toSerialize["access_token"] = o.AccessToken
	}
	if !IsNil(o.RedirectUrl) {
		toSerialize["redirectUrl"] = o.RedirectUrl
	}
	if !IsNil(o.TokenType) {
		toSerialize["token_type"] = o.TokenType
	}
	return toSerialize, nil
}

type NullableLoginPost200Response struct {
	value *LoginPost200Response
	isSet bool
}

func (v NullableLoginPost200Response) Get() *LoginPost200Response {
	return v.value
}

func (v *NullableLoginPost200Response) Set(val *LoginPost200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableLoginPost200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableLoginPost200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLoginPost200Response(val *LoginPost200Response) *NullableLoginPost200Response {
	return &NullableLoginPost200Response{value: val, isSet: true}
}

func (v NullableLoginPost200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLoginPost200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


